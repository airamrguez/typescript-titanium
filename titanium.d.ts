/*
   Typescript Titanium - 3.1.1.GA
   Typescipt-Titanium may be freely distributed under the MIT license.
   This source code was auto-generated (Wed Jun 19 2013 20:51:26 GMT+0200 (CEST)}}).
   More information at https://github.com/alvivi/typescript-titanium.
 */
declare interface TitaniumXMLEntityStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    notationName : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    publicId : string;
    systemId : string;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getNotationName () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getPublicId () : string;
    getSystemId () : string;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
}
declare interface TitaniumXMLNodeStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
}
declare interface TitaniumXMLNotationStatic {
    bubbleParent : bool;
    publicId : string;
    systemId : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getPublicId () : string;
    getSystemId () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumXMLEntityReferenceStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
}
declare interface TitaniumXMLCDATASectionStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    data : string;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    length : number;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    appendData (arg : string) : void;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    deleteData (offset : number, count : number) : void;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getData () : string;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLength () : number;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    insertData (offset : number, arg : string) : void;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    replaceData (offset : number, count : number, arg : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setData (data : string) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
    splitText (offset : number) : TitaniumXMLTextStatic;
    substringData (offset : number, count : number) : string;
}
declare interface TitaniumXMLDocumentStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    doctype : TitaniumXMLDocumentTypeStatic;
    documentElement : TitaniumXMLElementStatic;
    firstChild : TitaniumXMLNodeStatic;
    implementation : TitaniumXMLDOMImplementationStatic;
    lastChild : TitaniumXMLNodeStatic;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    createAttribute (name : string) : TitaniumXMLAttrStatic;
    createAttributeNS (namespaceURI : string, name : string) : TitaniumXMLAttrStatic;
    createCDATASection (data : string) : TitaniumXMLCDATASectionStatic;
    createComment (data : string) : TitaniumXMLCommentStatic;
    createDocumentFragment () : TitaniumXMLDocumentFragmentStatic;
    createElement (tagName : string) : TitaniumXMLElementStatic;
    createElementNS (namespaceURI : string, name : string) : TitaniumXMLElementStatic;
    createEntityReference (name : string) : TitaniumXMLEntityReferenceStatic;
    createProcessingInstruction (target : string, data : string) : TitaniumXMLProcessingInstructionStatic;
    createTextNode (data : string) : TitaniumXMLTextStatic;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getDoctype () : TitaniumXMLDocumentTypeStatic;
    getDocumentElement () : TitaniumXMLElementStatic;
    getElementById (elementId : string) : TitaniumXMLElementStatic;
    getElementsByTagName (tagname : string) : TitaniumXMLNodeListStatic;
    getElementsByTagNameNS (namespaceURI : string, localname : string) : TitaniumXMLNodeListStatic;
    getFirstChild () : TitaniumXMLNodeStatic;
    getImplementation () : TitaniumXMLDOMImplementationStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    importNode (importedNode : TitaniumXMLNodeStatic, deep : bool) : TitaniumXMLNodeStatic;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
}
declare interface TitaniumXMLProcessingInstructionStatic {
    bubbleParent : bool;
    data : string;
    target : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getData () : string;
    getTarget () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setData (data : string) : void;
}
declare interface TitaniumXMLCommentStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    data : string;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    length : number;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    appendData (arg : string) : void;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    deleteData (offset : number, count : number) : void;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getData () : string;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLength () : number;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    insertData (offset : number, arg : string) : void;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    replaceData (offset : number, count : number, arg : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setData (data : string) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
    substringData (offset : number, count : number) : string;
}
declare interface TitaniumXMLAttrStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    localName : string;
    name : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    ownerElement : TitaniumXMLElementStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    specified : bool;
    text : string;
    textContent : string;
    value : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLocalName () : string;
    getName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getOwnerElement () : TitaniumXMLElementStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getSpecified () : bool;
    getText () : string;
    getTextContent () : string;
    getValue () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
    setValue (value : string) : void;
}
declare interface TitaniumXMLDOMImplementationStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createDocument (namespaceURI : string, qualifiedName : string, doctype : TitaniumXMLDocumentTypeStatic) : TitaniumXMLDocumentStatic;
    createDocumentType (qualifiedName : string, publicId : string, systemId : string) : TitaniumXMLDocumentTypeStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    hasFeature (feature : string, version : string) : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumXMLNodeListStatic {
    bubbleParent : bool;
    length : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getLength () : number;
    item (index : number) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumXMLNamedNodeMapStatic {
    bubbleParent : bool;
    length : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getLength () : number;
    getNamedItem (name : string) : TitaniumXMLNodeStatic;
    getNamedItemNS (namespaceURI : string, localName : string) : TitaniumXMLNodeStatic;
    item (index : number) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeNamedItem (name : string) : TitaniumXMLNodeStatic;
    removeNamedItemNS (namespaceURI : string, localName : string) : TitaniumXMLNodeStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setNamedItem (node : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setNamedItemNS (node : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
}
declare interface TitaniumXMLDocumentTypeStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    entities : TitaniumXMLNamedNodeMapStatic;
    firstChild : TitaniumXMLNodeStatic;
    internalSubset : string;
    lastChild : TitaniumXMLNodeStatic;
    localName : string;
    name : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    notations : TitaniumXMLNamedNodeMapStatic;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    publicId : string;
    systemId : string;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getEntities () : TitaniumXMLNamedNodeMapStatic;
    getFirstChild () : TitaniumXMLNodeStatic;
    getInternalSubset () : string;
    getLastChild () : TitaniumXMLNodeStatic;
    getLocalName () : string;
    getName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getNotations () : TitaniumXMLNamedNodeMapStatic;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getPublicId () : string;
    getSystemId () : string;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
}
declare interface TitaniumXMLElementStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    tagName : string;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    fireEvent (name : string, event : any) : void;
    getAttribute (name : string) : string;
    getAttributeNS (namespaceURI : string, localName : string) : string;
    getAttributeNode (name : string) : TitaniumXMLAttrStatic;
    getAttributeNodeNS (namespaceURI : string, localName : string) : TitaniumXMLAttrStatic;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getElementsByTagName (name : string) : TitaniumXMLNodeListStatic;
    getElementsByTagNameNS (namespaceURI : string, localName : string) : TitaniumXMLNodeListStatic;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getTagName () : string;
    getText () : string;
    getTextContent () : string;
    hasAttribute (name : string) : bool;
    hasAttributeNS (namespaceURI : string, localName : string) : bool;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeAttribute (name : string) : void;
    removeAttributeNS (namespaceURI : string, localName : string) : void;
    removeAttributeNode (oldAttr : TitaniumXMLAttrStatic) : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setAttribute (name : string, value : string) : void;
    setAttributeNS (namespaceURI : string, qualifiedName : string, value : string) : void;
    setAttributeNode (newAttr : TitaniumXMLAttrStatic) : TitaniumXMLAttrStatic;
    setAttributeNodeNS (newAttr : TitaniumXMLAttrStatic) : TitaniumXMLAttrStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
}
declare interface TitaniumXMLCharacterDataStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    data : string;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    length : number;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    appendData (arg : string) : void;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    deleteData (offset : number, count : number) : void;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getData () : string;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLength () : number;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    insertData (offset : number, arg : string) : void;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    replaceData (offset : number, count : number, arg : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setData (data : string) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
    substringData (offset : number, count : number) : string;
}
declare interface TitaniumXMLDocumentFragmentStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
}
declare interface TitaniumXMLTextStatic {
    ATTRIBUTE_NODE : number;
    CDATA_SECTION_NODE : number;
    COMMENT_NODE : number;
    DOCUMENT_FRAGMENT_NODE : number;
    DOCUMENT_NODE : number;
    DOCUMENT_TYPE_NODE : number;
    ELEMENT_NODE : number;
    ENTITY_NODE : number;
    ENTITY_REFERENCE_NODE : number;
    NOTATION_NODE : number;
    PROCESSING_INSTRUCTION_NODE : number;
    TEXT_NODE : number;
    attributes : TitaniumXMLNamedNodeMapStatic;
    bubbleParent : bool;
    childNodes : TitaniumXMLNodeListStatic;
    data : string;
    firstChild : TitaniumXMLNodeStatic;
    lastChild : TitaniumXMLNodeStatic;
    length : number;
    localName : string;
    namespaceURI : string;
    nextSibling : TitaniumXMLNodeStatic;
    nodeName : string;
    nodeType : number;
    nodeValue : string;
    ownerDocument : TitaniumXMLDocumentStatic;
    parentNode : TitaniumXMLNodeStatic;
    prefix : string;
    previousSibling : TitaniumXMLNodeStatic;
    text : string;
    textContent : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    appendChild (newChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    appendData (arg : string) : void;
    applyProperties (props : any) : void;
    cloneNode (deep : bool) : TitaniumXMLNodeStatic;
    deleteData (offset : number, count : number) : void;
    fireEvent (name : string, event : any) : void;
    getAttributes () : TitaniumXMLNamedNodeMapStatic;
    getBubbleParent () : bool;
    getChildNodes () : TitaniumXMLNodeListStatic;
    getData () : string;
    getFirstChild () : TitaniumXMLNodeStatic;
    getLastChild () : TitaniumXMLNodeStatic;
    getLength () : number;
    getLocalName () : string;
    getNamespaceURI () : string;
    getNextSibling () : TitaniumXMLNodeStatic;
    getNodeName () : string;
    getNodeType () : number;
    getNodeValue () : string;
    getOwnerDocument () : TitaniumXMLDocumentStatic;
    getParentNode () : TitaniumXMLNodeStatic;
    getPrefix () : string;
    getPreviousSibling () : TitaniumXMLNodeStatic;
    getText () : string;
    getTextContent () : string;
    hasAttributes () : bool;
    hasChildNodes () : bool;
    insertBefore (newChild : TitaniumXMLNodeStatic, refChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    insertData (offset : number, arg : string) : void;
    isSupported (feature : string, version : string) : bool;
    normalize () : void;
    removeChild (oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceChild (newChild : TitaniumXMLNodeStatic, oldChild : TitaniumXMLNodeStatic) : TitaniumXMLNodeStatic;
    replaceData (offset : number, count : number, arg : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setData (data : string) : void;
    setLocalName (localName : string) : void;
    setNodeValue (nodeValue : string) : void;
    setPrefix (prefix : string) : void;
    splitText (offset : number) : TitaniumXMLTextStatic;
    substringData (offset : number, count : number) : string;
}
declare interface TitaniumXMLStatic {
    Entity : TitaniumXMLEntityStatic;
    Node : TitaniumXMLNodeStatic;
    Notation : TitaniumXMLNotationStatic;
    EntityReference : TitaniumXMLEntityReferenceStatic;
    CDATASection : TitaniumXMLCDATASectionStatic;
    Document : TitaniumXMLDocumentStatic;
    ProcessingInstruction : TitaniumXMLProcessingInstructionStatic;
    Comment : TitaniumXMLCommentStatic;
    Attr : TitaniumXMLAttrStatic;
    DOMImplementation : TitaniumXMLDOMImplementationStatic;
    NodeList : TitaniumXMLNodeListStatic;
    NamedNodeMap : TitaniumXMLNamedNodeMapStatic;
    DocumentType : TitaniumXMLDocumentTypeStatic;
    Element : TitaniumXMLElementStatic;
    CharacterData : TitaniumXMLCharacterDataStatic;
    DocumentFragment : TitaniumXMLDocumentFragmentStatic;
    Text : TitaniumXMLTextStatic;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    parseString (xml : string) : TitaniumXMLDocumentStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    serializeToString (node : TitaniumXMLNodeStatic) : string;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAndroidNotificationManagerStatic {
    DEFAULT_ALL : number;
    DEFAULT_LIGHTS : number;
    DEFAULT_SOUND : number;
    DEFAULT_VIBRATE : number;
    FLAG_AUTO_CANCEL : number;
    FLAG_INSISTENT : number;
    FLAG_NO_CLEAR : number;
    FLAG_ONGOING_EVENT : number;
    FLAG_ONLY_ALERT_ONCE : number;
    FLAG_SHOW_LIGHTS : number;
    STREAM_DEFAULT : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    cancel (id : number) : void;
    cancelAll () : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    notify (id : number, notification : TitaniumAndroidNotificationStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAndroidCalendarCalendarStatic {
    bubbleParent : bool;
    hidden : bool;
    id : string;
    name : string;
    selected : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createEvent (properties : TitaniumAndroidCalendarEventStatic) : TitaniumAndroidCalendarEventStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getEventById (id : number) : TitaniumAndroidCalendarEventStatic;
    getEventsBetweenDates (date1 : Date, date2 : Date) : any[];
    getEventsInDate (year : number, month : number, day : number) : any[];
    getEventsInMonth (year : number, month : number) : any[];
    getEventsInYear (year : number) : any[];
    getHidden () : bool;
    getId () : string;
    getName () : string;
    getSelected () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAndroidCalendarReminderStatic {
    bubbleParent : bool;
    id : string;
    method : number;
    minutes : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getId () : string;
    getMethod () : number;
    getMinutes () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAndroidCalendarEventStatic {
    alerts : any[];
    allDay : bool;
    begin : Date;
    bubbleParent : bool;
    description : string;
    end : Date;
    extendedProperties : any;
    hasAlarm : bool;
    hasExtendedProperties : bool;
    id : string;
    location : string;
    reminders : any[];
    status : number;
    title : string;
    visibility : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createAlert (data : TitaniumAndroidCalendarAlertStatic) : TitaniumAndroidCalendarAlertStatic;
    createReminder (data : TitaniumAndroidCalendarReminderStatic) : TitaniumAndroidCalendarReminderStatic;
    fireEvent (name : string, event : any) : void;
    getAlerts () : any[];
    getAllDay () : bool;
    getBegin () : Date;
    getBubbleParent () : bool;
    getDescription () : string;
    getEnd () : Date;
    getExtendedProperties () : any;
    getExtendedProperty (name : string) : string;
    getHasAlarm () : bool;
    getHasExtendedProperties () : bool;
    getId () : string;
    getLocation () : string;
    getReminders () : any[];
    getStatus () : number;
    getTitle () : string;
    getVisibility () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setExtendedProperty (name : string, value : string) : void;
}
declare interface TitaniumAndroidCalendarAlertStatic {
    alarmTime : Date;
    begin : Date;
    bubbleParent : bool;
    end : Date;
    eventId : number;
    id : string;
    minutes : number;
    state : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAlarmTime () : Date;
    getBegin () : Date;
    getBubbleParent () : bool;
    getEnd () : Date;
    getEventId () : number;
    getId () : string;
    getMinutes () : number;
    getState () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAndroidCalendarStatic {
    Calendar : TitaniumAndroidCalendarCalendarStatic;
    Reminder : TitaniumAndroidCalendarReminderStatic;
    Event : TitaniumAndroidCalendarEventStatic;
    Alert : TitaniumAndroidCalendarAlertStatic;
    METHOD_ALERT : number;
    METHOD_DEFAULT : number;
    METHOD_EMAIL : number;
    METHOD_SMS : number;
    STATE_DISMISSED : number;
    STATE_FIRED : number;
    STATE_SCHEDULED : number;
    STATUS_CANCELED : number;
    STATUS_CONFIRMED : number;
    STATUS_TENTATIVE : number;
    VISIBILITY_CONFIDENTIAL : number;
    VISIBILITY_DEFAULT : number;
    VISIBILITY_PRIVATE : number;
    VISIBILITY_PUBLIC : number;
    allAlerts : any[];
    allCalendars : any[];
    bubbleParent : bool;
    selectableCalendars : any[];
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAllAlerts () : any[];
    getAllCalendars () : any[];
    getBubbleParent () : bool;
    getCalendarById (id : number) : TitaniumAndroidCalendarCalendarStatic;
    getSelectableCalendars () : any[];
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAndroidNotificationStatic {
    audioStreamType : number;
    bubbleParent : bool;
    contentIntent : TitaniumAndroidPendingIntentStatic;
    contentText : string;
    contentTitle : string;
    contentView : TitaniumAndroidRemoteViewsStatic;
    defaults : number;
    deleteIntent : TitaniumAndroidPendingIntentStatic;
    flags : number;
    icon : number;
    ledARGB : number;
    ledOffMS : number;
    ledOnMS : number;
    number : number;
    sound : string;
    tickerText : string;
    when : Date;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAudioStreamType () : number;
    getBubbleParent () : bool;
    getContentIntent () : TitaniumAndroidPendingIntentStatic;
    getContentText () : string;
    getContentTitle () : string;
    getDefaults () : number;
    getDeleteIntent () : TitaniumAndroidPendingIntentStatic;
    getFlags () : number;
    getIcon () : any;
    getLedARGB () : number;
    getLedOffMS () : number;
    getLedOnMS () : number;
    getNumber () : number;
    getSound () : string;
    getTickerText () : string;
    getWhen () : any;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAudioStreamType (audioStreamType : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setContentIntent (contentIntent : TitaniumAndroidPendingIntentStatic) : void;
    setContentText (contentText : string) : void;
    setContentTitle (contentTitle : string) : void;
    setContentView (contentView : TitaniumAndroidRemoteViewsStatic) : void;
    setDefaults (defaults : number) : void;
    setDeleteIntent (deleteIntent : TitaniumAndroidPendingIntentStatic) : void;
    setFlags (flags : number) : void;
    setIcon (icon : number) : void;
    setLatestEventInfo (contentTitle : string, contentText : string, contentIntent : TitaniumAndroidPendingIntentStatic) : void;
    setLedARGB (ledARGB : number) : void;
    setLedOffMS (ledOffMS : number) : void;
    setLedOnMS (ledOnMS : number) : void;
    setNumber (number : number) : void;
    setSound (sound : string) : void;
    setTickerText (tickerText : string) : void;
    setWhen (when : Date) : void;
}
declare interface TitaniumAndroidIntentStatic {
    action : string;
    bubbleParent : bool;
    className : string;
    data : string;
    flags : number;
    packageName : string;
    type : string;
    url : string;
    addCategory (name : string) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    addFlags (flags : number) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAction () : string;
    getBlobExtra (name : string) : TitaniumBlobStatic;
    getBooleanExtra (name : string) : bool;
    getBubbleParent () : bool;
    getClassName () : string;
    getData () : string;
    getDoubleExtra (name : string) : number;
    getFlags () : number;
    getIntExtra (name : string) : number;
    getLongExtra (name : string) : number;
    getPackageName () : string;
    getStringExtra (name : string) : string;
    getType () : string;
    getUrl () : string;
    hasExtra (name : string) : bool;
    putExtra (name : string, value : any) : void;
    putExtraUri (name : string, value : string) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setFlags (flags : number) : void;
}
declare interface TitaniumAndroidRStatic {
    anim : any;
    array : any;
    attr : any;
    bubbleParent : bool;
    color : any;
    dimen : any;
    drawable : any;
    id : any;
    integer : any;
    layout : any;
    string : any;
    style : any;
    styleable : any;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAndroidActivityStatic {
    actionBar : TitaniumAndroidActionBarStatic;
    bubbleParent : bool;
    intent : TitaniumAndroidIntentStatic;
    onCreateOptionsMenu : (...args : any[]) => any;
    onPrepareOptionsMenu : (...args : any[]) => any;
    requestedOrientation : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    finish () : void;
    fireEvent (name : string, event : any) : void;
    getActionBar () : TitaniumAndroidActionBarStatic;
    getBubbleParent () : bool;
    getIntent () : TitaniumAndroidIntentStatic;
    getOnCreateOptionsMenu () : (...args : any[]) => any;
    getOnPrepareOptionsMenu () : (...args : any[]) => any;
    getString (resourceId : number, format : any) : string;
    invalidateOptionsMenu () : void;
    openOptionsMenu () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setOnCreateOptionsMenu (onCreateOptionsMenu : (...args : any[]) => any) : void;
    setOnPrepareOptionsMenu (onPrepareOptionsMenu : (...args : any[]) => any) : void;
    setRequestedOrientation (orientation : number) : void;
    setResult (resultCode : number, intent? : TitaniumAndroidIntentStatic) : void;
    startActivity (intent : TitaniumAndroidIntentStatic) : void;
    startActivityForResult (intent : TitaniumAndroidIntentStatic, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumAndroidMenuStatic {
    bubbleParent : bool;
    items : any[];
    add (options : any) : TitaniumAndroidMenuItemStatic;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    clear () : void;
    close () : void;
    findItem (item : number) : TitaniumAndroidMenuItemStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getItem (index : number) : TitaniumAndroidMenuItemStatic;
    getItems () : any[];
    hasVisibleItems () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeGroup (groupId : number) : void;
    removeItem (itemId : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setGroupEnabled (groupId : number, enabled : bool) : void;
    setGroupVisible (groupId : number, visible : bool) : void;
    size () : number;
}
declare interface TitaniumAndroidActionBarStatic {
    backgroundImage : string;
    bubbleParent : bool;
    displayHomeAsUp : bool;
    icon : string;
    logo : string;
    onHomeIconItemSelected : (...args : any[]) => any;
    title : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getTitle () : string;
    hide () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDisplayHomeAsUp (displayHomeAsUp : bool) : void;
    setIcon (icon : string) : void;
    setLogo (logo : string) : void;
    setOnHomeIconItemSelected (onHomeIconItemSelected : (...args : any[]) => any) : void;
    setTitle (title : string) : void;
    show () : void;
}
declare interface TitaniumAndroidBroadcastReceiverStatic {
    bubbleParent : bool;
    onReceived : (...args : any[]) => any;
    url : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getOnReceived () : (...args : any[]) => any;
    getUrl () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setOnReceived (onReceived : (...args : any[]) => any) : void;
    setUrl (url : string) : void;
}
declare interface TitaniumAndroidRemoteViewsStatic {
    bubbleParent : bool;
    layoutId : number;
    packageName : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getLayoutId () : number;
    getPackageName () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBoolean (viewId : number, methodName : string, value : bool) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setChronometer (viewId : number, base : Date, format : string, started : bool) : void;
    setDouble (viewId : number, methodName : string, value : number) : void;
    setImageViewResource (viewId : number, srcId : number) : void;
    setImageViewUri (viewId : number, uri : string) : void;
    setInt (viewId : number, methodName : string, value : number) : void;
    setOnClickPendingIntent (viewId : number, pendingIntent : TitaniumAndroidPendingIntentStatic) : void;
    setProgressBar (viewId : number, max : number, progress : number, indeterminate : bool) : void;
    setString (viewId : number, methodName : string, value : string) : void;
    setTextColor (viewId : number, color : number) : void;
    setTextViewText (viewId : number, text : string) : void;
    setUri (viewId : number, methodName : string, value : string) : void;
    setViewVisibility (viewId : number, visibility : number) : void;
}
declare interface TitaniumAndroidPendingIntentStatic {
    bubbleParent : bool;
    flags : number;
    intent : TitaniumAndroidIntentStatic;
    updateCurrentIntent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getFlags () : number;
    getIntent () : TitaniumAndroidIntentStatic;
    getUpdateCurrentIntent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAndroidMenuItemStatic {
    actionView : TitaniumUIViewStatic;
    actionViewExpanded : bool;
    bubbleParent : bool;
    checkable : bool;
    checked : bool;
    enabled : bool;
    groupId : number;
    icon : number;
    itemId : number;
    order : number;
    showAsAction : number;
    title : string;
    titleCondensed : string;
    visible : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    collapseActionView () : void;
    expandActionView () : void;
    fireEvent (name : string, event : any) : void;
    getActionView () : TitaniumUIViewStatic;
    getBubbleParent () : bool;
    getGroupId () : number;
    getItemId () : number;
    getOrder () : number;
    getTitle () : string;
    getTitleCondensed () : string;
    isActionViewExpanded () : bool;
    isCheckable () : bool;
    isChecked () : bool;
    isEnabled () : bool;
    isVisible () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setActionView (actionView : TitaniumUIViewStatic) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCheckable (checkable : bool) : void;
    setChecked (enabled : bool) : void;
    setEnabled (enabled : bool) : void;
    setIcon (icon : number) : void;
    setShowAsAction (showAsAction : number) : void;
    setTitle (title : string) : void;
    setTitleCondensed (titleCondensed : string) : void;
    setVisible (visible : bool) : void;
}
declare interface TitaniumAndroidServiceStatic {
    bubbleParent : bool;
    intent : TitaniumAndroidIntentStatic;
    serviceInstanceId : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getIntent () : TitaniumAndroidIntentStatic;
    getServiceInstanceId () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    start () : void;
    stop () : void;
}
declare interface TitaniumAndroidStatic {
    NotificationManager : TitaniumAndroidNotificationManagerStatic;
    Calendar : TitaniumAndroidCalendarStatic;
    Notification : TitaniumAndroidNotificationStatic;
    Intent : TitaniumAndroidIntentStatic;
    R : TitaniumAndroidRStatic;
    Activity : TitaniumAndroidActivityStatic;
    Menu : TitaniumAndroidMenuStatic;
    ActionBar : TitaniumAndroidActionBarStatic;
    BroadcastReceiver : TitaniumAndroidBroadcastReceiverStatic;
    RemoteViews : TitaniumAndroidRemoteViewsStatic;
    PendingIntent : TitaniumAndroidPendingIntentStatic;
    MenuItem : TitaniumAndroidMenuItemStatic;
    Service : TitaniumAndroidServiceStatic;
    ACTION_AIRPLANE_MODE_CHANGED : string;
    ACTION_ALL_APPS : string;
    ACTION_ANSWER : string;
    ACTION_ATTACH_DATA : string;
    ACTION_BATTERY_CHANGED : string;
    ACTION_BATTERY_LOW : string;
    ACTION_BATTERY_OKAY : string;
    ACTION_BOOT_COMPLETED : string;
    ACTION_BUG_REPORT : string;
    ACTION_CALL : string;
    ACTION_CALL_BUTTON : string;
    ACTION_CAMERA_BUTTON : string;
    ACTION_CHOOSER : string;
    ACTION_CLOSE_SYSTEM_DIALOGS : string;
    ACTION_CONFIGURATION_CHANGED : string;
    ACTION_CREATE_SHORTCUT : string;
    ACTION_DATE_CHANGED : string;
    ACTION_DEFAULT : string;
    ACTION_DELETE : string;
    ACTION_DEVICE_STORAGE_LOW : string;
    ACTION_DIAL : string;
    ACTION_EDIT : string;
    ACTION_GET_CONTENT : string;
    ACTION_GTALK_SERVICE_CONNECTED : string;
    ACTION_GTALK_SERVICE_DISCONNECTED : string;
    ACTION_HEADSET_PLUG : string;
    ACTION_INPUT_METHOD_CHANGED : string;
    ACTION_INSERT : string;
    ACTION_INSERT_OR_EDIT : string;
    ACTION_MAIN : string;
    ACTION_MANAGE_PACKAGE_STORAGE : string;
    ACTION_MEDIA_BAD_REMOVAL : string;
    ACTION_MEDIA_BUTTON : string;
    ACTION_MEDIA_CHECKING : string;
    ACTION_MEDIA_EJECT : string;
    ACTION_MEDIA_MOUNTED : string;
    ACTION_MEDIA_NOFS : string;
    ACTION_MEDIA_REMOVED : string;
    ACTION_MEDIA_SCANNER_FINISHED : string;
    ACTION_MEDIA_SCANNER_SCAN_FILE : string;
    ACTION_MEDIA_SCANNER_STARTED : string;
    ACTION_MEDIA_SHARED : string;
    ACTION_MEDIA_UNMOUNTABLE : string;
    ACTION_MEDIA_UNMOUNTED : string;
    ACTION_NEW_OUTGOING_CALL : string;
    ACTION_PACKAGE_ADDED : string;
    ACTION_PACKAGE_CHANGED : string;
    ACTION_PACKAGE_DATA_CLEARED : string;
    ACTION_PACKAGE_INSTALL : string;
    ACTION_PACKAGE_REMOVED : string;
    ACTION_PACKAGE_REPLACED : string;
    ACTION_PACKAGE_RESTARTED : string;
    ACTION_PICK : string;
    ACTION_PICK_ACTIVITY : string;
    ACTION_POWER_CONNECTED : string;
    ACTION_POWER_DISCONNECTED : string;
    ACTION_POWER_USAGE_SUMMARY : string;
    ACTION_PROVIDER_CHANGED : string;
    ACTION_REBOOT : string;
    ACTION_RUN : string;
    ACTION_SCREEN_OFF : string;
    ACTION_SCREEN_ON : string;
    ACTION_SEARCH : string;
    ACTION_SEARCH_LONG_PRESS : string;
    ACTION_SEND : string;
    ACTION_SENDTO : string;
    ACTION_SEND_MULTIPLE : string;
    ACTION_SET_WALLPAPER : string;
    ACTION_SHUTDOWN : string;
    ACTION_SYNC : string;
    ACTION_SYSTEM_TUTORIAL : string;
    ACTION_TIME_CHANGED : string;
    ACTION_TIME_TICK : string;
    ACTION_UID_REMOVED : string;
    ACTION_UMS_CONNECTED : string;
    ACTION_UMS_DISCONNECTED : string;
    ACTION_USER_PRESENT : string;
    ACTION_VIEW : string;
    ACTION_VOICE_COMMAND : string;
    ACTION_WALLPAPER_CHANGED : string;
    ACTION_WEB_SEARCH : string;
    CATEGORY_ALTERNATIVE : string;
    CATEGORY_BROWSABLE : string;
    CATEGORY_DEFAULT : string;
    CATEGORY_DEVELOPMENT_PREFERENCE : string;
    CATEGORY_EMBED : string;
    CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST : string;
    CATEGORY_HOME : string;
    CATEGORY_INFO : string;
    CATEGORY_LAUNCHER : string;
    CATEGORY_MONKEY : string;
    CATEGORY_OPENABLE : string;
    CATEGORY_PREFERENCE : string;
    CATEGORY_SAMPLE_CODE : string;
    CATEGORY_SELECTED_ALTERNATIVE : string;
    CATEGORY_TAB : string;
    CATEGORY_TEST : string;
    CATEGORY_UNIT_TEST : string;
    DEFAULT_ALL : number;
    DEFAULT_LIGHTS : number;
    DEFAULT_SOUND : number;
    DEFAULT_VIBRATE : number;
    EXTRA_ALARM_COUNT : string;
    EXTRA_BCC : string;
    EXTRA_CC : string;
    EXTRA_DATA_REMOVED : string;
    EXTRA_DONT_KILL_APP : string;
    EXTRA_EMAIL : string;
    EXTRA_INTENT : string;
    EXTRA_KEY_EVENT : string;
    EXTRA_PHONE_NUMBER : string;
    EXTRA_REPLACING : string;
    EXTRA_SHORTCUT_ICON : string;
    EXTRA_SHORTCUT_ICON_RESOURCE : string;
    EXTRA_SHORTCUT_INTENT : string;
    EXTRA_SHORTCUT_NAME : string;
    EXTRA_STREAM : string;
    EXTRA_SUBJECT : string;
    EXTRA_TEMPLATE : string;
    EXTRA_TEXT : string;
    EXTRA_TITLE : string;
    EXTRA_UID : string;
    FILL_IN_ACTION : number;
    FILL_IN_CATEGORIES : number;
    FILL_IN_COMPONENT : number;
    FILL_IN_DATA : number;
    FILL_IN_PACKAGE : number;
    FLAG_ACTIVITY_BROUGHT_TO_FRONT : number;
    FLAG_ACTIVITY_CLEAR_TOP : number;
    FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET : number;
    FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS : number;
    FLAG_ACTIVITY_FORWARD_RESULT : number;
    FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY : number;
    FLAG_ACTIVITY_MULTIPLE_TASK : number;
    FLAG_ACTIVITY_NEW_TASK : number;
    FLAG_ACTIVITY_NO_ANIMATION : number;
    FLAG_ACTIVITY_NO_HISTORY : number;
    FLAG_ACTIVITY_NO_USER_ACTION : number;
    FLAG_ACTIVITY_PREVIOUS_IS_TOP : number;
    FLAG_ACTIVITY_REORDER_TO_FRONT : number;
    FLAG_ACTIVITY_RESET_TASK_IF_NEEDED : number;
    FLAG_ACTIVITY_SINGLE_TOP : number;
    FLAG_AUTO_CANCEL : number;
    FLAG_CANCEL_CURRENT : number;
    FLAG_DEBUG_LOG_RESOLUTION : number;
    FLAG_FROM_BACKGROUND : number;
    FLAG_GRANT_READ_URI_PERMISSION : number;
    FLAG_GRANT_WRITE_URI_PERMISSION : number;
    FLAG_INSISTENT : number;
    FLAG_NO_CLEAR : number;
    FLAG_NO_CREATE : number;
    FLAG_ONE_SHOT : number;
    FLAG_ONGOING_EVENT : number;
    FLAG_ONLY_ALERT_ONCE : number;
    FLAG_RECEIVER_REGISTERED_ONLY : number;
    FLAG_SHOW_LIGHTS : number;
    FLAG_UPDATE_CURRENT : number;
    PENDING_INTENT_FOR_ACTIVITY : number;
    PENDING_INTENT_FOR_BROADCAST : number;
    PENDING_INTENT_FOR_SERVICE : number;
    PENDING_INTENT_MAX_VALUE : number;
    RESULT_CANCELED : number;
    RESULT_FIRST_USER : number;
    RESULT_OK : number;
    SCREEN_ORIENTATION_BEHIND : number;
    SCREEN_ORIENTATION_LANDSCAPE : number;
    SCREEN_ORIENTATION_NOSENSOR : number;
    SCREEN_ORIENTATION_PORTRAIT : number;
    SCREEN_ORIENTATION_SENSOR : number;
    SCREEN_ORIENTATION_UNSPECIFIED : number;
    SCREEN_ORIENTATION_USER : number;
    SHOW_AS_ACTION_ALWAYS : number;
    SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW : number;
    SHOW_AS_ACTION_IF_ROOM : number;
    SHOW_AS_ACTION_NEVER : number;
    SHOW_AS_ACTION_WITH_TEXT : number;
    START_NOT_STICKY : number;
    START_REDELIVER_INTENT : number;
    STREAM_ALARM : number;
    STREAM_DEFAULT : number;
    STREAM_MUSIC : number;
    STREAM_NOTIFICATION : number;
    STREAM_RING : number;
    STREAM_SYSTEM : number;
    STREAM_VOICE_CALL : number;
    URI_INTENT_SCHEME : number;
    bubbleParent : bool;
    currentActivity : TitaniumAndroidActivityStatic;
    currentService : TitaniumAndroidServiceStatic;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createBroadcastReceiver (parameters? : TitaniumAndroidBroadcastReceiverStatic) : TitaniumAndroidBroadcastReceiverStatic;
    createIntent (parameters? : TitaniumAndroidIntentStatic) : TitaniumAndroidIntentStatic;
    createIntentChooser (intent : TitaniumAndroidIntentStatic, title : string) : TitaniumAndroidIntentStatic;
    createNotification (parameters? : TitaniumAndroidNotificationStatic) : TitaniumAndroidNotificationStatic;
    createPendingIntent (parameters? : TitaniumAndroidPendingIntentStatic) : TitaniumAndroidPendingIntentStatic;
    createRemoteViews (parameters? : TitaniumAndroidRemoteViewsStatic) : TitaniumAndroidRemoteViewsStatic;
    createService (intent : TitaniumAndroidIntentStatic) : TitaniumAndroidServiceStatic;
    createServiceIntent (options : ServiceIntentOptionsStatic) : TitaniumAndroidIntentStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getCurrentActivity () : TitaniumAndroidActivityStatic;
    getCurrentService () : TitaniumAndroidServiceStatic;
    isServiceRunning (intent : TitaniumAndroidIntentStatic) : bool;
    registerBroadcastReceiver (broadcastReceiver : TitaniumAndroidBroadcastReceiverStatic, actions : any[]) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    startService (intent : TitaniumAndroidIntentStatic) : void;
    stopService (intent : TitaniumAndroidIntentStatic) : void;
    unregisterBroadcastReceiver (broadcastReceiver : TitaniumAndroidBroadcastReceiverStatic) : void;
}
declare interface TitaniumFacebookLoginButtonStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    enabled : bool;
    focusable : bool;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    style : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getEnabled () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getStyle () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setStyle (style : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumFacebookStatic {
    LoginButton : TitaniumFacebookLoginButtonStatic;
    BUTTON_STYLE_NORMAL : number;
    BUTTON_STYLE_WIDE : number;
    accessToken : string;
    appid : string;
    bubbleParent : bool;
    expirationDate : Date;
    forceDialogAuth : bool;
    loggedIn : bool;
    permissions : any[];
    uid : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    authorize () : void;
    createLoginButton (parameters? : TitaniumFacebookLoginButtonStatic) : TitaniumFacebookLoginButtonStatic;
    dialog (action : string, params : any, callback : (...args : any[]) => any) : void;
    fireEvent (name : string, event : any) : void;
    getAccessToken () : string;
    getAppid () : string;
    getBubbleParent () : bool;
    getExpirationDate () : Date;
    getForceDialogAuth () : bool;
    getLoggedIn () : bool;
    getPermissions () : any[];
    getUid () : string;
    logout () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    request (method : string, params : any, callback : (...args : any[]) => any) : void;
    requestWithGraphPath (path : string, params : any, httpMethod : string, callback : (...args : any[]) => any) : void;
    setAccessToken (accessToken : string) : void;
    setAppid (appid : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setExpirationDate (expirationDate : Date) : void;
    setForceDialogAuth (forceDialogAuth : bool) : void;
    setLoggedIn (loggedIn : bool) : void;
    setPermissions (permissions : any[]) : void;
    setUid (uid : string) : void;
}
declare interface TitaniumBlobStreamStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    isReadable () : bool;
    isWriteable () : bool;
    read (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    write (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
}
declare interface TitaniumUIIPhoneListViewStyleStatic {
    GROUPED : number;
    PLAIN : number;
}
declare interface TitaniumUIIPhoneScrollIndicatorStyleStatic {
    BLACK : number;
    DEFAULT : number;
    WHITE : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneActivityIndicatorStyleStatic {
    BIG : number;
    DARK : number;
    PLAIN : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneNavigationGroupStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    window : TitaniumUIWindowStatic;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close (window : TitaniumUIWindowStatic, options : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getWindow () : TitaniumUIWindowStatic;
    getZIndex () : number;
    hide () : void;
    open (window : TitaniumUIWindowStatic, options : any) : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIPhoneAlertDialogStyleStatic {
    DEFAULT : number;
    LOGIN_AND_PASSWORD_INPUT : number;
    PLAIN_TEXT_INPUT : number;
    SECURE_TEXT_INPUT : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneListViewScrollPositionStatic {
    BOTTOM : number;
    MIDDLE : number;
    NONE : number;
    TOP : number;
}
declare interface TitaniumUIIPhoneTableViewCellSelectionStyleStatic {
    BLUE : number;
    GRAY : number;
    NONE : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneListViewCellSelectionStyleStatic {
    BLUE : number;
    GRAY : number;
    NONE : number;
}
declare interface TitaniumUIIPhoneProgressBarStyleStatic {
    BAR : number;
    DEFAULT : number;
    PLAIN : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneTableViewSeparatorStyleStatic {
    NONE : number;
    SINGLE_LINE : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneTableViewStyleStatic {
    GROUPED : number;
    PLAIN : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneSystemButtonStatic {
    ACTION : number;
    ACTIVITY : number;
    ADD : number;
    BOOKMARKS : number;
    CAMERA : number;
    CANCEL : number;
    COMPOSE : number;
    CONTACT_ADD : number;
    DISCLOSURE : number;
    DONE : number;
    EDIT : number;
    FAST_FORWARD : number;
    FIXED_SPACE : number;
    FLEXIBLE_SPACE : number;
    INFO_DARK : number;
    INFO_LIGHT : number;
    ORGANIZE : number;
    PAUSE : number;
    PLAY : number;
    REFRESH : number;
    REPLY : number;
    REWIND : number;
    SAVE : number;
    SPINNER : number;
    STOP : number;
    TRASH : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneRowAnimationStyleStatic {
    BOTTOM : number;
    FADE : number;
    LEFT : number;
    NONE : number;
    RIGHT : number;
    TOP : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneSystemButtonStyleStatic {
    BAR : number;
    BORDERED : number;
    DONE : number;
    PLAIN : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneAnimationStyleStatic {
    CURL_DOWN : number;
    CURL_UP : number;
    FLIP_FROM_LEFT : number;
    FLIP_FROM_RIGHT : number;
    NONE : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneSystemIconStatic {
    BOOKMARKS : number;
    CONTACTS : number;
    DOWNLOADS : number;
    FAVORITES : number;
    FEATURED : number;
    HISTORY : number;
    MORE : number;
    MOST_RECENT : number;
    MOST_VIEWED : number;
    RECENTS : number;
    SEARCH : number;
    TOP_RATED : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneStatusBarStatic {
    ANIMATION_STYLE_FADE : number;
    ANIMATION_STYLE_NONE : number;
    ANIMATION_STYLE_SLIDE : number;
    DEFAULT : number;
    GRAY : number;
    GREY : number;
    OPAQUE_BLACK : number;
    TRANSLUCENT_BLACK : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneTableViewScrollPositionStatic {
    BOTTOM : number;
    MIDDLE : number;
    NONE : number;
    TOP : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIIPhoneStatic {
    ListViewStyle : TitaniumUIIPhoneListViewStyleStatic;
    ScrollIndicatorStyle : TitaniumUIIPhoneScrollIndicatorStyleStatic;
    ActivityIndicatorStyle : TitaniumUIIPhoneActivityIndicatorStyleStatic;
    NavigationGroup : TitaniumUIIPhoneNavigationGroupStatic;
    AlertDialogStyle : TitaniumUIIPhoneAlertDialogStyleStatic;
    ListViewScrollPosition : TitaniumUIIPhoneListViewScrollPositionStatic;
    TableViewCellSelectionStyle : TitaniumUIIPhoneTableViewCellSelectionStyleStatic;
    ListViewCellSelectionStyle : TitaniumUIIPhoneListViewCellSelectionStyleStatic;
    ProgressBarStyle : TitaniumUIIPhoneProgressBarStyleStatic;
    TableViewSeparatorStyle : TitaniumUIIPhoneTableViewSeparatorStyleStatic;
    TableViewStyle : TitaniumUIIPhoneTableViewStyleStatic;
    SystemButton : TitaniumUIIPhoneSystemButtonStatic;
    RowAnimationStyle : TitaniumUIIPhoneRowAnimationStyleStatic;
    SystemButtonStyle : TitaniumUIIPhoneSystemButtonStyleStatic;
    AnimationStyle : TitaniumUIIPhoneAnimationStyleStatic;
    SystemIcon : TitaniumUIIPhoneSystemIconStatic;
    StatusBar : TitaniumUIIPhoneStatusBarStatic;
    TableViewScrollPosition : TitaniumUIIPhoneTableViewScrollPositionStatic;
    MODAL_PRESENTATION_CURRENT_CONTEXT : number;
    MODAL_PRESENTATION_FORMSHEET : number;
    MODAL_PRESENTATION_FULLSCREEN : number;
    MODAL_PRESENTATION_PAGESHEET : number;
    MODAL_TRANSITION_STYLE_COVER_VERTICAL : number;
    MODAL_TRANSITION_STYLE_CROSS_DISSOLVE : number;
    MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL : number;
    MODAL_TRANSITION_STYLE_PARTIAL_CURL : number;
    appBadge : number;
    appSupportsShakeToEdit : bool;
    bubbleParent : bool;
    statusBarHidden : bool;
    statusBarStyle : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createNavigationGroup (parameters? : TitaniumUIIPhoneNavigationGroupStatic) : TitaniumUIIPhoneNavigationGroupStatic;
    fireEvent (name : string, event : any) : void;
    getAppBadge () : number;
    getAppSupportsShakeToEdit () : bool;
    getBubbleParent () : bool;
    getStatusBarHidden () : bool;
    getStatusBarStyle () : number;
    hideStatusBar (params? : HideStatusBarParamsStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAppBadge (appBadge : number) : void;
    setAppSupportsShakeToEdit (appSupportsShakeToEdit : bool) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setStatusBarHidden (statusBarHidden : bool) : void;
    setStatusBarStyle (statusBarStyle : number) : void;
    showStatusBar (params? : ShowStatusBarParamsStatic) : void;
}
declare interface TitaniumUIIPadSplitWindowStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backButtonTitle : string;
    backButtonTitleImage : string;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    barColor : string;
    barImage : string;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    detailView : TitaniumUIViewStatic;
    fullscreen : bool;
    height : number;
    horizontalWrap : bool;
    layout : string;
    left : number;
    leftNavButton : TitaniumUIViewStatic;
    masterView : TitaniumUIViewStatic;
    modal : bool;
    navBarHidden : bool;
    opacity : number;
    orientation : number;
    orientationModes : any[];
    rect : DimensionStatic;
    right : number;
    rightNavButton : TitaniumUIViewStatic;
    showMasterInPortrait : bool;
    size : DimensionStatic;
    tabBarHidden : bool;
    title : string;
    titleControl : TitaniumUIViewStatic;
    titleImage : string;
    titlePrompt : string;
    titleid : string;
    titlepromptid : string;
    toolbar : any[];
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    translucent : bool;
    url : string;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close (params? : TitaniumUIAnimationStatic) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackButtonTitle () : string;
    getBackButtonTitleImage () : any;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBarColor () : string;
    getBarImage () : string;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getDetailView () : TitaniumUIViewStatic;
    getFullscreen () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getLayout () : string;
    getLeft () : any;
    getLeftNavButton () : TitaniumUIViewStatic;
    getMasterView () : TitaniumUIViewStatic;
    getModal () : bool;
    getNavBarHidden () : bool;
    getOpacity () : number;
    getOrientation () : number;
    getOrientationModes () : any[];
    getRect () : DimensionStatic;
    getRight () : any;
    getRightNavButton () : TitaniumUIViewStatic;
    getShowMasterInPortrait () : bool;
    getSize () : DimensionStatic;
    getTabBarHidden () : bool;
    getTitle () : string;
    getTitleControl () : TitaniumUIViewStatic;
    getTitleImage () : string;
    getTitlePrompt () : string;
    getTitleid () : string;
    getTitlepromptid () : string;
    getToolbar () : any[];
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getTranslucent () : bool;
    getUrl () : string;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    hideTabBar () : void;
    open (params? : OpenWindowParamsStatic) : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackButtonTitle (backButtonTitle : string) : void;
    setBackButtonTitleImage (backButtonTitleImage : string) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBarColor (barColor : string) : void;
    setBarImage (barImage : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setFullscreen (fullscreen : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setLeftNavButton (leftNavButton : TitaniumUIViewStatic) : void;
    setModal (modal : bool) : void;
    setNavBarHidden (navBarHidden : bool) : void;
    setOpacity (opacity : number) : void;
    setOrientationModes (orientationModes : any[]) : void;
    setRight (right : number) : void;
    setRightNavButton (rightNavButton : TitaniumUIViewStatic) : void;
    setShowMasterInPortrait (showMasterInPortrait : bool) : void;
    setTabBarHidden (tabBarHidden : bool) : void;
    setTitle (title : string) : void;
    setTitleControl (titleControl : TitaniumUIViewStatic) : void;
    setTitleImage (titleImage : string) : void;
    setTitlePrompt (titlePrompt : string) : void;
    setTitleid (titleid : string) : void;
    setTitlepromptid (titlepromptid : string) : void;
    setToolbar (toolbar : any[]) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setTranslucent (translucent : bool) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIPadDocumentViewerStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setUrl (url : string) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show (animated : bool, view : any) : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIPadPopoverStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    arrowDirection : number;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    layout : string;
    left : number;
    leftNavButton : any;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    rightNavButton : any;
    size : DimensionStatic;
    title : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getArrowDirection () : number;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getLayout () : string;
    getLeft () : any;
    getLeftNavButton () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getRightNavButton () : any;
    getSize () : DimensionStatic;
    getTitle () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setLeftNavButton (leftNavButton : any) : void;
    setOpacity (opacity : number) : void;
    setPassthroughViews (passthroughViews : any[]) : void;
    setRight (right : number) : void;
    setRightNavButton (rightNavButton : any) : void;
    setTitle (title : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIPadStatic {
    SplitWindow : TitaniumUIIPadSplitWindowStatic;
    DocumentViewer : TitaniumUIIPadDocumentViewerStatic;
    Popover : TitaniumUIIPadPopoverStatic;
    POPOVER_ARROW_DIRECTION_ANY : number;
    POPOVER_ARROW_DIRECTION_DOWN : number;
    POPOVER_ARROW_DIRECTION_LEFT : number;
    POPOVER_ARROW_DIRECTION_RIGHT : number;
    POPOVER_ARROW_DIRECTION_UNKNOWN : number;
    POPOVER_ARROW_DIRECTION_UP : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createDocumentViewer (parameters? : TitaniumUIIPadDocumentViewerStatic) : TitaniumUIIPadDocumentViewerStatic;
    createPopover (parameters? : TitaniumUIIPadPopoverStatic) : TitaniumUIIPadPopoverStatic;
    createSplitWindow (parameters? : TitaniumUIIPadSplitWindowStatic) : TitaniumUIIPadSplitWindowStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIEmailDialogStatic {
    CANCELLED : number;
    FAILED : number;
    SAVED : number;
    SENT : number;
    barColor : string;
    bccRecipients : any[];
    bubbleParent : bool;
    ccRecipients : any[];
    html : bool;
    messageBody : string;
    subject : string;
    toRecipients : any[];
    addAttachment (attachment : TitaniumBlobStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBarColor () : string;
    getBccRecipients () : any[];
    getBubbleParent () : bool;
    getCcRecipients () : any[];
    getHtml () : bool;
    getMessageBody () : string;
    getSubject () : string;
    getToRecipients () : any[];
    isSupported () : bool;
    open (properties : any) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBarColor (barColor : string) : void;
    setBccRecipients (bccRecipients : any[]) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCcRecipients (ccRecipients : any[]) : void;
    setHtml (html : bool) : void;
    setMessageBody (messageBody : string) : void;
    setSubject (subject : string) : void;
    setToRecipients (toRecipients : any[]) : void;
}
declare interface TitaniumUICoverFlowViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    images : any[];
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    selected : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getImages () : any;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSelected () : number;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setImage (index : number, image : string) : void;
    setImages (images : any[]) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSelected (selected : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIImageViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    animating : bool;
    autorotate : bool;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    decodeRetries : number;
    defaultImage : string;
    duration : number;
    enableZoomControls : bool;
    enabled : bool;
    focusable : bool;
    height : number;
    hires : bool;
    horizontalWrap : bool;
    image : string;
    images : any[];
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    paused : bool;
    preventDefaultImage : bool;
    rect : DimensionStatic;
    repeatCount : number;
    reverse : bool;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    url : string;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getAnimating () : bool;
    getAutorotate () : bool;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getDecodeRetries () : number;
    getDefaultImage () : string;
    getDuration () : number;
    getEnableZoomControls () : bool;
    getEnabled () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHires () : bool;
    getHorizontalWrap () : bool;
    getImage () : any;
    getImages () : any;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getPaused () : bool;
    getPreventDefaultImage () : bool;
    getRect () : DimensionStatic;
    getRepeatCount () : number;
    getReverse () : bool;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getUrl () : string;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    pause () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    resume () : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setDecodeRetries (decodeRetries : number) : void;
    setDefaultImage (defaultImage : string) : void;
    setDuration (duration : number) : void;
    setEnableZoomControls (enableZoomControls : bool) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHires (hires : bool) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setImage (image : string) : void;
    setImages (images : any[]) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setPreventDefaultImage (preventDefaultImage : bool) : void;
    setRepeatCount (repeatCount : number) : void;
    setReverse (reverse : bool) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setUrl (url : string) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    start () : void;
    startLayout () : void;
    stop () : void;
    toBlob () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIMaskedImageStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    image : string;
    layout : string;
    left : number;
    mask : string;
    mode : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    tint : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getImage () : string;
    getLayout () : string;
    getLeft () : any;
    getMask () : string;
    getMode () : number;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getTint () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setImage (image : string) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setMask (mask : string) : void;
    setMode (mode : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setTint (tint : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIMobileWebTableViewSeparatorStyleStatic {
    NONE : number;
    SINGLE_LINE : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumUIMobileWebNavigationGroupStatic {
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    layout : string;
    left : number;
    navBarAtTop : bool;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    window : TitaniumUIWindowStatic;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close (window : TitaniumUIWindowStatic, options : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getLayout () : string;
    getLeft () : any;
    getNavBarAtTop () : bool;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getWindow () : TitaniumUIWindowStatic;
    getZIndex () : number;
    hide () : void;
    open (window : TitaniumUIWindowStatic, options : any) : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setNavBarAtTop (navBarAtTop : bool) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIMobileWebStatic {
    TableViewSeparatorStyle : TitaniumUIMobileWebTableViewSeparatorStyleStatic;
    NavigationGroup : TitaniumUIMobileWebNavigationGroupStatic;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createNavigationGroup (parameters? : TitaniumUIMobileWebNavigationGroupStatic) : TitaniumUIMobileWebNavigationGroupStatic;
    fireEvent (name : string, event : any) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumUITextFieldStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    appearance : number;
    autoLink : number;
    autocapitalization : number;
    autocorrect : bool;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderStyle : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    clearButtonMode : number;
    clearOnEdit : bool;
    color : string;
    editable : bool;
    ellipsize : bool;
    enableReturnKey : bool;
    enabled : bool;
    focusable : bool;
    font : FontStatic;
    height : number;
    hintText : string;
    horizontalWrap : bool;
    keepScreenOn : bool;
    keyboardToolbar : any[];
    keyboardToolbarColor : string;
    keyboardToolbarHeight : number;
    keyboardType : number;
    layout : string;
    left : number;
    leftButton : any;
    leftButtonMode : number;
    leftButtonPadding : number;
    maxLength : number;
    minimumFontSize : number;
    opacity : number;
    paddingLeft : number;
    paddingRight : number;
    passwordMask : bool;
    rect : DimensionStatic;
    returnKeyType : number;
    right : number;
    rightButton : any;
    rightButtonMode : number;
    rightButtonPadding : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    suppressReturn : bool;
    textAlign : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    value : string;
    verticalAlign : number;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    blur () : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    focus () : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getAppearance () : number;
    getAutoLink () : number;
    getAutocapitalization () : number;
    getAutocorrect () : bool;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderStyle () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getClearButtonMode () : number;
    getClearOnEdit () : bool;
    getColor () : string;
    getEditable () : bool;
    getEllipsize () : bool;
    getEnableReturnKey () : bool;
    getEnabled () : bool;
    getFocusable () : bool;
    getFont () : FontStatic;
    getHeight () : any;
    getHintText () : string;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getKeyboardToolbar () : any;
    getKeyboardToolbarColor () : string;
    getKeyboardToolbarHeight () : number;
    getKeyboardType () : number;
    getLayout () : string;
    getLeft () : any;
    getLeftButton () : any;
    getLeftButtonMode () : number;
    getLeftButtonPadding () : number;
    getMaxLength () : number;
    getMinimumFontSize () : number;
    getOpacity () : number;
    getPaddingLeft () : number;
    getPaddingRight () : number;
    getPasswordMask () : bool;
    getRect () : DimensionStatic;
    getReturnKeyType () : number;
    getRight () : any;
    getRightButton () : any;
    getRightButtonMode () : number;
    getRightButtonPadding () : number;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getSuppressReturn () : bool;
    getTextAlign () : any;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getValue () : string;
    getVerticalAlign () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hasText () : bool;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setAppearance (appearance : number) : void;
    setAutoLink (autoLink : number) : void;
    setAutocapitalization (autocapitalization : number) : void;
    setAutocorrect (autocorrect : bool) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderStyle (borderStyle : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setClearButtonMode (clearButtonMode : number) : void;
    setClearOnEdit (clearOnEdit : bool) : void;
    setColor (color : string) : void;
    setEditable (editable : bool) : void;
    setEllipsize (ellipsize : bool) : void;
    setEnableReturnKey (enableReturnKey : bool) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setFont (font : FontStatic) : void;
    setHeight (height : number) : void;
    setHintText (hintText : string) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setKeyboardToolbar (keyboardToolbar : any[]) : void;
    setKeyboardToolbarColor (keyboardToolbarColor : string) : void;
    setKeyboardToolbarHeight (keyboardToolbarHeight : number) : void;
    setKeyboardType (keyboardType : number) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setLeftButton (leftButton : any) : void;
    setLeftButtonMode (leftButtonMode : number) : void;
    setLeftButtonPadding (leftButtonPadding : number) : void;
    setMaxLength (maxLength : number) : void;
    setMinimumFontSize (minimumFontSize : number) : void;
    setOpacity (opacity : number) : void;
    setPaddingLeft (paddingLeft : number) : void;
    setPaddingRight (paddingRight : number) : void;
    setPasswordMask (passwordMask : bool) : void;
    setReturnKeyType (returnKeyType : number) : void;
    setRight (right : number) : void;
    setRightButton (rightButton : any) : void;
    setRightButtonMode (rightButtonMode : number) : void;
    setRightButtonPadding (rightButtonPadding : number) : void;
    setSelection (start : number, end : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setSuppressReturn (suppressReturn : bool) : void;
    setTextAlign (textAlign : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setValue (value : string) : void;
    setVerticalAlign (verticalAlign : number) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUITextAreaStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    appearance : number;
    autoLink : number;
    autocapitalization : number;
    autocorrect : bool;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    clearOnEdit : bool;
    color : string;
    editable : bool;
    ellipsize : bool;
    enableReturnKey : bool;
    enabled : bool;
    focusable : bool;
    font : FontStatic;
    height : number;
    hintText : string;
    horizontalWrap : bool;
    keepScreenOn : bool;
    keyboardToolbar : any[];
    keyboardToolbarColor : string;
    keyboardToolbarHeight : number;
    keyboardType : number;
    layout : string;
    left : number;
    maxLength : number;
    opacity : number;
    rect : DimensionStatic;
    returnKeyType : number;
    right : number;
    scrollable : bool;
    scrollsToTop : bool;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    suppressReturn : bool;
    textAlign : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    value : string;
    verticalAlign : number;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    blur () : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    focus () : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getAppearance () : number;
    getAutoLink () : number;
    getAutocapitalization () : number;
    getAutocorrect () : bool;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getClearOnEdit () : bool;
    getColor () : string;
    getEditable () : bool;
    getEllipsize () : bool;
    getEnableReturnKey () : bool;
    getEnabled () : bool;
    getFocusable () : bool;
    getFont () : FontStatic;
    getHeight () : any;
    getHintText () : string;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getKeyboardToolbar () : any;
    getKeyboardToolbarColor () : string;
    getKeyboardToolbarHeight () : number;
    getKeyboardType () : number;
    getLayout () : string;
    getLeft () : any;
    getMaxLength () : number;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getReturnKeyType () : number;
    getRight () : any;
    getScrollable () : bool;
    getScrollsToTop () : bool;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getSuppressReturn () : bool;
    getTextAlign () : any;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getValue () : string;
    getVerticalAlign () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hasText () : bool;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setAppearance (appearance : number) : void;
    setAutoLink (autoLink : number) : void;
    setAutocapitalization (autocapitalization : number) : void;
    setAutocorrect (autocorrect : bool) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setClearOnEdit (clearOnEdit : bool) : void;
    setColor (color : string) : void;
    setEditable (editable : bool) : void;
    setEllipsize (ellipsize : bool) : void;
    setEnableReturnKey (enableReturnKey : bool) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setFont (font : FontStatic) : void;
    setHeight (height : number) : void;
    setHintText (hintText : string) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setKeyboardToolbar (keyboardToolbar : any[]) : void;
    setKeyboardToolbarColor (keyboardToolbarColor : string) : void;
    setKeyboardToolbarHeight (keyboardToolbarHeight : number) : void;
    setKeyboardType (keyboardType : number) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setMaxLength (maxLength : number) : void;
    setOpacity (opacity : number) : void;
    setReturnKeyType (returnKeyType : number) : void;
    setRight (right : number) : void;
    setScrollable (scrollable : bool) : void;
    setScrollsToTop (scrollsToTop : bool) : void;
    setSelection (start : number, end : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setSuppressReturn (suppressReturn : bool) : void;
    setTextAlign (textAlign : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setValue (value : string) : void;
    setVerticalAlign (verticalAlign : number) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIActivityIndicatorStyleStatic {
    BIG : number;
    BIG_DARK : number;
    DARK : number;
    PLAIN : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUISwitchStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    color : string;
    enabled : bool;
    focusable : bool;
    font : FontStatic;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    style : number;
    textAlign : string;
    title : string;
    titleOff : string;
    titleOn : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    value : bool;
    verticalAlign : number;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getColor () : string;
    getEnabled () : bool;
    getFocusable () : bool;
    getFont () : FontStatic;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getStyle () : number;
    getTextAlign () : any;
    getTitle () : string;
    getTitleOff () : string;
    getTitleOn () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getValue () : bool;
    getVerticalAlign () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setColor (color : string) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setFont (font : FontStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setStyle (style : number) : void;
    setTextAlign (textAlign : string) : void;
    setTitle (title : string) : void;
    setTitleOff (titleOff : string) : void;
    setTitleOn (titleOn : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setValue (value : bool) : void;
    setVerticalAlign (verticalAlign : number) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIOSTabbedBarStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    index : number;
    labels : any[];
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    style : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getIndex () : number;
    getLabels () : any;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getStyle () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setIndex (index : number) : void;
    setLabels (labels : any[]) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setStyle (style : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIOSToolbarStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    barColor : string;
    borderBottom : bool;
    borderColor : string;
    borderRadius : number;
    borderTop : bool;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    items : any[];
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    translucent : bool;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBarColor () : string;
    getBorderBottom () : bool;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderTop () : bool;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getItems () : any[];
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getTranslucent () : bool;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBarColor (barColor : string) : void;
    setBorderBottom (borderBottom : bool) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderTop (borderTop : bool) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setItems (items : any[]) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setTranslucent (translucent : bool) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIOSDocumentViewerStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setUrl (url : string) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show (animated : bool, view : any) : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIOSCoverFlowViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    images : any[];
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    selected : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getImages () : any;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSelected () : number;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setImage (index : number, image : string) : void;
    setImages (images : any[]) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSelected (selected : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIOS_3DMatrixStatic {
    bubbleParent : bool;
    m11 : number;
    m12 : number;
    m13 : number;
    m14 : number;
    m21 : number;
    m22 : number;
    m23 : number;
    m24 : number;
    m31 : number;
    m32 : number;
    m33 : number;
    m34 : number;
    m41 : number;
    m42 : number;
    m43 : number;
    m44 : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getM11 () : number;
    getM12 () : number;
    getM13 () : number;
    getM14 () : number;
    getM21 () : number;
    getM22 () : number;
    getM23 () : number;
    getM24 () : number;
    getM31 () : number;
    getM32 () : number;
    getM33 () : number;
    getM34 () : number;
    getM41 () : number;
    getM42 () : number;
    getM43 () : number;
    getM44 () : number;
    invert () : TitaniumUI_3DMatrixStatic;
    multiply (t2 : TitaniumUI_3DMatrixStatic) : TitaniumUI_3DMatrixStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    rotate (angle : number, x : number, y : number, z : number) : TitaniumUI_3DMatrixStatic;
    scale (sx : number, sy : number, sz : number) : TitaniumUI_3DMatrixStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setM11 (m11 : number) : void;
    setM12 (m12 : number) : void;
    setM13 (m13 : number) : void;
    setM14 (m14 : number) : void;
    setM21 (m21 : number) : void;
    setM22 (m22 : number) : void;
    setM23 (m23 : number) : void;
    setM24 (m24 : number) : void;
    setM31 (m31 : number) : void;
    setM32 (m32 : number) : void;
    setM33 (m33 : number) : void;
    setM34 (m34 : number) : void;
    setM41 (m41 : number) : void;
    setM42 (m42 : number) : void;
    setM43 (m43 : number) : void;
    setM44 (m44 : number) : void;
    translate (tx : number, ty : number, tz : number) : TitaniumUI_3DMatrixStatic;
}
declare interface TitaniumUIIOSAdViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    adSize : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    cancelAction () : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAdSize () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAdSize (adSize : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIIOSStatic {
    TabbedBar : TitaniumUIIOSTabbedBarStatic;
    Toolbar : TitaniumUIIOSToolbarStatic;
    DocumentViewer : TitaniumUIIOSDocumentViewerStatic;
    CoverFlowView : TitaniumUIIOSCoverFlowViewStatic;
    _3DMatrix : TitaniumUIIOS_3DMatrixStatic;
    AdView : TitaniumUIIOSAdViewStatic;
    AD_SIZE_LANDSCAPE : string;
    AD_SIZE_PORTRAIT : string;
    ANIMATION_CURVE_EASE_IN : number;
    ANIMATION_CURVE_EASE_IN_OUT : number;
    ANIMATION_CURVE_EASE_OUT : number;
    ANIMATION_CURVE_LINEAR : number;
    AUTODETECT_ADDRESS : number;
    AUTODETECT_ALL : number;
    AUTODETECT_CALENDAR : number;
    AUTODETECT_LINK : number;
    AUTODETECT_NONE : number;
    AUTODETECT_PHONE : number;
    BLEND_MODE_CLEAR : number;
    BLEND_MODE_COLOR : number;
    BLEND_MODE_COLOR_BURN : number;
    BLEND_MODE_COLOR_DODGE : number;
    BLEND_MODE_COPY : number;
    BLEND_MODE_DARKEN : number;
    BLEND_MODE_DESTINATION_ATOP : number;
    BLEND_MODE_DESTINATION_IN : number;
    BLEND_MODE_DESTINATION_OUT : number;
    BLEND_MODE_DESTINATION_OVER : number;
    BLEND_MODE_DIFFERENCE : number;
    BLEND_MODE_EXCLUSION : number;
    BLEND_MODE_HARD_LIGHT : number;
    BLEND_MODE_HUE : number;
    BLEND_MODE_LIGHTEN : number;
    BLEND_MODE_LUMINOSITY : number;
    BLEND_MODE_MULTIPLY : number;
    BLEND_MODE_NORMAL : number;
    BLEND_MODE_OVERLAY : number;
    BLEND_MODE_PLUS_DARKER : number;
    BLEND_MODE_PLUS_LIGHTER : number;
    BLEND_MODE_SATURATION : number;
    BLEND_MODE_SCREEN : number;
    BLEND_MODE_SOFT_LIGHT : number;
    BLEND_MODE_SOURCE_ATOP : number;
    BLEND_MODE_SOURCE_IN : number;
    BLEND_MODE_SOURCE_OUT : number;
    BLEND_MODE_XOR : number;
    COLOR_GROUP_TABLEVIEW_BACKGROUND : string;
    COLOR_SCROLLVIEW_BACKGROUND : string;
    COLOR_UNDER_PAGE_BACKGROUND : string;
    COLOR_VIEW_FLIPSIDE_BACKGROUND : string;
    WEBVIEW_NAVIGATIONTYPE_BACK_FORWARD : number;
    WEBVIEW_NAVIGATIONTYPE_FORM_RESUBMITTED : number;
    WEBVIEW_NAVIGATIONTYPE_FORM_SUBMITTED : number;
    WEBVIEW_NAVIGATIONTYPE_LINK_CLICKED : number;
    WEBVIEW_NAVIGATIONTYPE_OTHER : number;
    WEBVIEW_NAVIGATIONTYPE_RELOAD : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    create3DMatrix (parameters? : TitaniumUIIOS_3DMatrixStatic) : TitaniumUIIOS_3DMatrixStatic;
    createAdView (parameters? : TitaniumUIIOSAdViewStatic) : TitaniumUIIOSAdViewStatic;
    createCoverFlowView (parameters? : TitaniumUIIOSCoverFlowViewStatic) : TitaniumUIIOSCoverFlowViewStatic;
    createDocumentViewer (parameters? : TitaniumUIIOSDocumentViewerStatic) : TitaniumUIIOSDocumentViewerStatic;
    createTabbedBar (parameters? : TitaniumUIIOSTabbedBarStatic) : TitaniumUIIOSTabbedBarStatic;
    createToolbar (parameters? : TitaniumUIIOSToolbarStatic) : TitaniumUIIOSToolbarStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIClipboardStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    clearData (type? : string) : void;
    clearText () : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getData (type : string) : any;
    getText () : string;
    hasData (type : string) : bool;
    hasText () : any;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setData (type : string, data : any) : void;
    setText (text : string) : void;
}
declare interface TitaniumUITabStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    active : bool;
    activeIcon : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    badge : string;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    focusable : bool;
    height : number;
    horizontalWrap : bool;
    icon : string;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    title : string;
    titleid : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    window : TitaniumUIWindowStatic;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close (window : TitaniumUIWindowStatic, options? : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getActive () : bool;
    getActiveIcon () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBadge () : string;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getFocusable () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getIcon () : string;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTitle () : string;
    getTitleid () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getWindow () : TitaniumUIWindowStatic;
    getZIndex () : number;
    hide () : void;
    open (window : TitaniumUIWindowStatic, options : any) : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setActive (active : bool) : void;
    setActiveIcon (activeIcon : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBadge (badge : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setIcon (icon : string) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTitle (title : string) : void;
    setTitleid (titleid : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setWindow (window : TitaniumUIWindowStatic) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUITableViewRowStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    className : string;
    color : string;
    editable : bool;
    focusable : bool;
    font : FontStatic;
    hasCheck : bool;
    hasChild : bool;
    hasDetail : bool;
    height : number;
    horizontalWrap : bool;
    indentionLevel : number;
    keepScreenOn : bool;
    layout : string;
    left : number;
    leftImage : string;
    moveable : bool;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    rightImage : string;
    selectedBackgroundColor : string;
    selectedBackgroundImage : string;
    selectedColor : string;
    selectionStyle : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    title : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getClassName () : string;
    getColor () : string;
    getEditable () : bool;
    getFocusable () : bool;
    getFont () : FontStatic;
    getHasCheck () : bool;
    getHasChild () : bool;
    getHasDetail () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getIndentionLevel () : number;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getLeftImage () : string;
    getMoveable () : bool;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getRightImage () : string;
    getSelectedBackgroundColor () : string;
    getSelectedBackgroundImage () : string;
    getSelectedColor () : string;
    getSelectionStyle () : number;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTitle () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setClassName (className : string) : void;
    setColor (color : string) : void;
    setEditable (editable : bool) : void;
    setFocusable (focusable : bool) : void;
    setFont (font : FontStatic) : void;
    setHasCheck (hasCheck : bool) : void;
    setHasChild (hasChild : bool) : void;
    setHasDetail (hasDetail : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setIndentionLevel (indentionLevel : number) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setLeftImage (leftImage : string) : void;
    setMoveable (moveable : bool) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setRightImage (rightImage : string) : void;
    setSelectedBackgroundColor (selectedBackgroundColor : string) : void;
    setSelectedBackgroundImage (selectedBackgroundImage : string) : void;
    setSelectedColor (selectedColor : string) : void;
    setSelectionStyle (selectionStyle : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTitle (title : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIPickerRowStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    color : string;
    focusable : bool;
    font : FontStatic;
    fontSize : number;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    title : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getColor () : string;
    getFocusable () : bool;
    getFont () : FontStatic;
    getFontSize () : number;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTitle () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setColor (color : string) : void;
    setFocusable (focusable : bool) : void;
    setFont (font : FontStatic) : void;
    setFontSize (fontSize : number) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTitle (title : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIProgressBarStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    color : string;
    enabled : bool;
    focusable : bool;
    font : FontStatic;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    max : number;
    message : string;
    min : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    style : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    value : number;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getColor () : string;
    getEnabled () : bool;
    getFocusable () : bool;
    getFont () : FontStatic;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getMax () : number;
    getMessage () : string;
    getMin () : number;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getStyle () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getValue () : number;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setColor (color : string) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setFont (font : FontStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setMax (max : number) : void;
    setMessage (message : string) : void;
    setMin (min : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setStyle (style : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setValue (value : number) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIScrollableViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    cacheSize : number;
    center : PointStatic;
    children : any[];
    clipViews : bool;
    currentPage : number;
    disableBounce : bool;
    focusable : bool;
    height : number;
    hitRect : DimensionStatic;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    overScrollMode : number;
    overlayEnabled : bool;
    pagingControlAlpha : number;
    pagingControlColor : string;
    pagingControlHeight : number;
    pagingControlOnTop : bool;
    pagingControlTimeout : number;
    rect : DimensionStatic;
    right : number;
    scrollingEnabled : bool;
    showPagingControl : bool;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    views : any[];
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    addView (view : TitaniumUIViewStatic) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCacheSize () : number;
    getCenter () : PointStatic;
    getChildren () : any[];
    getClipViews () : bool;
    getCurrentPage () : number;
    getDisableBounce () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHitRect () : DimensionStatic;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getOverScrollMode () : number;
    getOverlayEnabled () : bool;
    getPagingControlAlpha () : number;
    getPagingControlColor () : string;
    getPagingControlHeight () : number;
    getPagingControlOnTop () : bool;
    getPagingControlTimeout () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getScrollingEnabled () : bool;
    getShowPagingControl () : bool;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getViews () : any[];
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    moveNext () : void;
    movePrevious () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeView (view : number) : void;
    scrollToView (view : number) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCacheSize (cacheSize : number) : void;
    setCenter (center : PointStatic) : void;
    setCurrentPage (currentPage : number) : void;
    setDisableBounce (disableBounce : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHitRect (hitRect : DimensionStatic) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setOverScrollMode (overScrollMode : number) : void;
    setOverlayEnabled (overlayEnabled : bool) : void;
    setPagingControlAlpha (pagingControlAlpha : number) : void;
    setPagingControlColor (pagingControlColor : string) : void;
    setPagingControlHeight (pagingControlHeight : number) : void;
    setPagingControlOnTop (pagingControlOnTop : bool) : void;
    setRight (right : number) : void;
    setScrollingEnabled (scrollingEnabled : bool) : void;
    setShowPagingControl (showPagingControl : bool) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setViews (views : any[]) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUINotificationStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    duration : number;
    enabled : bool;
    focusable : bool;
    height : number;
    horizontalMargin : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    message : string;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    verticalMargin : number;
    visible : bool;
    width : number;
    xOffset : number;
    yOffset : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getDuration () : number;
    getEnabled () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHorizontalMargin () : number;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getMessage () : string;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVerticalMargin () : number;
    getVisible () : bool;
    getWidth () : any;
    getXOffset () : number;
    getYOffset () : number;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setDuration (duration : number) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHorizontalMargin (horizontalMargin : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setMessage (message : string) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVerticalMargin (verticalMargin : number) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setXOffset (xOffset : number) : void;
    setYOffset (yOffset : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIScrollViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    canCancelEvents : bool;
    center : PointStatic;
    children : any[];
    contentHeight : number;
    contentOffset : any;
    contentWidth : number;
    disableBounce : bool;
    focusable : bool;
    height : number;
    horizontalBounce : bool;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    maxZoomScale : number;
    minZoomScale : number;
    opacity : number;
    overScrollMode : number;
    rect : DimensionStatic;
    right : number;
    scrollIndicatorStyle : number;
    scrollType : string;
    scrollingEnabled : bool;
    scrollsToTop : bool;
    showHorizontalScrollIndicator : bool;
    showVerticalScrollIndicator : bool;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    verticalBounce : bool;
    visible : bool;
    width : number;
    zIndex : number;
    zoomScale : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCanCancelEvents () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getContentHeight () : any;
    getContentOffset () : any;
    getContentWidth () : any;
    getDisableBounce () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHorizontalBounce () : bool;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getMaxZoomScale () : number;
    getMinZoomScale () : number;
    getOpacity () : number;
    getOverScrollMode () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getScrollIndicatorStyle () : number;
    getScrollType () : string;
    getScrollingEnabled () : bool;
    getScrollsToTop () : bool;
    getShowHorizontalScrollIndicator () : bool;
    getShowVerticalScrollIndicator () : bool;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVerticalBounce () : bool;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    getZoomScale () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    scrollTo (x : number, y : number) : void;
    scrollToBottom () : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCanCancelEvents (canCancelEvents : bool) : void;
    setCenter (center : PointStatic) : void;
    setContentHeight (contentHeight : number) : void;
    setContentOffset (contentOffset : any, animated? : ContentOffsetOptionStatic) : void;
    setContentWidth (contentWidth : number) : void;
    setDisableBounce (disableBounce : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHorizontalBounce (horizontalBounce : bool) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setMaxZoomScale (maxZoomScale : number) : void;
    setMinZoomScale (minZoomScale : number) : void;
    setOpacity (opacity : number) : void;
    setOverScrollMode (overScrollMode : number) : void;
    setRight (right : number) : void;
    setScrollIndicatorStyle (scrollIndicatorStyle : number) : void;
    setScrollingEnabled (scrollingEnabled : bool) : void;
    setScrollsToTop (scrollsToTop : bool) : void;
    setShowHorizontalScrollIndicator (showHorizontalScrollIndicator : bool) : void;
    setShowVerticalScrollIndicator (showVerticalScrollIndicator : bool) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVerticalBounce (verticalBounce : bool) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    setZoomScale (zoomScale : number, animated? : ZoomScaleOptionStatic) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUISliderStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    disabledLeftTrackImage : string;
    disabledRightTrackImage : string;
    disabledThumbImage : string;
    enabled : bool;
    focusable : bool;
    height : number;
    highlightedLeftTrackImage : string;
    highlightedRightTrackImage : string;
    highlightedThumbImage : string;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    leftTrackImage : string;
    leftTrackLeftCap : number;
    leftTrackTopCap : number;
    max : number;
    maxRange : number;
    min : number;
    minRange : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    rightTrackImage : string;
    rightTrackLeftCap : number;
    rightTrackTopCap : number;
    selectedLeftTrackImage : string;
    selectedRightTrackImage : string;
    selectedThumbImage : string;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    thumbImage : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    value : string;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getDisabledLeftTrackImage () : string;
    getDisabledRightTrackImage () : string;
    getDisabledThumbImage () : string;
    getEnabled () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHighlightedLeftTrackImage () : string;
    getHighlightedRightTrackImage () : string;
    getHighlightedThumbImage () : string;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getLeftTrackImage () : string;
    getLeftTrackLeftCap () : number;
    getLeftTrackTopCap () : number;
    getMax () : number;
    getMaxRange () : number;
    getMin () : number;
    getMinRange () : number;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getRightTrackImage () : string;
    getRightTrackLeftCap () : number;
    getRightTrackTopCap () : number;
    getSelectedLeftTrackImage () : string;
    getSelectedRightTrackImage () : string;
    getSelectedThumbImage () : string;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getThumbImage () : any;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getValue () : string;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setDisabledLeftTrackImage (disabledLeftTrackImage : string) : void;
    setDisabledRightTrackImage (disabledRightTrackImage : string) : void;
    setDisabledThumbImage (disabledThumbImage : string) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHighlightedLeftTrackImage (highlightedLeftTrackImage : string) : void;
    setHighlightedRightTrackImage (highlightedRightTrackImage : string) : void;
    setHighlightedThumbImage (highlightedThumbImage : string) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setLeftTrackImage (leftTrackImage : string) : void;
    setLeftTrackLeftCap (leftTrackLeftCap : number) : void;
    setLeftTrackTopCap (leftTrackTopCap : number) : void;
    setMax (max : number) : void;
    setMaxRange (maxRange : number) : void;
    setMin (min : number) : void;
    setMinRange (minRange : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setRightTrackImage (rightTrackImage : string) : void;
    setRightTrackLeftCap (rightTrackLeftCap : number) : void;
    setRightTrackTopCap (rightTrackTopCap : number) : void;
    setSelectedLeftTrackImage (selectedLeftTrackImage : string) : void;
    setSelectedRightTrackImage (selectedRightTrackImage : string) : void;
    setSelectedThumbImage (selectedThumbImage : string) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setThumbImage (thumbImage : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setValue (value : number, options? : any) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIAndroidSearchViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    enabled : bool;
    focusable : bool;
    height : number;
    hintText : string;
    horizontalWrap : bool;
    iconified : bool;
    iconifiedByDefault : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    submitEnabled : bool;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    value : string;
    visible : bool;
    width : number;
    zIndex : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    blur () : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    focus () : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getEnabled () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHintText () : string;
    getHorizontalWrap () : bool;
    getIconified () : bool;
    getIconifiedByDefault () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getSubmitEnabled () : bool;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getValue () : string;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHintText (hintText : string) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setIconified (iconified : bool) : void;
    setIconifiedByDefault (iconifiedByDefault : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setSubmitEnabled (submitEnabled : bool) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setValue (value : string) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIAndroidProgressIndicatorStatic {
    bubbleParent : bool;
    cancelable : bool;
    location : number;
    max : number;
    message : string;
    messageid : string;
    min : number;
    type : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getCancelable () : bool;
    getLocation () : number;
    getMax () : number;
    getMessage () : string;
    getMessageid () : string;
    getMin () : number;
    getType () : number;
    hide () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCancelable (cancelable : bool) : void;
    setLocation (location : number) : void;
    setMax (max : number) : void;
    setMessage (message : string) : void;
    setMessageid (messageid : string) : void;
    setMin (min : number) : void;
    setType (type : number) : void;
    show () : void;
}
declare interface TitaniumUIAndroidStatic {
    SearchView : TitaniumUIAndroidSearchViewStatic;
    ProgressIndicator : TitaniumUIAndroidProgressIndicatorStatic;
    LINKIFY_ALL : number;
    LINKIFY_EMAIL_ADDRESSES : number;
    LINKIFY_MAP_ADDRESSES : number;
    LINKIFY_PHONE_NUMBERS : number;
    LINKIFY_WEB_URLS : number;
    OVER_SCROLL_ALWAYS : number;
    OVER_SCROLL_IF_CONTENT_SCROLLS : number;
    OVER_SCROLL_NEVER : number;
    PIXEL_FORMAT_A_8 : number;
    PIXEL_FORMAT_LA_88 : number;
    PIXEL_FORMAT_L_8 : number;
    PIXEL_FORMAT_OPAQUE : number;
    PIXEL_FORMAT_RGBA_4444 : number;
    PIXEL_FORMAT_RGBA_5551 : number;
    PIXEL_FORMAT_RGBA_8888 : number;
    PIXEL_FORMAT_RGBX_8888 : number;
    PIXEL_FORMAT_RGB_332 : number;
    PIXEL_FORMAT_RGB_565 : number;
    PIXEL_FORMAT_RGB_888 : number;
    PIXEL_FORMAT_TRANSLUCENT : number;
    PIXEL_FORMAT_TRANSPARENT : number;
    PIXEL_FORMAT_UNKNOWN : number;
    PROGRESS_INDICATOR_DETERMINANT : number;
    PROGRESS_INDICATOR_DIALOG : number;
    PROGRESS_INDICATOR_INDETERMINANT : number;
    PROGRESS_INDICATOR_STATUS_BAR : number;
    SOFT_INPUT_ADJUST_PAN : number;
    SOFT_INPUT_ADJUST_RESIZE : number;
    SOFT_INPUT_ADJUST_UNSPECIFIED : number;
    SOFT_INPUT_STATE_ALWAYS_HIDDEN : number;
    SOFT_INPUT_STATE_ALWAYS_VISIBLE : number;
    SOFT_INPUT_STATE_HIDDEN : number;
    SOFT_INPUT_STATE_UNSPECIFIED : number;
    SOFT_INPUT_STATE_VISIBLE : number;
    SOFT_KEYBOARD_DEFAULT_ON_FOCUS : number;
    SOFT_KEYBOARD_HIDE_ON_FOCUS : number;
    SOFT_KEYBOARD_SHOW_ON_FOCUS : number;
    SWITCH_STYLE_CHECKBOX : number;
    SWITCH_STYLE_TOGGLEBUTTON : number;
    WEBVIEW_PLUGINS_OFF : number;
    WEBVIEW_PLUGINS_ON : number;
    WEBVIEW_PLUGINS_ON_DEMAND : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createProgressIndicator (parameters? : TitaniumUIAndroidProgressIndicatorStatic) : TitaniumUIAndroidProgressIndicatorStatic;
    createSearchView (parameters? : TitaniumUIAndroidSearchViewStatic) : TitaniumUIAndroidSearchViewStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    hideSoftKeyboard () : void;
    openPreferences () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUIDashboardViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    columnCount : number;
    data : any[];
    editable : bool;
    height : number;
    horizontalWrap : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    rowCount : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    wobble : bool;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getColumnCount () : number;
    getData () : any[];
    getEditable () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getRowCount () : number;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getWobble () : bool;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setData (data : any[]) : void;
    setEditable (editable : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setWobble (wobble : bool) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startEditing () : void;
    startLayout () : void;
    stopEditing () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUI_3DMatrixStatic {
    bubbleParent : bool;
    m11 : number;
    m12 : number;
    m13 : number;
    m14 : number;
    m21 : number;
    m22 : number;
    m23 : number;
    m24 : number;
    m31 : number;
    m32 : number;
    m33 : number;
    m34 : number;
    m41 : number;
    m42 : number;
    m43 : number;
    m44 : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getM11 () : number;
    getM12 () : number;
    getM13 () : number;
    getM14 () : number;
    getM21 () : number;
    getM22 () : number;
    getM23 () : number;
    getM24 () : number;
    getM31 () : number;
    getM32 () : number;
    getM33 () : number;
    getM34 () : number;
    getM41 () : number;
    getM42 () : number;
    getM43 () : number;
    getM44 () : number;
    invert () : TitaniumUI_3DMatrixStatic;
    multiply (t2 : TitaniumUI_3DMatrixStatic) : TitaniumUI_3DMatrixStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    rotate (angle : number, x : number, y : number, z : number) : TitaniumUI_3DMatrixStatic;
    scale (sx : number, sy : number, sz : number) : TitaniumUI_3DMatrixStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setM11 (m11 : number) : void;
    setM12 (m12 : number) : void;
    setM13 (m13 : number) : void;
    setM14 (m14 : number) : void;
    setM21 (m21 : number) : void;
    setM22 (m22 : number) : void;
    setM23 (m23 : number) : void;
    setM24 (m24 : number) : void;
    setM31 (m31 : number) : void;
    setM32 (m32 : number) : void;
    setM33 (m33 : number) : void;
    setM34 (m34 : number) : void;
    setM41 (m41 : number) : void;
    setM42 (m42 : number) : void;
    setM43 (m43 : number) : void;
    setM44 (m44 : number) : void;
    translate (tx : number, ty : number, tz : number) : TitaniumUI_3DMatrixStatic;
}
declare interface TitaniumUIListViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    defaultItemTemplate : string;
    focusable : bool;
    footerTitle : string;
    headerTitle : string;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    scrollIndicatorStyle : number;
    sectionCount : number;
    sections : any[];
    showVerticalScrollIndicator : bool;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    style : number;
    templates : any;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    willScrollOnStatusTap : bool;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    appendSection (section : TitaniumUIListSectionStatic, animation? : ListViewAnimationPropertiesStatic) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    deleteSectionAt (sectionIndex : number, animation? : ListViewAnimationPropertiesStatic) : void;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getDefaultItemTemplate () : any;
    getFocusable () : bool;
    getFooterTitle () : string;
    getHeaderTitle () : string;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getScrollIndicatorStyle () : number;
    getSectionCount () : number;
    getSections () : any[];
    getShowVerticalScrollIndicator () : bool;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getStyle () : number;
    getTemplates () : any;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getWillScrollOnStatusTap () : bool;
    getZIndex () : number;
    hide () : void;
    insertSectionAt (sectionIndex : number, section : TitaniumUIListSectionStatic, animation? : ListViewAnimationPropertiesStatic) : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    replaceSectionAt (sectionIndex : number, section : TitaniumUIListSectionStatic, animation : ListViewAnimationPropertiesStatic) : void;
    scrollToItem (sectionIndex : number, itemIndex : number, animation? : ListViewAnimationPropertiesStatic) : void;
    selectItem (sectionIndex : number, itemIndex : number) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setDefaultItemTemplate (defaultItemTemplate : string) : void;
    setFocusable (focusable : bool) : void;
    setFooterTitle (footerTitle : string) : void;
    setHeaderTitle (headerTitle : string) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setScrollIndicatorStyle (scrollIndicatorStyle : number) : void;
    setSections (sections : any[]) : void;
    setShowVerticalScrollIndicator (showVerticalScrollIndicator : bool) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setWillScrollOnStatusTap (willScrollOnStatusTap : bool) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIDashboardItemStatic {
    badge : number;
    bubbleParent : bool;
    canDelete : bool;
    image : string;
    selectedImage : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBadge () : number;
    getBubbleParent () : bool;
    getCanDelete () : bool;
    getImage () : any;
    getSelectedImage () : any;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBadge (badge : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCanDelete (canDelete : bool) : void;
    setImage (image : string) : void;
    setSelectedImage (selectedImage : string) : void;
}
declare interface TitaniumUIToolbarStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    barColor : string;
    borderBottom : bool;
    borderColor : string;
    borderRadius : number;
    borderTop : bool;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    items : any[];
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    translucent : bool;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBarColor () : string;
    getBorderBottom () : bool;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderTop () : bool;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getItems () : any[];
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getTranslucent () : bool;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBarColor (barColor : string) : void;
    setBorderBottom (borderBottom : bool) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderTop (borderTop : bool) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setItems (items : any[]) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setTranslucent (translucent : bool) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    enabled : bool;
    focusable : bool;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getEnabled () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIListItemStatic {
    accessoryType : number;
    allowsSelection : bool;
    backgroundColor : string;
    color : string;
    font : FontStatic;
    height : number;
    image : string;
    itemId : string;
    selectionStyle : number;
    subtitle : string;
    title : string;
}
declare interface TitaniumUIWebViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    data : TitaniumBlobStatic;
    disableBounce : bool;
    enableZoomControls : bool;
    focusable : bool;
    height : number;
    hideLoadIndicator : bool;
    horizontalWrap : bool;
    html : string;
    ignoreSslError : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    loading : bool;
    opacity : number;
    overScrollMode : number;
    pluginState : number;
    rect : DimensionStatic;
    right : number;
    scalesPageToFit : bool;
    scrollsToTop : bool;
    showScrollbars : bool;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    url : string;
    userAgent : string;
    visible : bool;
    width : number;
    willHandleTouches : bool;
    zIndex : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    canGoBack () : bool;
    canGoForward () : bool;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    evalJS (code : string) : string;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getData () : any;
    getDisableBounce () : bool;
    getEnableZoomControls () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHideLoadIndicator () : bool;
    getHorizontalWrap () : bool;
    getHtml () : string;
    getIgnoreSslError () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getLoading () : bool;
    getOpacity () : number;
    getOverScrollMode () : number;
    getPluginState () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getScalesPageToFit () : bool;
    getScrollsToTop () : bool;
    getShowScrollbars () : bool;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getUrl () : string;
    getUserAgent () : string;
    getVisible () : bool;
    getWidth () : any;
    getWillHandleTouches () : bool;
    getZIndex () : number;
    goBack () : void;
    goForward () : void;
    hide () : void;
    pause () : void;
    release () : void;
    reload () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    repaint () : void;
    resume () : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBasicAuthentication (username : string, password : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setData (data : TitaniumBlobStatic) : void;
    setDisableBounce (disableBounce : bool) : void;
    setEnableZoomControls (enableZoomControls : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHideLoadIndicator (hideLoadIndicator : bool) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setHtml (html : any, options? : any) : void;
    setIgnoreSslError (ignoreSslError : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setLoading (loading : bool) : void;
    setOpacity (opacity : number) : void;
    setOverScrollMode (overScrollMode : number) : void;
    setPluginState (pluginState : number) : void;
    setRight (right : number) : void;
    setScalesPageToFit (scalesPageToFit : bool) : void;
    setScrollsToTop (scrollsToTop : bool) : void;
    setShowScrollbars (showScrollbars : bool) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setUrl (url : string) : void;
    setUserAgent (userAgent : string) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setWillHandleTouches (willHandleTouches : bool) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    stopLoading (hardStop : bool) : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUITableViewSectionStatic {
    bubbleParent : bool;
    footerTitle : string;
    footerView : TitaniumUIViewStatic;
    headerTitle : string;
    headerView : TitaniumUIViewStatic;
    rowCount : number;
    rows : any[];
    add (row : TitaniumUITableViewRowStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getFooterTitle () : string;
    getFooterView () : TitaniumUIViewStatic;
    getHeaderTitle () : string;
    getHeaderView () : TitaniumUIViewStatic;
    getRowCount () : number;
    getRows () : any[];
    remove (row : TitaniumUITableViewRowStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    rowAtIndex (index : number) : TitaniumUITableViewRowStatic;
    setBubbleParent (bubbleParent : bool) : void;
    setFooterTitle (footerTitle : string) : void;
    setFooterView (footerView : TitaniumUIViewStatic) : void;
    setHeaderTitle (headerTitle : string) : void;
    setHeaderView (headerView : TitaniumUIViewStatic) : void;
}
declare interface TitaniumUITabGroupStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    activeTab : TitaniumUITabStatic;
    activeTabBackgroundColor : string;
    activeTabBackgroundDisabledColor : string;
    activeTabBackgroundDisabledImage : string;
    activeTabBackgroundFocusedColor : string;
    activeTabBackgroundFocusedImage : string;
    activeTabBackgroundImage : string;
    activeTabBackgroundSelectedColor : string;
    activeTabBackgroundSelectedImage : string;
    activeTabIconTint : string;
    allowUserCustomization : bool;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    barColor : string;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    editButtonTitle : string;
    exitOnClose : bool;
    focusable : bool;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    navBarHidden : bool;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    shadowImage : string;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    tabDividerColor : string;
    tabDividerWidth : number;
    tabHeight : number;
    tabs : any[];
    tabsAtBottom : bool;
    tabsBackgroundColor : string;
    tabsBackgroundDisabledColor : string;
    tabsBackgroundDisabledImage : string;
    tabsBackgroundFocusedColor : string;
    tabsBackgroundFocusedImage : string;
    tabsBackgroundImage : string;
    tabsBackgroundSelectedColor : string;
    tabsBackgroundSelectedImage : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    windowSoftInputMode : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    addTab (tab : TitaniumUITabStatic) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getActiveTab () : TitaniumUITabStatic;
    getActiveTabBackgroundColor () : string;
    getActiveTabBackgroundDisabledColor () : string;
    getActiveTabBackgroundDisabledImage () : string;
    getActiveTabBackgroundFocusedColor () : string;
    getActiveTabBackgroundFocusedImage () : string;
    getActiveTabBackgroundImage () : string;
    getActiveTabBackgroundSelectedColor () : string;
    getActiveTabBackgroundSelectedImage () : string;
    getActiveTabIconTint () : string;
    getActivity () : TitaniumAndroidActivityStatic;
    getAllowUserCustomization () : bool;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBarColor () : string;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getEditButtonTitle () : string;
    getExitOnClose () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getNavBarHidden () : bool;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getShadowImage () : string;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTabDividerColor () : string;
    getTabDividerWidth () : any;
    getTabHeight () : any;
    getTabs () : any[];
    getTabsAtBottom () : bool;
    getTabsBackgroundColor () : string;
    getTabsBackgroundDisabledColor () : string;
    getTabsBackgroundDisabledImage () : string;
    getTabsBackgroundFocusedColor () : string;
    getTabsBackgroundFocusedImage () : string;
    getTabsBackgroundImage () : string;
    getTabsBackgroundSelectedColor () : string;
    getTabsBackgroundSelectedImage () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getWindowSoftInputMode () : number;
    getZIndex () : number;
    hide () : void;
    open () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeTab (tab : TitaniumUITabStatic) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setActiveTab (indexOrObject : number) : void;
    setActiveTabBackgroundColor (activeTabBackgroundColor : string) : void;
    setActiveTabBackgroundDisabledColor (activeTabBackgroundDisabledColor : string) : void;
    setActiveTabBackgroundDisabledImage (activeTabBackgroundDisabledImage : string) : void;
    setActiveTabBackgroundFocusedColor (activeTabBackgroundFocusedColor : string) : void;
    setActiveTabBackgroundFocusedImage (activeTabBackgroundFocusedImage : string) : void;
    setActiveTabBackgroundImage (activeTabBackgroundImage : string) : void;
    setActiveTabBackgroundSelectedColor (activeTabBackgroundSelectedColor : string) : void;
    setActiveTabBackgroundSelectedImage (activeTabBackgroundSelectedImage : string) : void;
    setActiveTabIconTint (activeTabIconTint : string) : void;
    setAllowUserCustomization (allowUserCustomization : bool) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBarColor (barColor : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setEditButtonTitle (editButtonTitle : string) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setNavBarHidden (navBarHidden : bool) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setShadowImage (shadowImage : string) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTabDividerColor (tabDividerColor : string) : void;
    setTabDividerWidth (tabDividerWidth : number) : void;
    setTabHeight (tabHeight : number) : void;
    setTabs (tabs : any[]) : void;
    setTabsAtBottom (tabsAtBottom : bool) : void;
    setTabsBackgroundColor (tabsBackgroundColor : string) : void;
    setTabsBackgroundDisabledColor (tabsBackgroundDisabledColor : string) : void;
    setTabsBackgroundDisabledImage (tabsBackgroundDisabledImage : string) : void;
    setTabsBackgroundFocusedColor (tabsBackgroundFocusedColor : string) : void;
    setTabsBackgroundFocusedImage (tabsBackgroundFocusedImage : string) : void;
    setTabsBackgroundImage (tabsBackgroundImage : string) : void;
    setTabsBackgroundSelectedColor (tabsBackgroundSelectedColor : string) : void;
    setTabsBackgroundSelectedImage (tabsBackgroundSelectedImage : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIAlertDialogStatic {
    androidView : TitaniumUIViewStatic;
    bubbleParent : bool;
    buttonNames : any[];
    cancel : number;
    message : string;
    messageid : string;
    ok : string;
    okid : string;
    persistent : bool;
    style : number;
    title : string;
    titleid : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAndroidView () : TitaniumUIViewStatic;
    getBubbleParent () : bool;
    getButtonNames () : any[];
    getCancel () : number;
    getMessage () : string;
    getOk () : string;
    getPersistent () : bool;
    getStyle () : number;
    getTitle () : string;
    hide () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAndroidView (androidView : TitaniumUIViewStatic) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCancel (cancel : number) : void;
    setMessage (message : string) : void;
    setOk (ok : string) : void;
    setPersistent (persistent : bool) : void;
    setStyle (style : number) : void;
    setTitle (title : string) : void;
    show () : void;
}
declare interface TitaniumUISearchBarStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    autocapitalization : number;
    autocorrect : bool;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    barColor : string;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    enabled : bool;
    focusable : bool;
    height : number;
    hintText : string;
    hinttextid : string;
    horizontalWrap : bool;
    keepScreenOn : bool;
    keyboardType : number;
    layout : string;
    left : number;
    opacity : number;
    prompt : string;
    promptid : string;
    rect : DimensionStatic;
    right : number;
    showBookmark : bool;
    showCancel : bool;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    value : string;
    visible : bool;
    width : number;
    zIndex : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    blur () : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    focus () : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getAutocapitalization () : number;
    getAutocorrect () : bool;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBarColor () : string;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getEnabled () : bool;
    getFocusable () : bool;
    getHeight () : any;
    getHintText () : string;
    getHinttextid () : string;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getKeyboardType () : number;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getPrompt () : string;
    getPromptid () : string;
    getRect () : DimensionStatic;
    getRight () : any;
    getShowBookmark () : bool;
    getShowCancel () : bool;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getValue () : string;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setAutocapitalization (autocapitalization : number) : void;
    setAutocorrect (autocorrect : bool) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBarColor (barColor : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHintText (hintText : string) : void;
    setHinttextid (hinttextid : string) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setKeyboardType (keyboardType : number) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setPrompt (prompt : string) : void;
    setPromptid (promptid : string) : void;
    setRight (right : number) : void;
    setShowBookmark (showBookmark : bool) : void;
    setShowCancel (showCancel : bool, animated? : any) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setValue (value : string) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIButtonStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    color : string;
    enabled : bool;
    focusable : bool;
    font : FontStatic;
    height : number;
    horizontalWrap : bool;
    image : string;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    selectedColor : string;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    style : number;
    systemButton : number;
    textAlign : string;
    title : string;
    titleid : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    verticalAlign : number;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getColor () : string;
    getEnabled () : bool;
    getFocusable () : bool;
    getFont () : FontStatic;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getImage () : any;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSelectedColor () : string;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getStyle () : number;
    getSystemButton () : number;
    getTextAlign () : any;
    getTitle () : string;
    getTitleid () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVerticalAlign () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setColor (color : string) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setFont (font : FontStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setImage (image : string) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSelectedColor (selectedColor : string) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setStyle (style : number) : void;
    setSystemButton (systemButton : number) : void;
    setTextAlign (textAlign : string) : void;
    setTitle (title : string) : void;
    setTitleid (titleid : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVerticalAlign (verticalAlign : number) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIAnimationStatic {
    anchorPoint : PointStatic;
    autoreverse : bool;
    backgroundColor : string;
    bottom : number;
    bubbleParent : bool;
    center : any;
    color : string;
    curve : number;
    delay : number;
    duration : number;
    height : number;
    left : number;
    opacity : number;
    opaque : bool;
    repeat : number;
    right : number;
    top : number;
    transform : TitaniumUI_2DMatrixStatic;
    transition : number;
    view : TitaniumUIViewStatic;
    visible : bool;
    width : number;
    zIndex : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAnchorPoint () : PointStatic;
    getAutoreverse () : bool;
    getBackgroundColor () : string;
    getBottom () : number;
    getBubbleParent () : bool;
    getCenter () : any;
    getColor () : string;
    getCurve () : number;
    getDelay () : number;
    getDuration () : number;
    getHeight () : number;
    getLeft () : number;
    getOpacity () : number;
    getOpaque () : bool;
    getRepeat () : number;
    getRight () : number;
    getTop () : number;
    getTransform () : any;
    getTransition () : number;
    getView () : TitaniumUIViewStatic;
    getVisible () : bool;
    getWidth () : number;
    getZIndex () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setAutoreverse (autoreverse : bool) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : any) : void;
    setColor (color : string) : void;
    setCurve (curve : number) : void;
    setDelay (delay : number) : void;
    setDuration (duration : number) : void;
    setHeight (height : number) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setOpaque (opaque : bool) : void;
    setRepeat (repeat : number) : void;
    setRight (right : number) : void;
    setTop (top : number) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setTransition (transition : number) : void;
    setView (view : TitaniumUIViewStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
}
declare interface TitaniumUIActivityIndicatorStatic {
    bottom : number;
    bubbleParent : bool;
    color : string;
    font : FontStatic;
    height : string;
    indicatorColor : string;
    indicatorDiameter : string;
    left : number;
    message : string;
    messageid : string;
    right : number;
    style : number;
    top : number;
    width : string;
    add () : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBottom () : any;
    getBubbleParent () : bool;
    getColor () : string;
    getFont () : FontStatic;
    getHeight () : string;
    getIndicatorColor () : string;
    getIndicatorDiameter () : string;
    getLeft () : any;
    getMessage () : string;
    getMessageid () : string;
    getRight () : any;
    getStyle () : number;
    getTop () : any;
    getWidth () : string;
    hide () : void;
    remove () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setColor (color : string) : void;
    setFont (font : FontStatic) : void;
    setHeight (height : string) : void;
    setIndicatorColor (indicatorColor : string) : void;
    setIndicatorDiameter (indicatorDiameter : string) : void;
    setLeft (left : number) : void;
    setMessage (message : string) : void;
    setMessageid (messageid : string) : void;
    setRight (right : number) : void;
    setStyle (style : number) : void;
    setTop (top : number) : void;
    setWidth (width : string) : void;
    show () : void;
}
declare interface TitaniumUI_2DMatrixStatic {
    a : number;
    b : number;
    bubbleParent : bool;
    c : number;
    d : number;
    tx : number;
    ty : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getA () : number;
    getB () : number;
    getBubbleParent () : bool;
    getC () : number;
    getD () : number;
    getTx () : number;
    getTy () : number;
    invert () : TitaniumUI_2DMatrixStatic;
    multiply (t2 : TitaniumUI_2DMatrixStatic) : TitaniumUI_2DMatrixStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    rotate (angle : number, toAngle? : number) : TitaniumUI_2DMatrixStatic;
    scale (sx : number, sy : number, toSx? : number, toSy? : number) : TitaniumUI_2DMatrixStatic;
    setA (a : number) : void;
    setB (b : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setC (c : number) : void;
    setD (d : number) : void;
    setTx (tx : number) : void;
    setTy (ty : number) : void;
    translate (tx : number, ty : number) : TitaniumUI_2DMatrixStatic;
}
declare interface TitaniumUIOptionDialogStatic {
    androidView : TitaniumUIViewStatic;
    bubbleParent : bool;
    cancel : number;
    destructive : number;
    options : any[];
    persistent : bool;
    selectedIndex : number;
    title : string;
    titleid : string;
    tizenView : TitaniumUIViewStatic;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAndroidView () : TitaniumUIViewStatic;
    getBubbleParent () : bool;
    getCancel () : number;
    getDestructive () : number;
    getOptions () : any[];
    getPersistent () : bool;
    getSelectedIndex () : number;
    getTitle () : string;
    getTitleid () : string;
    getTizenView () : TitaniumUIViewStatic;
    hide (params? : HideParamsStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAndroidView (androidView : TitaniumUIViewStatic) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCancel (cancel : number) : void;
    setPersistent (persistent : bool) : void;
    setTitle (title : string) : void;
    setTitleid (titleid : string) : void;
    setTizenView (tizenView : TitaniumUIViewStatic) : void;
    show (params? : ShowParamsStatic) : void;
}
declare interface TitaniumUIButtonBarStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    index : number;
    labels : any[];
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    style : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getIndex () : number;
    getLabels () : any;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getStyle () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setIndex (index : number) : void;
    setLabels (labels : any[]) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setStyle (style : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUILabelStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    autoLink : number;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundPaddingBottom : number;
    backgroundPaddingLeft : number;
    backgroundPaddingRight : number;
    backgroundPaddingTop : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    color : string;
    ellipsize : bool;
    enabled : bool;
    focusable : bool;
    font : FontStatic;
    height : number;
    highlightedColor : string;
    horizontalWrap : bool;
    html : string;
    keepScreenOn : bool;
    layout : string;
    left : number;
    minimumFontSize : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    shadowColor : string;
    shadowOffset : any;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    text : string;
    textAlign : string;
    textid : string;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    verticalAlign : number;
    visible : bool;
    width : number;
    wordWrap : bool;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getAutoLink () : number;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundPaddingBottom () : number;
    getBackgroundPaddingLeft () : number;
    getBackgroundPaddingRight () : number;
    getBackgroundPaddingTop () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getColor () : string;
    getEllipsize () : bool;
    getEnabled () : bool;
    getFocusable () : bool;
    getFont () : FontStatic;
    getHeight () : any;
    getHighlightedColor () : string;
    getHorizontalWrap () : bool;
    getHtml () : string;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getMinimumFontSize () : number;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getShadowColor () : string;
    getShadowOffset () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getText () : string;
    getTextAlign () : any;
    getTextid () : string;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVerticalAlign () : any;
    getVisible () : bool;
    getWidth () : any;
    getWordWrap () : bool;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setAutoLink (autoLink : number) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundPaddingBottom (backgroundPaddingBottom : number) : void;
    setBackgroundPaddingLeft (backgroundPaddingLeft : number) : void;
    setBackgroundPaddingRight (backgroundPaddingRight : number) : void;
    setBackgroundPaddingTop (backgroundPaddingTop : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setColor (color : string) : void;
    setEllipsize (ellipsize : bool) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setFont (font : FontStatic) : void;
    setHeight (height : number) : void;
    setHighlightedColor (highlightedColor : string) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setHtml (html : string) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setMinimumFontSize (minimumFontSize : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setShadowColor (shadowColor : string) : void;
    setShadowOffset (shadowOffset : any) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setText (text : string) : void;
    setTextAlign (textAlign : string) : void;
    setTextid (textid : string) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVerticalAlign (verticalAlign : number) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setWordWrap (wordWrap : bool) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUITabbedBarStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    height : number;
    horizontalWrap : bool;
    index : number;
    labels : any[];
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    size : DimensionStatic;
    style : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getHeight () : any;
    getHorizontalWrap () : bool;
    getIndex () : number;
    getLabels () : any;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getSize () : DimensionStatic;
    getStyle () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setIndex (index : number) : void;
    setLabels (labels : any[]) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setStyle (style : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUITableViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    allowsSelection : bool;
    allowsSelectionDuringEditing : bool;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    data : any;
    editable : bool;
    editing : bool;
    filterAttribute : string;
    filterCaseInsensitive : bool;
    focusable : bool;
    footerTitle : string;
    footerView : TitaniumUIViewStatic;
    headerPullView : TitaniumUIViewStatic;
    headerTitle : string;
    headerView : TitaniumUIViewStatic;
    height : number;
    hideSearchOnSelection : bool;
    horizontalWrap : bool;
    index : any[];
    keepScreenOn : bool;
    layout : string;
    left : number;
    maxRowHeight : number;
    minRowHeight : number;
    moveable : bool;
    moving : bool;
    opacity : number;
    overScrollMode : number;
    rect : DimensionStatic;
    right : number;
    rowHeight : number;
    scrollIndicatorStyle : number;
    scrollable : bool;
    scrollsToTop : bool;
    search : TitaniumUISearchBarStatic;
    searchAsChild : bool;
    searchHidden : bool;
    sectionCount : number;
    sections : any[];
    separatorColor : string;
    separatorStyle : number;
    showVerticalScrollIndicator : bool;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    style : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    appendRow (row : TitaniumUITableViewRowStatic, animation? : TableViewAnimationPropertiesStatic) : void;
    appendSection (section : TitaniumUITableViewSectionStatic, animation? : TableViewAnimationPropertiesStatic) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    deleteRow (row : number, animation? : TableViewAnimationPropertiesStatic) : void;
    deleteSection (section : number, animation? : TableViewAnimationPropertiesStatic) : void;
    deselectRow (row : number) : void;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAllowsSelection () : bool;
    getAllowsSelectionDuringEditing () : bool;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getData () : any;
    getEditable () : bool;
    getEditing () : bool;
    getFilterAttribute () : string;
    getFilterCaseInsensitive () : bool;
    getFocusable () : bool;
    getFooterTitle () : string;
    getFooterView () : TitaniumUIViewStatic;
    getHeaderPullView () : TitaniumUIViewStatic;
    getHeaderTitle () : string;
    getHeaderView () : TitaniumUIViewStatic;
    getHeight () : any;
    getHideSearchOnSelection () : bool;
    getHorizontalWrap () : bool;
    getIndex () : any[];
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getMaxRowHeight () : number;
    getMinRowHeight () : number;
    getMoveable () : bool;
    getMoving () : bool;
    getOpacity () : number;
    getOverScrollMode () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getRowHeight () : number;
    getScrollIndicatorStyle () : number;
    getScrollable () : bool;
    getScrollsToTop () : bool;
    getSearch () : any;
    getSearchAsChild () : bool;
    getSearchHidden () : bool;
    getSectionCount () : number;
    getSections () : any[];
    getSeparatorColor () : string;
    getSeparatorStyle () : number;
    getShowVerticalScrollIndicator () : bool;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getStyle () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    insertRowAfter (index : number, row : TitaniumUITableViewRowStatic, animation? : TableViewAnimationPropertiesStatic) : void;
    insertRowBefore (index : number, row : TitaniumUITableViewRowStatic, animation? : TableViewAnimationPropertiesStatic) : void;
    insertSectionAfter (index : number, section : TitaniumUITableViewSectionStatic, animation? : TableViewAnimationPropertiesStatic) : void;
    insertSectionBefore (index : number, section : TitaniumUITableViewSectionStatic, animation? : TableViewAnimationPropertiesStatic) : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    scrollToIndex (index : number, animation? : TableViewAnimationPropertiesStatic) : void;
    scrollToTop (top : number, animation? : TableViewAnimationPropertiesStatic) : void;
    selectRow (row : number) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAllowsSelection (allowsSelection : bool) : void;
    setAllowsSelectionDuringEditing (allowsSelectionDuringEditing : bool) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setContentInsets (edgeInsets : TableViewEdgeInsetsStatic, animated? : TableViewContentInsetOptionStatic) : void;
    setData (data : any[], animation : TableViewAnimationPropertiesStatic) : void;
    setEditable (editable : bool) : void;
    setEditing (editing : bool) : void;
    setFilterAttribute (filterAttribute : string) : void;
    setFilterCaseInsensitive (filterCaseInsensitive : bool) : void;
    setFocusable (focusable : bool) : void;
    setFooterTitle (footerTitle : string) : void;
    setFooterView (footerView : TitaniumUIViewStatic) : void;
    setHeaderPullView (view : TitaniumUIViewStatic) : void;
    setHeaderTitle (headerTitle : string) : void;
    setHeaderView (headerView : TitaniumUIViewStatic) : void;
    setHeight (height : number) : void;
    setHideSearchOnSelection (hideSearchOnSelection : bool) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setIndex (index : any[]) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setMaxRowHeight (maxRowHeight : number) : void;
    setMinRowHeight (minRowHeight : number) : void;
    setMoveable (moveable : bool) : void;
    setMoving (moving : bool) : void;
    setOpacity (opacity : number) : void;
    setOverScrollMode (overScrollMode : number) : void;
    setRight (right : number) : void;
    setRowHeight (rowHeight : number) : void;
    setScrollIndicatorStyle (scrollIndicatorStyle : number) : void;
    setScrollable (scrollable : bool) : void;
    setScrollsToTop (scrollsToTop : bool) : void;
    setSearch (search : TitaniumUISearchBarStatic) : void;
    setSearchAsChild (searchAsChild : bool) : void;
    setSearchHidden (searchHidden : bool) : void;
    setSections (sections : any[]) : void;
    setSeparatorColor (separatorColor : string) : void;
    setSeparatorStyle (separatorStyle : number) : void;
    setShowVerticalScrollIndicator (showVerticalScrollIndicator : bool) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setStyle (style : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
    updateRow (index : number, row : TitaniumUITableViewRowStatic, animation : TableViewAnimationPropertiesStatic) : void;
    updateSection (index : number, section : TitaniumUITableViewSectionStatic, animation : TableViewAnimationPropertiesStatic) : void;
}
declare interface TitaniumUIWindowStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    activity : TitaniumAndroidActivityStatic;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backButtonTitle : string;
    backButtonTitleImage : string;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    barColor : string;
    barImage : string;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    enabled : bool;
    exitOnClose : bool;
    focusable : bool;
    fullscreen : bool;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    leftNavButton : TitaniumUIViewStatic;
    modal : bool;
    navBarHidden : bool;
    opacity : number;
    orientation : number;
    orientationModes : any[];
    rect : DimensionStatic;
    right : number;
    rightNavButton : TitaniumUIViewStatic;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    tabBarHidden : bool;
    title : string;
    titleControl : TitaniumUIViewStatic;
    titleImage : string;
    titlePrompt : string;
    titleid : string;
    titlepromptid : string;
    toolbar : any[];
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    translucent : bool;
    url : string;
    visible : bool;
    width : number;
    windowPixelFormat : number;
    windowSoftInputMode : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close (params? : TitaniumUIAnimationStatic) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getActivity () : TitaniumAndroidActivityStatic;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackButtonTitle () : string;
    getBackButtonTitleImage () : any;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBarColor () : string;
    getBarImage () : string;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getEnabled () : bool;
    getExitOnClose () : bool;
    getFocusable () : bool;
    getFullscreen () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getLeftNavButton () : TitaniumUIViewStatic;
    getModal () : bool;
    getNavBarHidden () : bool;
    getOpacity () : number;
    getOrientation () : number;
    getOrientationModes () : any[];
    getRect () : DimensionStatic;
    getRight () : any;
    getRightNavButton () : TitaniumUIViewStatic;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTabBarHidden () : bool;
    getTitle () : string;
    getTitleControl () : TitaniumUIViewStatic;
    getTitleImage () : string;
    getTitlePrompt () : string;
    getTitleid () : string;
    getTitlepromptid () : string;
    getToolbar () : any[];
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getTranslucent () : bool;
    getUrl () : string;
    getVisible () : bool;
    getWidth () : any;
    getWindowPixelFormat () : number;
    getWindowSoftInputMode () : number;
    getZIndex () : number;
    hide () : void;
    hideTabBar () : void;
    open (params? : OpenWindowParamsStatic) : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setActivity (activity : TitaniumAndroidActivityStatic) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackButtonTitle (backButtonTitle : string) : void;
    setBackButtonTitleImage (backButtonTitleImage : string) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBarColor (barColor : string) : void;
    setBarImage (barImage : string) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setEnabled (enabled : bool) : void;
    setFocusable (focusable : bool) : void;
    setFullscreen (fullscreen : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setLeftNavButton (leftNavButton : TitaniumUIViewStatic) : void;
    setModal (modal : bool) : void;
    setNavBarHidden (navBarHidden : bool) : void;
    setOpacity (opacity : number) : void;
    setOrientationModes (orientationModes : any[]) : void;
    setRight (right : number) : void;
    setRightNavButton (rightNavButton : TitaniumUIViewStatic) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTabBarHidden (tabBarHidden : bool) : void;
    setTitle (title : string) : void;
    setTitleControl (titleControl : TitaniumUIViewStatic) : void;
    setTitleImage (titleImage : string) : void;
    setTitlePrompt (titlePrompt : string) : void;
    setTitleid (titleid : string) : void;
    setTitlepromptid (titlepromptid : string) : void;
    setToolbar (toolbar : any[]) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setTranslucent (translucent : bool) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setWindowPixelFormat (windowPixelFormat : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIListSectionStatic {
    footerTitle : string;
    headerTitle : string;
    items : any[];
    appendItems (dataItems : any[], animation? : ListViewAnimationPropertiesStatic) : void;
    applyProperties (props : any) : void;
    deleteItemsAt (itemIndex : number, count : number, animation? : ListViewAnimationPropertiesStatic) : void;
    getFooterTitle () : string;
    getHeaderTitle () : string;
    getItemAt (itemIndex : number) : ListDataItemStatic;
    getItems () : any[];
    insertItemsAt (itemIndex : number, dataItems : any[], animation? : ListViewAnimationPropertiesStatic) : void;
    replaceItemsAt (index : number, count : number, dataItems : any[], animation? : ListViewAnimationPropertiesStatic) : void;
    setFooterTitle (footerTitle : string) : void;
    setHeaderTitle (headerTitle : string) : void;
    setItems (dataItems : any[], animation? : ListViewAnimationPropertiesStatic) : void;
    updateItemAt (index : number, dataItem : ListDataItemStatic, animation? : ListViewAnimationPropertiesStatic) : void;
}
declare interface TitaniumUIPickerColumnStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    focusable : bool;
    height : number;
    horizontalWrap : bool;
    keepScreenOn : bool;
    layout : string;
    left : number;
    opacity : number;
    rect : DimensionStatic;
    right : number;
    rowCount : number;
    rows : any[];
    selectedRow : TitaniumUIPickerRowStatic;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    addRow (row : TitaniumUIPickerRowStatic) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getFocusable () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRight () : any;
    getRowCount () : number;
    getRows () : any[];
    getSelectedRow () : TitaniumUIPickerRowStatic;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeRow (row : TitaniumUIPickerRowStatic) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setOpacity (opacity : number) : void;
    setRight (right : number) : void;
    setSelectedRow (selectedRow : TitaniumUIPickerRowStatic) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumUIPickerStatic {
    bubbleParent : bool;
    columns : any[];
    countDownDuration : number;
    format24 : bool;
    locale : string;
    maxDate : Date;
    minDate : Date;
    minuteInterval : number;
    selectionIndicator : bool;
    type : number;
    useSpinner : bool;
    value : Date;
    visibleItems : number;
    add (data : any[]) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getColumns () : any[];
    getCountDownDuration () : number;
    getFormat24 () : bool;
    getLocale () : string;
    getMaxDate () : Date;
    getMinDate () : Date;
    getMinuteInterval () : number;
    getSelectedRow (index : number) : TitaniumUIPickerRowStatic;
    getSelectionIndicator () : bool;
    getType () : number;
    getUseSpinner () : bool;
    getValue () : Date;
    getVisibleItems () : number;
    reloadColumn (column : TitaniumUIPickerColumnStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setColumns (columns : any[]) : void;
    setCountDownDuration (countDownDuration : number) : void;
    setFormat24 (format24 : bool) : void;
    setLocale (locale : string) : void;
    setMaxDate (maxDate : Date) : void;
    setMinDate (minDate : Date) : void;
    setMinuteInterval (minuteInterval : number) : void;
    setSelectedRow (column : number, row : number, animated? : bool) : void;
    setSelectionIndicator (selectionIndicator : bool) : void;
    setType (type : number) : void;
    setUseSpinner (useSpinner : bool) : void;
    setValue (date : any, suppressEvent : bool) : TitaniumUIPickerRowStatic;
    setVisibleItems (visibleItems : number) : void;
    showDatePickerDialog (dictObj : any) : void;
    showTimePickerDialog (dictObj : any) : void;
}
declare interface TitaniumUIStatic {
    iPhone : TitaniumUIIPhoneStatic;
    iPad : TitaniumUIIPadStatic;
    EmailDialog : TitaniumUIEmailDialogStatic;
    CoverFlowView : TitaniumUICoverFlowViewStatic;
    ImageView : TitaniumUIImageViewStatic;
    MaskedImage : TitaniumUIMaskedImageStatic;
    MobileWeb : TitaniumUIMobileWebStatic;
    TextField : TitaniumUITextFieldStatic;
    TextArea : TitaniumUITextAreaStatic;
    ActivityIndicatorStyle : TitaniumUIActivityIndicatorStyleStatic;
    Switch : TitaniumUISwitchStatic;
    iOS : TitaniumUIIOSStatic;
    Clipboard : TitaniumUIClipboardStatic;
    Tab : TitaniumUITabStatic;
    TableViewRow : TitaniumUITableViewRowStatic;
    PickerRow : TitaniumUIPickerRowStatic;
    ProgressBar : TitaniumUIProgressBarStatic;
    ScrollableView : TitaniumUIScrollableViewStatic;
    Notification : TitaniumUINotificationStatic;
    ScrollView : TitaniumUIScrollViewStatic;
    Slider : TitaniumUISliderStatic;
    Android : TitaniumUIAndroidStatic;
    DashboardView : TitaniumUIDashboardViewStatic;
    _3DMatrix : TitaniumUI_3DMatrixStatic;
    ListView : TitaniumUIListViewStatic;
    DashboardItem : TitaniumUIDashboardItemStatic;
    Toolbar : TitaniumUIToolbarStatic;
    View : TitaniumUIViewStatic;
    ListItem : TitaniumUIListItemStatic;
    WebView : TitaniumUIWebViewStatic;
    TableViewSection : TitaniumUITableViewSectionStatic;
    TabGroup : TitaniumUITabGroupStatic;
    AlertDialog : TitaniumUIAlertDialogStatic;
    SearchBar : TitaniumUISearchBarStatic;
    Button : TitaniumUIButtonStatic;
    Animation : TitaniumUIAnimationStatic;
    ActivityIndicator : TitaniumUIActivityIndicatorStatic;
    _2DMatrix : TitaniumUI_2DMatrixStatic;
    OptionDialog : TitaniumUIOptionDialogStatic;
    ButtonBar : TitaniumUIButtonBarStatic;
    Label : TitaniumUILabelStatic;
    TabbedBar : TitaniumUITabbedBarStatic;
    TableView : TitaniumUITableViewStatic;
    Window : TitaniumUIWindowStatic;
    ListSection : TitaniumUIListSectionStatic;
    PickerColumn : TitaniumUIPickerColumnStatic;
    Picker : TitaniumUIPickerStatic;
    ANIMATION_CURVE_EASE_IN : number;
    ANIMATION_CURVE_EASE_IN_OUT : number;
    ANIMATION_CURVE_EASE_OUT : number;
    ANIMATION_CURVE_LINEAR : number;
    AUTODETECT_ADDRESS : number;
    AUTODETECT_ALL : number;
    AUTODETECT_CALENDAR : number;
    AUTODETECT_LINK : number;
    AUTODETECT_NONE : number;
    AUTODETECT_PHONE : number;
    AUTOLINK_ALL : number;
    AUTOLINK_CALENDAR : number;
    AUTOLINK_EMAIL_ADDRESSES : number;
    AUTOLINK_MAP_ADDRESSES : number;
    AUTOLINK_NONE : number;
    AUTOLINK_PHONE_NUMBERS : number;
    AUTOLINK_URLS : number;
    BLEND_MODE_CLEAR : number;
    BLEND_MODE_COLOR : number;
    BLEND_MODE_COLOR_BURN : number;
    BLEND_MODE_COLOR_DODGE : number;
    BLEND_MODE_COPY : number;
    BLEND_MODE_DARKEN : number;
    BLEND_MODE_DESTINATION_ATOP : number;
    BLEND_MODE_DESTINATION_IN : number;
    BLEND_MODE_DESTINATION_OUT : number;
    BLEND_MODE_DESTINATION_OVER : number;
    BLEND_MODE_DIFFERENCE : number;
    BLEND_MODE_EXCLUSION : number;
    BLEND_MODE_HARD_LIGHT : number;
    BLEND_MODE_HUE : number;
    BLEND_MODE_LIGHTEN : number;
    BLEND_MODE_LUMINOSITY : number;
    BLEND_MODE_MULTIPLY : number;
    BLEND_MODE_NORMAL : number;
    BLEND_MODE_OVERLAY : number;
    BLEND_MODE_PLUS_DARKER : number;
    BLEND_MODE_PLUS_LIGHTER : number;
    BLEND_MODE_SATURATION : number;
    BLEND_MODE_SCREEN : number;
    BLEND_MODE_SOFT_LIGHT : number;
    BLEND_MODE_SOURCE_ATOP : number;
    BLEND_MODE_SOURCE_IN : number;
    BLEND_MODE_SOURCE_OUT : number;
    BLEND_MODE_XOR : number;
    FACE_DOWN : number;
    FACE_UP : number;
    FILL : string;
    INHERIT : string;
    INPUT_BORDERSTYLE_BEZEL : number;
    INPUT_BORDERSTYLE_LINE : number;
    INPUT_BORDERSTYLE_NONE : number;
    INPUT_BORDERSTYLE_ROUNDED : number;
    INPUT_BUTTONMODE_ALWAYS : number;
    INPUT_BUTTONMODE_NEVER : number;
    INPUT_BUTTONMODE_ONBLUR : number;
    INPUT_BUTTONMODE_ONFOCUS : number;
    KEYBOARD_APPEARANCE_ALERT : number;
    KEYBOARD_APPEARANCE_DEFAULT : number;
    KEYBOARD_ASCII : number;
    KEYBOARD_DECIMAL_PAD : number;
    KEYBOARD_DEFAULT : number;
    KEYBOARD_EMAIL : number;
    KEYBOARD_NAMEPHONE_PAD : number;
    KEYBOARD_NUMBERS_PUNCTUATION : number;
    KEYBOARD_NUMBER_PAD : number;
    KEYBOARD_PHONE_PAD : number;
    KEYBOARD_URL : number;
    LANDSCAPE_LEFT : number;
    LANDSCAPE_RIGHT : number;
    LIST_ACCESSORY_TYPE_CHECKMARK : number;
    LIST_ACCESSORY_TYPE_DETAIL : number;
    LIST_ACCESSORY_TYPE_DISCLOSURE : number;
    LIST_ACCESSORY_TYPE_NONE : number;
    LIST_ITEM_TEMPLATE_CONTACTS : number;
    LIST_ITEM_TEMPLATE_DEFAULT : number;
    LIST_ITEM_TEMPLATE_SETTINGS : number;
    LIST_ITEM_TEMPLATE_SUBTITLE : number;
    NOTIFICATION_DURATION_LONG : number;
    NOTIFICATION_DURATION_SHORT : number;
    PICKER_TYPE_COUNT_DOWN_TIMER : number;
    PICKER_TYPE_DATE : number;
    PICKER_TYPE_DATE_AND_TIME : number;
    PICKER_TYPE_PLAIN : number;
    PICKER_TYPE_TIME : number;
    PORTRAIT : number;
    RETURNKEY_DEFAULT : number;
    RETURNKEY_DONE : number;
    RETURNKEY_EMERGENCY_CALL : number;
    RETURNKEY_GO : number;
    RETURNKEY_GOOGLE : number;
    RETURNKEY_JOIN : number;
    RETURNKEY_NEXT : number;
    RETURNKEY_ROUTE : number;
    RETURNKEY_SEARCH : number;
    RETURNKEY_SEND : number;
    RETURNKEY_YAHOO : number;
    SIZE : string;
    TEXT_ALIGNMENT_CENTER : number;
    TEXT_ALIGNMENT_LEFT : number;
    TEXT_ALIGNMENT_RIGHT : number;
    TEXT_AUTOCAPITALIZATION_ALL : number;
    TEXT_AUTOCAPITALIZATION_NONE : number;
    TEXT_AUTOCAPITALIZATION_SENTENCES : number;
    TEXT_AUTOCAPITALIZATION_WORDS : number;
    TEXT_VERTICAL_ALIGNMENT_BOTTOM : number;
    TEXT_VERTICAL_ALIGNMENT_CENTER : number;
    TEXT_VERTICAL_ALIGNMENT_TOP : number;
    UNIT_CM : string;
    UNIT_DIP : string;
    UNIT_IN : string;
    UNIT_MM : string;
    UNIT_PX : string;
    UNKNOWN : number;
    UPSIDE_PORTRAIT : number;
    URL_ERROR_AUTHENTICATION : number;
    URL_ERROR_BAD_URL : number;
    URL_ERROR_CONNECT : number;
    URL_ERROR_FILE : number;
    URL_ERROR_FILE_NOT_FOUND : number;
    URL_ERROR_HOST_LOOKUP : number;
    URL_ERROR_REDIRECT_LOOP : number;
    URL_ERROR_SSL_FAILED : number;
    URL_ERROR_TIMEOUT : number;
    URL_ERROR_UNKNOWN : number;
    URL_ERROR_UNSUPPORTED_SCHEME : number;
    backgroundColor : string;
    backgroundImage : string;
    bubbleParent : bool;
    currentTab : TitaniumUITabStatic;
    currentWindow : TitaniumUIWindowStatic;
    orientation : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertUnits (convertFromValue : string, convertToUnits : string) : number;
    create2DMatrix (parameters? : MatrixCreationDictStatic) : TitaniumUI_2DMatrixStatic;
    create3DMatrix (parameters? : TitaniumUI_3DMatrixStatic) : TitaniumUI_3DMatrixStatic;
    createActivityIndicator (parameters? : TitaniumUIActivityIndicatorStatic) : TitaniumUIActivityIndicatorStatic;
    createAlertDialog (parameters? : TitaniumUIAlertDialogStatic) : TitaniumUIAlertDialogStatic;
    createAnimation (parameters? : TitaniumUIAnimationStatic) : TitaniumUIAnimationStatic;
    createButton (parameters? : TitaniumUIButtonStatic) : TitaniumUIButtonStatic;
    createButtonBar (parameters? : TitaniumUIButtonBarStatic) : TitaniumUIButtonBarStatic;
    createCoverFlowView (parameters? : TitaniumUICoverFlowViewStatic) : TitaniumUICoverFlowViewStatic;
    createDashboardItem (parameters? : TitaniumUIDashboardItemStatic) : TitaniumUIDashboardItemStatic;
    createDashboardView (parameters? : TitaniumUIDashboardViewStatic) : TitaniumUIDashboardViewStatic;
    createEmailDialog (parameters? : TitaniumUIEmailDialogStatic) : TitaniumUIEmailDialogStatic;
    createImageView (parameters? : TitaniumUIImageViewStatic) : TitaniumUIImageViewStatic;
    createLabel (parameters? : TitaniumUILabelStatic) : TitaniumUILabelStatic;
    createListSection (parameters? : TitaniumUIListSectionStatic) : TitaniumUIListSectionStatic;
    createListView (parameters? : TitaniumUIListViewStatic) : TitaniumUIListViewStatic;
    createMaskedImage (parameters? : TitaniumUIMaskedImageStatic) : TitaniumUIMaskedImageStatic;
    createNotification (parameters? : TitaniumUINotificationStatic) : TitaniumUINotificationStatic;
    createOptionDialog (parameters? : TitaniumUIOptionDialogStatic) : TitaniumUIOptionDialogStatic;
    createPicker (parameters? : TitaniumUIPickerStatic) : TitaniumUIPickerStatic;
    createPickerColumn (parameters? : TitaniumUIPickerColumnStatic) : TitaniumUIPickerColumnStatic;
    createPickerRow (parameters? : TitaniumUIPickerRowStatic) : TitaniumUIPickerRowStatic;
    createProgressBar (parameters? : TitaniumUIProgressBarStatic) : TitaniumUIProgressBarStatic;
    createScrollView (parameters? : TitaniumUIScrollViewStatic) : TitaniumUIScrollViewStatic;
    createScrollableView (parameters? : TitaniumUIScrollableViewStatic) : TitaniumUIScrollableViewStatic;
    createSearchBar (parameters? : TitaniumUISearchBarStatic) : TitaniumUISearchBarStatic;
    createSlider (parameters? : TitaniumUISliderStatic) : TitaniumUISliderStatic;
    createSwitch (parameters? : TitaniumUISwitchStatic) : TitaniumUISwitchStatic;
    createTab (parameters? : TitaniumUITabStatic) : TitaniumUITabStatic;
    createTabGroup (parameters? : TitaniumUITabGroupStatic) : TitaniumUITabGroupStatic;
    createTabbedBar (parameters? : TitaniumUITabbedBarStatic) : TitaniumUITabbedBarStatic;
    createTableView (parameters? : TitaniumUITableViewStatic) : TitaniumUITableViewStatic;
    createTableViewRow (parameters? : TitaniumUITableViewRowStatic) : TitaniumUITableViewRowStatic;
    createTableViewSection (parameters? : TitaniumUITableViewSectionStatic) : TitaniumUITableViewSectionStatic;
    createTextArea (parameters? : TitaniumUITextAreaStatic) : TitaniumUITextAreaStatic;
    createTextField (parameters? : TitaniumUITextFieldStatic) : TitaniumUITextFieldStatic;
    createToolbar (parameters? : TitaniumUIToolbarStatic) : TitaniumUIToolbarStatic;
    createView (parameters? : TitaniumUIViewStatic) : TitaniumUIViewStatic;
    createWebView (parameters? : TitaniumUIWebViewStatic) : TitaniumUIWebViewStatic;
    createWindow (parameters? : TitaniumUIWindowStatic) : TitaniumUIWindowStatic;
    fireEvent (name : string, event : any) : void;
    getBackgroundColor () : string;
    getBackgroundImage () : string;
    getBubbleParent () : bool;
    getCurrentTab () : TitaniumUITabStatic;
    getCurrentWindow () : TitaniumUIWindowStatic;
    getOrientation () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCurrentTab (currentTab : TitaniumUITabStatic) : void;
    setOrientation (orientation : number) : void;
}
declare interface TitaniumCloudCheckinsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudPhotoCollectionsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    search (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    showPhotos (parameters : any, callback : (...args : any[]) => any) : void;
    showSubCollections (parameters : any, callback : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudFriendsStatic {
    bubbleParent : bool;
    add (parameters : any, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    approve (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    requests (parameters : any, callback : (...args : any[]) => any) : void;
    search (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCloudObjectsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters? : any, callback? : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudStatusesStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    search (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCloudPostsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudPhotosStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    search (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudEventsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    queryOccurrences (parameters? : any, callback? : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    search (parameters? : any, callback? : (...args : any[]) => any) : void;
    searchOccurrences (parameters? : any, callback? : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters? : any, callback? : (...args : any[]) => any) : void;
    showOccurrences (parameters? : any, callback? : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudPushNotificationsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    getBubbleParent () : bool;
    notify (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    subscribe (parameters : any, callback : (...args : any[]) => any) : void;
    unsubscribe (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudSocialIntegrationsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    externalAccountLink (parameters : any, callback : (...args : any[]) => any) : void;
    externalAccountLogin (parameters : any, callback : (...args : any[]) => any) : void;
    externalAccountUnlink (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    searchFacebookFriends (callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCloudEmailsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    getBubbleParent () : bool;
    send (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCloudReviewsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters : any, callback : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudMessagesStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    removeThread (parameters : any, callback : (...args : any[]) => any) : void;
    reply (parameters? : any, callback? : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    showInbox (parameters : any, callback : (...args : any[]) => any) : void;
    showSent (parameters : any, callback : (...args : any[]) => any) : void;
    showThread (parameters : any, callback : (...args : any[]) => any) : void;
    showThreads (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudACLsStatic {
    bubbleParent : bool;
    addUser (parameters : any, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    checkUser (parameters : any, callback : (...args : any[]) => any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    removeUser (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    update (parameters? : any, callback? : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudFilesStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudPlacesStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    search (parameters? : any, callback? : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudChatsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    getChatGroups (parameters? : any, callback? : (...args : any[]) => any) : void;
    query (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCloudClientsStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    geolocate (parameters? : any, callback? : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCloudKeyValuesStatic {
    bubbleParent : bool;
    append (parameters : any, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    get (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    increment (parameters : any, callback : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    set (parameters : any, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCloudUsersStatic {
    bubbleParent : bool;
    applyProperties (props : any) : void;
    create (parameters : any, callback : (...args : any[]) => any) : void;
    getBubbleParent () : bool;
    login (parameters : any, callback : (...args : any[]) => any) : void;
    logout (callback : (...args : any[]) => any) : void;
    query (parameters? : any, callback? : (...args : any[]) => any) : void;
    remove (parameters : any, callback : (...args : any[]) => any) : void;
    requestResetPassword (parameters : any, callback : (...args : any[]) => any) : void;
    search (parameters? : any, callback? : (...args : any[]) => any) : void;
    secureCreate (parameters? : CloudUsersSecureDialogStatic, callback? : (...args : any[]) => any) : void;
    secureLogin (parameters? : CloudUsersSecureDialogStatic, callback? : (...args : any[]) => any) : void;
    secureStatus () : bool;
    setBubbleParent (bubbleParent : bool) : void;
    show (parameters : any, callback : (...args : any[]) => any) : void;
    showMe (callback : (...args : any[]) => any) : void;
    update (parameters : any, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumCloudStatic {
    Checkins : TitaniumCloudCheckinsStatic;
    PhotoCollections : TitaniumCloudPhotoCollectionsStatic;
    Friends : TitaniumCloudFriendsStatic;
    Objects : TitaniumCloudObjectsStatic;
    Statuses : TitaniumCloudStatusesStatic;
    Posts : TitaniumCloudPostsStatic;
    Photos : TitaniumCloudPhotosStatic;
    Events : TitaniumCloudEventsStatic;
    PushNotifications : TitaniumCloudPushNotificationsStatic;
    SocialIntegrations : TitaniumCloudSocialIntegrationsStatic;
    Emails : TitaniumCloudEmailsStatic;
    Reviews : TitaniumCloudReviewsStatic;
    Messages : TitaniumCloudMessagesStatic;
    ACLs : TitaniumCloudACLsStatic;
    Files : TitaniumCloudFilesStatic;
    Places : TitaniumCloudPlacesStatic;
    Chats : TitaniumCloudChatsStatic;
    Clients : TitaniumCloudClientsStatic;
    KeyValues : TitaniumCloudKeyValuesStatic;
    Users : TitaniumCloudUsersStatic;
    accessToken : string;
    bubbleParent : bool;
    debug : bool;
    expiresIn : number;
    ondatastream : (...args : any[]) => any;
    onsendstream : (...args : any[]) => any;
    sessionId : string;
    useSecure : bool;
    applyProperties (props : any) : void;
    getAccessToken () : string;
    getBubbleParent () : bool;
    getDebug () : bool;
    getExpiresIn () : number;
    getOndatastream () : (...args : any[]) => any;
    getOnsendstream () : (...args : any[]) => any;
    getSessionId () : string;
    getUseSecure () : bool;
    hasStoredSession () : bool;
    retrieveStoredSession () : string;
    setAccessToken (accessToken : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDebug (debug : bool) : void;
    setOndatastream (ondatastream : (...args : any[]) => any) : void;
    setOnsendstream (onsendstream : (...args : any[]) => any) : void;
    setSessionId (sessionId : string) : void;
    setUseSecure (useSecure : bool) : void;
}
declare interface TitaniumMediaAudioPlayerStatic {
    STATE_BUFFERING : number;
    STATE_INITIALIZED : number;
    STATE_PAUSED : number;
    STATE_PLAYING : number;
    STATE_STARTING : number;
    STATE_STOPPED : number;
    STATE_STOPPING : number;
    STATE_WAITING_FOR_DATA : number;
    STATE_WAITING_FOR_QUEUE : number;
    allowBackground : bool;
    autoplay : bool;
    bitRate : number;
    bubbleParent : bool;
    bufferSize : number;
    idle : bool;
    paused : bool;
    playing : bool;
    progress : number;
    state : number;
    url : string;
    volume : number;
    waiting : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAllowBackground () : bool;
    getAutoplay () : bool;
    getBitRate () : number;
    getBubbleParent () : bool;
    getBufferSize () : number;
    getIdle () : bool;
    getPaused () : bool;
    getPlaying () : bool;
    getProgress () : number;
    getState () : number;
    getUrl () : string;
    getVolume () : number;
    getWaiting () : bool;
    isPaused () : bool;
    isPlaying () : bool;
    pause () : void;
    play () : void;
    release () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBitRate (bitRate : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setBufferSize (bufferSize : number) : void;
    setPaused (paused : bool) : void;
    setUrl (url : string) : void;
    setVolume (volume : number) : void;
    start () : void;
    stateDescription (state : number) : string;
    stop () : void;
}
declare interface TitaniumMediaAndroidStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    scanMediaFiles (paths : any[], mimeTypes : any[], callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setSystemWallpaper (image : TitaniumBlobStatic, scale : bool) : void;
}
declare interface TitaniumMediaAudioRecorderStatic {
    bubbleParent : bool;
    compression : number;
    format : number;
    paused : bool;
    recording : bool;
    stopped : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getCompression () : number;
    getFormat () : number;
    getPaused () : bool;
    getRecording () : bool;
    getStopped () : bool;
    pause () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    resume () : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCompression (compression : number) : void;
    setFormat (format : number) : void;
    start () : void;
    stop () : TitaniumFilesystemFileStatic;
}
declare interface TitaniumMediaSoundStatic {
    allowBackground : bool;
    bubbleParent : bool;
    duration : number;
    looping : bool;
    paused : bool;
    playing : bool;
    time : number;
    url : string;
    volume : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getDuration () : number;
    getTime () : number;
    getUrl () : string;
    getVolume () : number;
    isLooping () : bool;
    isPaused () : bool;
    isPlaying () : bool;
    pause () : void;
    play () : void;
    release () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    reset () : void;
    setBubbleParent (bubbleParent : bool) : void;
    setLooping (looping : bool) : void;
    setPaused (paused : bool) : void;
    setTime (time : number) : void;
    setUrl (url : string) : void;
    setVolume (volume : number) : void;
    stop () : void;
}
declare interface TitaniumMediaItemStatic {
    albumArtist : string;
    albumTitle : string;
    albumTrackCount : number;
    albumTrackNumber : number;
    artist : string;
    artwork : TitaniumBlobStatic;
    bubbleParent : bool;
    composer : string;
    discCount : number;
    discNumber : number;
    genre : string;
    isCompilation : bool;
    lyrics : string;
    mediaType : number;
    playCount : number;
    playbackDuration : number;
    podcastTitle : string;
    rating : number;
    skipCount : number;
    title : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAlbumArtist () : string;
    getAlbumTitle () : string;
    getAlbumTrackCount () : number;
    getAlbumTrackNumber () : number;
    getArtist () : string;
    getArtwork () : TitaniumBlobStatic;
    getBubbleParent () : bool;
    getComposer () : string;
    getDiscCount () : number;
    getDiscNumber () : number;
    getGenre () : string;
    getIsCompilation () : bool;
    getLyrics () : string;
    getMediaType () : number;
    getPlayCount () : number;
    getPlaybackDuration () : number;
    getPodcastTitle () : string;
    getRating () : number;
    getSkipCount () : number;
    getTitle () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumMediaVideoPlayerStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    allowsAirPlay : bool;
    anchorPoint : PointStatic;
    animatedCenter : PointStatic;
    autoplay : bool;
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    contentURL : string;
    currentPlaybackTime : number;
    duration : number;
    endPlaybackTime : number;
    focusable : bool;
    fullscreen : bool;
    height : number;
    horizontalWrap : bool;
    initialPlaybackTime : number;
    keepScreenOn : bool;
    layout : string;
    left : number;
    loadState : number;
    media : TitaniumBlobStatic;
    mediaControlStyle : number;
    mediaTypes : number;
    movieControlMode : number;
    naturalSize : MovieSizeStatic;
    opacity : number;
    playableDuration : number;
    playbackState : number;
    playing : bool;
    rect : DimensionStatic;
    repeatMode : number;
    right : number;
    scalingMode : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    sourceType : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    url : string;
    useApplicationAudioSession : bool;
    visible : bool;
    volume : number;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    cancelAllThumbnailImageRequests () : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAllowsAirPlay () : bool;
    getAnchorPoint () : PointStatic;
    getAnimatedCenter () : PointStatic;
    getAutoplay () : bool;
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getContentURL () : string;
    getCurrentPlaybackTime () : number;
    getDuration () : number;
    getEndPlaybackTime () : number;
    getFocusable () : bool;
    getFullscreen () : bool;
    getHeight () : any;
    getHorizontalWrap () : bool;
    getInitialPlaybackTime () : number;
    getKeepScreenOn () : bool;
    getLayout () : string;
    getLeft () : any;
    getLoadState () : number;
    getMediaControlStyle () : number;
    getMediaTypes () : number;
    getMovieControlMode () : number;
    getNaturalSize () : MovieSizeStatic;
    getOpacity () : number;
    getPlayableDuration () : number;
    getPlaybackState () : number;
    getPlaying () : bool;
    getRect () : DimensionStatic;
    getRepeatMode () : number;
    getRight () : any;
    getScalingMode () : number;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getSourceType () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getUrl () : any;
    getUseApplicationAudioSession () : bool;
    getVisible () : bool;
    getVolume () : number;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    pause () : void;
    play () : void;
    release () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllChildren () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    requestThumbnailImagesAtTimes (times : any[], option : number, callback : (...args : any[]) => any) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAllowsAirPlay (allowsAirPlay : bool) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setAutoplay (autoplay : bool) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBackgroundView (view : TitaniumUIViewStatic) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setContentURL (contentURL : string) : void;
    setCurrentPlaybackTime (currentPlaybackTime : number) : void;
    setDuration (duration : number) : void;
    setEndPlaybackTime (endPlaybackTime : number) : void;
    setFocusable (focusable : bool) : void;
    setFullscreen (fullscreen : bool) : void;
    setHeight (height : number) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setInitialPlaybackTime (initialPlaybackTime : number) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setMedia (media : TitaniumBlobStatic) : void;
    setMediaControlStyle (mediaControlStyle : number) : void;
    setMediaTypes (mediaTypes : number) : void;
    setMovieControlMode (movieControlMode : number) : void;
    setNaturalSize (naturalSize : MovieSizeStatic) : void;
    setOpacity (opacity : number) : void;
    setRepeatMode (repeatMode : number) : void;
    setRight (right : number) : void;
    setScalingMode (scalingMode : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setSourceType (sourceType : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setUrl (url : string) : void;
    setUseApplicationAudioSession (useApplicationAudioSession : bool) : void;
    setVisible (visible : bool) : void;
    setVolume (volume : number) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    stop () : void;
    thumbnailImageAtTime (time : number, option : number) : TitaniumBlobStatic;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
}
declare interface TitaniumMediaMusicPlayerStatic {
    bubbleParent : bool;
    currentPlaybackTime : number;
    nowPlaying : TitaniumMediaItemStatic;
    playbackState : number;
    repeatMode : number;
    shuffleMode : number;
    volume : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getCurrentPlaybackTime () : number;
    getNowPlaying () : TitaniumMediaItemStatic;
    getPlaybackState () : number;
    getRepeatMode () : number;
    getShuffleMode () : number;
    getVolume () : number;
    pause () : void;
    play () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    seekBackward () : void;
    seekForward () : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCurrentPlaybackTime (currentPlaybackTime : number) : void;
    setQueue (queue : TitaniumMediaItemStatic) : void;
    setRepeatMode (repeatMode : number) : void;
    setShuffleMode (shuffleMode : number) : void;
    setVolume (volume : number) : void;
    skipToBeginning () : void;
    skipToNext () : void;
    skipToPrevious () : void;
    stop () : void;
    stopSeeking () : void;
}
declare interface TitaniumMediaStatic {
    AudioPlayer : TitaniumMediaAudioPlayerStatic;
    Android : TitaniumMediaAndroidStatic;
    AudioRecorder : TitaniumMediaAudioRecorderStatic;
    Sound : TitaniumMediaSoundStatic;
    Item : TitaniumMediaItemStatic;
    VideoPlayer : TitaniumMediaVideoPlayerStatic;
    MusicPlayer : TitaniumMediaMusicPlayerStatic;
    AUDIO_FILEFORMAT_3GP2 : number;
    AUDIO_FILEFORMAT_3GPP : number;
    AUDIO_FILEFORMAT_AIFF : number;
    AUDIO_FILEFORMAT_AMR : number;
    AUDIO_FILEFORMAT_CAF : number;
    AUDIO_FILEFORMAT_MP3 : number;
    AUDIO_FILEFORMAT_MP4 : number;
    AUDIO_FILEFORMAT_MP4A : number;
    AUDIO_FILEFORMAT_WAVE : number;
    AUDIO_FORMAT_AAC : number;
    AUDIO_FORMAT_ALAW : number;
    AUDIO_FORMAT_APPLE_LOSSLESS : number;
    AUDIO_FORMAT_ILBC : number;
    AUDIO_FORMAT_IMA4 : number;
    AUDIO_FORMAT_LINEAR_PCM : number;
    AUDIO_FORMAT_ULAW : number;
    AUDIO_HEADPHONES : number;
    AUDIO_HEADPHONES_AND_MIC : number;
    AUDIO_HEADSET_INOUT : number;
    AUDIO_LINEOUT : number;
    AUDIO_MICROPHONE : number;
    AUDIO_MUTED : number;
    AUDIO_RECEIVER_AND_MIC : number;
    AUDIO_SESSION_MODE_AMBIENT : number;
    AUDIO_SESSION_MODE_PLAYBACK : number;
    AUDIO_SESSION_MODE_PLAY_AND_RECORD : number;
    AUDIO_SESSION_MODE_RECORD : number;
    AUDIO_SESSION_MODE_SOLO_AMBIENT : number;
    AUDIO_SPEAKER : number;
    AUDIO_UNAVAILABLE : number;
    AUDIO_UNKNOWN : number;
    DEVICE_BUSY : number;
    MEDIA_TYPE_PHOTO : string;
    MEDIA_TYPE_VIDEO : string;
    MUSIC_MEDIA_GROUP_ALBUM : number;
    MUSIC_MEDIA_GROUP_ALBUM_ARTIST : number;
    MUSIC_MEDIA_GROUP_ARTIST : number;
    MUSIC_MEDIA_GROUP_COMPOSER : number;
    MUSIC_MEDIA_GROUP_GENRE : number;
    MUSIC_MEDIA_GROUP_PLAYLIST : number;
    MUSIC_MEDIA_GROUP_PODCAST_TITLE : number;
    MUSIC_MEDIA_GROUP_TITLE : number;
    MUSIC_MEDIA_TYPE_ALL : number;
    MUSIC_MEDIA_TYPE_ANY_AUDIO : number;
    MUSIC_MEDIA_TYPE_AUDIOBOOK : number;
    MUSIC_MEDIA_TYPE_MUSIC : number;
    MUSIC_MEDIA_TYPE_PODCAST : number;
    MUSIC_PLAYER_REPEAT_ALL : number;
    MUSIC_PLAYER_REPEAT_DEFAULT : number;
    MUSIC_PLAYER_REPEAT_NONE : number;
    MUSIC_PLAYER_REPEAT_ONE : number;
    MUSIC_PLAYER_SHUFFLE_ALBUMS : number;
    MUSIC_PLAYER_SHUFFLE_DEFAULT : number;
    MUSIC_PLAYER_SHUFFLE_NONE : number;
    MUSIC_PLAYER_SHUFFLE_SONGS : number;
    MUSIC_PLAYER_STATE_INTERRUPTED : number;
    MUSIC_PLAYER_STATE_PAUSED : number;
    MUSIC_PLAYER_STATE_PLAYING : number;
    MUSIC_PLAYER_STATE_SEEK_BACKWARD : number;
    MUSIC_PLAYER_STATE_SEEK_FORWARD : number;
    MUSIC_PLAYER_STATE_STOPPED : number;
    NO_CAMERA : number;
    NO_VIDEO : number;
    QUALITY_HIGH : number;
    QUALITY_LOW : number;
    QUALITY_MEDIUM : number;
    UNKNOWN_ERROR : number;
    VIDEO_CONTROL_DEFAULT : number;
    VIDEO_CONTROL_EMBEDDED : number;
    VIDEO_CONTROL_FULLSCREEN : number;
    VIDEO_CONTROL_HIDDEN : number;
    VIDEO_CONTROL_NONE : number;
    VIDEO_CONTROL_VOLUME_ONLY : number;
    VIDEO_FINISH_REASON_PLAYBACK_ENDED : number;
    VIDEO_FINISH_REASON_PLAYBACK_ERROR : number;
    VIDEO_FINISH_REASON_USER_EXITED : number;
    VIDEO_LOAD_STATE_PLAYABLE : number;
    VIDEO_LOAD_STATE_PLAYTHROUGH_OK : number;
    VIDEO_LOAD_STATE_STALLED : number;
    VIDEO_LOAD_STATE_UNKNOWN : number;
    VIDEO_MEDIA_TYPE_AUDIO : number;
    VIDEO_MEDIA_TYPE_NONE : number;
    VIDEO_MEDIA_TYPE_VIDEO : number;
    VIDEO_PLAYBACK_STATE_INTERRUPTED : number;
    VIDEO_PLAYBACK_STATE_PAUSED : number;
    VIDEO_PLAYBACK_STATE_PLAYING : number;
    VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD : number;
    VIDEO_PLAYBACK_STATE_SEEKING_FORWARD : number;
    VIDEO_PLAYBACK_STATE_STOPPED : number;
    VIDEO_REPEAT_MODE_NONE : number;
    VIDEO_REPEAT_MODE_ONE : number;
    VIDEO_SCALING_ASPECT_FILL : number;
    VIDEO_SCALING_ASPECT_FIT : number;
    VIDEO_SCALING_MODE_FILL : number;
    VIDEO_SCALING_NONE : number;
    VIDEO_SOURCE_TYPE_FILE : number;
    VIDEO_SOURCE_TYPE_STREAMING : number;
    VIDEO_SOURCE_TYPE_UNKNOWN : number;
    VIDEO_TIME_OPTION_EXACT : number;
    VIDEO_TIME_OPTION_NEAREST_KEYFRAME : number;
    appMusicPlayer : TitaniumMediaMusicPlayerStatic;
    audioLineType : number;
    audioPlaying : bool;
    audioSessionMode : number;
    availableCameraMediaTypes : any[];
    availablePhotoGalleryMediaTypes : any[];
    availablePhotoMediaTypes : any[];
    averageMicrophonePower : number;
    bubbleParent : bool;
    canRecord : bool;
    isCameraSupported : bool;
    peakMicrophonePower : number;
    systemMusicPlayer : TitaniumMediaMusicPlayerStatic;
    volume : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    beep () : void;
    createAudioPlayer (parameters? : TitaniumMediaAudioPlayerStatic) : TitaniumMediaAudioPlayerStatic;
    createAudioRecorder (parameters? : TitaniumMediaAudioRecorderStatic) : TitaniumMediaAudioRecorderStatic;
    createItem (parameters? : TitaniumMediaItemStatic) : TitaniumMediaItemStatic;
    createMusicPlayer (parameters? : TitaniumMediaMusicPlayerStatic) : TitaniumMediaMusicPlayerStatic;
    createSound (parameters? : TitaniumMediaSoundStatic) : TitaniumMediaSoundStatic;
    createVideoPlayer (parameters? : TitaniumMediaVideoPlayerStatic) : TitaniumMediaVideoPlayerStatic;
    fireEvent (name : string, event : any) : void;
    getAppMusicPlayer () : TitaniumMediaMusicPlayerStatic;
    getAudioLineType () : number;
    getAudioPlaying () : bool;
    getAudioSessionMode () : number;
    getAvailableCameraMediaTypes () : any[];
    getAvailablePhotoGalleryMediaTypes () : any[];
    getAvailablePhotoMediaTypes () : any[];
    getAverageMicrophonePower () : number;
    getBubbleParent () : bool;
    getCanRecord () : bool;
    getIsCameraSupported () : bool;
    getPeakMicrophonePower () : number;
    getSystemMusicPlayer () : TitaniumMediaMusicPlayerStatic;
    getVolume () : number;
    hideCamera () : void;
    hideMusicLibrary () : void;
    isMediaTypeSupported (source : string, type : string) : bool;
    openMusicLibrary (options : MusicLibraryOptionsTypeStatic) : void;
    openPhotoGallery (options : PhotoGalleryOptionsTypeStatic) : void;
    previewImage (options : PreviewImageOptionsStatic) : void;
    queryMusicLibrary (query : MediaQueryTypeStatic) : any[];
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    saveToPhotoGallery (media : TitaniumBlobStatic, callbacks : any) : void;
    setAudioSessionMode (audioSessionMode : number) : void;
    setAvailableCameraMediaTypes (availableCameraMediaTypes : any[]) : void;
    setAvailablePhotoGalleryMediaTypes (availablePhotoGalleryMediaTypes : any[]) : void;
    setAvailablePhotoMediaTypes (availablePhotoMediaTypes : any[]) : void;
    setAverageMicrophonePower (averageMicrophonePower : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    showCamera (options : CameraOptionsTypeStatic) : void;
    startMicrophoneMonitor () : void;
    stopMicrophoneMonitor () : void;
    takePicture () : void;
    takeScreenshot (callback : (...args : any[]) => any) : void;
    vibrate (pattern? : any[]) : void;
}
declare interface TitaniumAnalyticsStatic {
    bubbleParent : bool;
    addEvent (type : string, name : string, data? : any) : void;
    featureEvent (name : string, data? : any) : void;
    getBubbleParent () : bool;
    navEvent (from : string, to : string, name? : string, data? : any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    settingsEvent (name : string, data? : any) : void;
    timedEvent (name : string, start : Date, stop : Date, duration : number, data? : any) : void;
    userEvent (name : string, data? : any) : void;
}
declare interface TitaniumAPIStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    debug (message : any[]) : void;
    error (message : any[]) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    info (message : any[]) : void;
    log (level : string, message : any[]) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    timestamp (message : any[]) : void;
    trace (message : any[]) : void;
    warn (message : any[]) : void;
}
declare interface TitaniumGeolocationAndroidLocationProviderStatic {
    bubbleParent : bool;
    minUpdateDistance : number;
    minUpdateTime : number;
    name : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getMinUpdateDistance () : number;
    getMinUpdateTime () : number;
    getName () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setMinUpdateDistance (minUpdateDistance : number) : void;
    setMinUpdateTime (minUpdateTime : number) : void;
    setName (name : string) : void;
}
declare interface TitaniumGeolocationAndroidLocationRuleStatic {
    accuracy : number;
    bubbleParent : bool;
    maxAge : number;
    minAge : number;
    name : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAccuracy () : number;
    getBubbleParent () : bool;
    getMaxAge () : number;
    getMinAge () : number;
    getName () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccuracy (accuracy : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setMaxAge (maxAge : number) : void;
    setMinAge (minAge : number) : void;
    setName (name : string) : void;
}
declare interface TitaniumGeolocationAndroidStatic {
    LocationProvider : TitaniumGeolocationAndroidLocationProviderStatic;
    LocationRule : TitaniumGeolocationAndroidLocationRuleStatic;
    bubbleParent : bool;
    manualMode : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    addLocationProvider (provider : TitaniumGeolocationAndroidLocationProviderStatic) : void;
    addLocationRule (rule : TitaniumGeolocationAndroidLocationRuleStatic) : void;
    applyProperties (props : any) : void;
    createLocationProvider (parameters? : TitaniumGeolocationAndroidLocationProviderStatic) : TitaniumGeolocationAndroidLocationProviderStatic;
    createLocationRule (parameters? : TitaniumGeolocationAndroidLocationRuleStatic) : TitaniumGeolocationAndroidLocationRuleStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getManualMode () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeLocationProvider (provider : TitaniumGeolocationAndroidLocationProviderStatic) : void;
    removeLocationRule (rule : TitaniumGeolocationAndroidLocationRuleStatic) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setManualMode (manualMode : bool) : void;
}
declare interface TitaniumGeolocationMobileWebStatic {
    forwardGeocoderTimeout : number;
    locationTimeout : number;
    maximumHeadingAge : number;
    maximumLocationAge : number;
    reverseGeocoderTimeout : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getForwardGeocoderTimeout () : number;
    getLocationTimeout () : number;
    getMaximumHeadingAge () : number;
    getMaximumLocationAge () : number;
    getReverseGeocoderTimeout () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setForwardGeocoderTimeout (forwardGeocoderTimeout : number) : void;
    setLocationTimeout (locationTimeout : number) : void;
    setMaximumHeadingAge (maximumHeadingAge : number) : void;
    setMaximumLocationAge (maximumLocationAge : number) : void;
    setReverseGeocoderTimeout (reverseGeocoderTimeout : number) : void;
}
declare interface TitaniumGeolocationStatic {
    Android : TitaniumGeolocationAndroidStatic;
    MobileWeb : TitaniumGeolocationMobileWebStatic;
    ACCURACY_BEST : number;
    ACCURACY_BEST_FOR_NAVIGATION : number;
    ACCURACY_HIGH : number;
    ACCURACY_HUNDRED_METERS : number;
    ACCURACY_KILOMETER : number;
    ACCURACY_LOW : number;
    ACCURACY_NEAREST_TEN_METERS : number;
    ACCURACY_THREE_KILOMETERS : number;
    ACTIVITYTYPE_AUTOMOTIVE_NAVIGATION : string;
    ACTIVITYTYPE_FITNESS : string;
    ACTIVITYTYPE_OTHER : string;
    ACTIVITYTYPE_OTHER_NAVIGATION : string;
    AUTHORIZATION_AUTHORIZED : number;
    AUTHORIZATION_DENIED : number;
    AUTHORIZATION_RESTRICTED : number;
    AUTHORIZATION_UNKNOWN : number;
    ERROR_DENIED : number;
    ERROR_HEADING_FAILURE : number;
    ERROR_LOCATION_UNKNOWN : number;
    ERROR_NETWORK : number;
    ERROR_REGION_MONITORING_DELAYED : number;
    ERROR_REGION_MONITORING_DENIED : number;
    ERROR_REGION_MONITORING_FAILURE : number;
    ERROR_TIMEOUT : number;
    PROVIDER_GPS : string;
    PROVIDER_NETWORK : string;
    PROVIDER_PASSIVE : string;
    accuracy : number;
    activityType : number;
    bubbleParent : bool;
    distanceFilter : number;
    frequency : number;
    hasCompass : bool;
    headingFilter : number;
    locationServicesAuthorization : number;
    locationServicesEnabled : bool;
    pauseLocationUpdateAutomatically : bool;
    preferredProvider : string;
    purpose : string;
    showCalibration : bool;
    trackSignificantLocationChange : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    forwardGeocoder (address : string, callback : (...args : any[]) => any) : void;
    getAccuracy () : number;
    getActivityType () : number;
    getBubbleParent () : bool;
    getCurrentHeading (callback : (...args : any[]) => any) : void;
    getCurrentPosition (callback : (...args : any[]) => any) : void;
    getDistanceFilter () : number;
    getFrequency () : number;
    getHasCompass () : bool;
    getHeadingFilter () : number;
    getLocationServicesAuthorization () : number;
    getLocationServicesEnabled () : bool;
    getPauseLocationUpdateAutomatically () : bool;
    getPreferredProvider () : string;
    getPurpose () : string;
    getShowCalibration () : bool;
    getTrackSignificantLocationChange () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    reverseGeocoder (latitude : number, longitude : number, callback : (...args : any[]) => any) : void;
    setAccuracy (accuracy : number) : void;
    setActivityType (activityType : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDistanceFilter (distanceFilter : number) : void;
    setFrequency (frequency : number) : void;
    setHeadingFilter (headingFilter : number) : void;
    setLocationServicesAuthorization (locationServicesAuthorization : number) : void;
    setPauseLocationUpdateAutomatically (pauseLocationUpdateAutomatically : bool) : void;
    setPreferredProvider (preferredProvider : string) : void;
    setPurpose (purpose : string) : void;
    setShowCalibration (showCalibration : bool) : void;
    setTrackSignificantLocationChange (trackSignificantLocationChange : bool) : void;
}
declare interface TitaniumAppIOSLocalNotificationStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    cancel () : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAppIOSBackgroundServiceStatic {
    bubbleParent : bool;
    url : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getUrl () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    stop () : void;
    unregister () : void;
}
declare interface TitaniumAppIOSStatic {
    LocalNotification : TitaniumAppIOSLocalNotificationStatic;
    BackgroundService : TitaniumAppIOSBackgroundServiceStatic;
    EVENT_ACCESSIBILITY_LAYOUT_CHANGED : string;
    EVENT_ACCESSIBILITY_SCREEN_CHANGED : string;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    cancelAllLocalNotifications () : void;
    cancelLocalNotification (id : number) : void;
    createLocalNotification (parameters? : TitaniumAppIOSLocalNotificationStatic) : TitaniumAppIOSLocalNotificationStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    registerBackgroundService (params : any) : TitaniumAppIOSBackgroundServiceStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    scheduleLocalNotification (params : NotificationParamsStatic) : TitaniumAppIOSLocalNotificationStatic;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAppAndroidRStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAppAndroidStatic {
    R : TitaniumAppAndroidRStatic;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumAppTizenStatic {
    categories : any[];
    iconPath : string;
    id : string;
    installDate : Date;
    name : string;
    show : bool;
    size : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    exit () : void;
    fireEvent (name : string, event : any) : void;
    getCategories () : any[];
    getIconPath () : string;
    getId () : string;
    getInstallDate () : Date;
    getName () : string;
    getShow () : bool;
    getSize () : number;
    hide () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumAppPropertiesStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBool (property : string, def? : bool) : bool;
    getBubbleParent () : bool;
    getDouble (property : string, def? : number) : number;
    getInt (property : string, def? : number) : number;
    getList (property : string, def? : any[]) : any[];
    getObject (property : string, def? : any) : any;
    getString (property : string, def? : string) : string;
    hasProperty (property : string) : bool;
    listProperties () : any[];
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeProperty (property : string) : void;
    setBool (property : string, value : bool) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDouble (property : string, value : number) : void;
    setInt (property : string, value : number) : void;
    setList (property : string, value : any[]) : void;
    setObject (property : string, value : any) : void;
    setString (property : string, value : string) : void;
}
declare interface TitaniumAppStatic {
    iOS : TitaniumAppIOSStatic;
    Android : TitaniumAppAndroidStatic;
    Tizen : TitaniumAppTizenStatic;
    Properties : TitaniumAppPropertiesStatic;
    EVENT_ACCESSIBILITY_ANNOUNCEMENT : string;
    EVENT_ACCESSIBILITY_CHANGED : string;
    accessibilityEnabled : bool;
    analytics : bool;
    bubbleParent : bool;
    copyright : string;
    deployType : string;
    description : string;
    disableNetworkActivityIndicator : bool;
    guid : string;
    id : string;
    idleTimerDisabled : bool;
    installId : string;
    keyboardVisible : bool;
    name : string;
    proximityDetection : bool;
    proximityState : bool;
    publisher : string;
    sessionId : string;
    url : string;
    version : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    fireSystemEvent (eventName : string, param? : any) : void;
    getAccessibilityEnabled () : bool;
    getAnalytics () : bool;
    getArguments () : LaunchOptionsStatic;
    getBubbleParent () : bool;
    getCopyright () : string;
    getDeployType () : string;
    getDescription () : string;
    getDisableNetworkActivityIndicator () : bool;
    getGuid () : string;
    getId () : string;
    getIdleTimerDisabled () : bool;
    getInstallId () : string;
    getKeyboardVisible () : bool;
    getName () : string;
    getProximityDetection () : bool;
    getProximityState () : bool;
    getPublisher () : string;
    getSessionId () : string;
    getUrl () : string;
    getVersion () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDisableNetworkActivityIndicator (disableNetworkActivityIndicator : bool) : void;
    setIdleTimerDisabled (idleTimerDisabled : bool) : void;
    setProximityDetection (proximityDetection : bool) : void;
}
declare interface TitaniumBufferStatic {
    bubbleParent : bool;
    byteOrder : number;
    length : number;
    type : string;
    value : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    append (sourceBuffer : TitaniumBufferStatic, sourceOffset? : number, sourceLength? : number) : number;
    applyProperties (props : any) : void;
    clear () : void;
    clone (offset? : number, length? : number) : TitaniumBufferStatic;
    copy (sourceBuffer : TitaniumBufferStatic, offset : number, sourceOffset? : number, sourceLength? : number) : number;
    fill (fillByte : number, offset? : number, length? : number) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getByteOrder () : number;
    getLength () : number;
    getType () : string;
    getValue () : any;
    insert (sourceBuffer : TitaniumBufferStatic, offset : number, sourceOffset? : number, sourceLength? : number) : number;
    release () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setLength (length : number) : void;
    toBlob () : TitaniumBlobStatic;
    toString () : string;
}
declare interface TitaniumBlobStatic {
    bubbleParent : bool;
    file : TitaniumFilesystemFileStatic;
    height : number;
    length : number;
    mimeType : string;
    nativePath : string;
    size : number;
    text : string;
    width : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    append (blob : TitaniumBlobStatic) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getFile () : TitaniumFilesystemFileStatic;
    getHeight () : number;
    getLength () : number;
    getMimeType () : string;
    getNativePath () : string;
    getSize () : number;
    getText () : string;
    getWidth () : number;
    imageAsCropped (options : ImageAsCroppedDictStatic) : TitaniumBlobStatic;
    imageAsResized (width : number, height : number) : TitaniumBlobStatic;
    imageAsThumbnail (size : number, borderSize? : number, cornerRadius? : number) : TitaniumBlobStatic;
    imageWithAlpha () : TitaniumBlobStatic;
    imageWithRoundedCorner (cornerSize : number, borderSize? : number) : TitaniumBlobStatic;
    imageWithTransparentBorder (size : number) : TitaniumBlobStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    toString () : string;
}
declare interface TitaniumCalendarEventStatic {
    alerts : any[];
    allDay : bool;
    availability : number;
    begin : Date;
    bubbleParent : bool;
    description : string;
    end : Date;
    extendedProperties : any;
    hasAlarm : bool;
    id : string;
    isDetached : bool;
    location : string;
    notes : string;
    recurenceRule : TitaniumCalendarRecurrenceRuleStatic;
    recurenceRules : any[];
    reminders : any[];
    status : number;
    title : string;
    visibility : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    addRecurrenceRule (rule : TitaniumCalendarRecurrenceRuleStatic) : void;
    applyProperties (props : any) : void;
    createAlert (data : TitaniumCalendarAlertStatic) : TitaniumCalendarAlertStatic;
    createRecurenceRule (data : TitaniumCalendarRecurrenceRuleStatic) : TitaniumCalendarRecurrenceRuleStatic;
    createReminder (data : TitaniumCalendarReminderStatic) : TitaniumCalendarReminderStatic;
    fireEvent (name : string, event : any) : void;
    getAlerts () : any[];
    getAllDay () : bool;
    getAvailability () : number;
    getBegin () : Date;
    getBubbleParent () : bool;
    getDescription () : string;
    getEnd () : Date;
    getExtendedProperties () : any;
    getExtendedProperty (name : string) : string;
    getHasAlarm () : bool;
    getId () : string;
    getIsDetached () : bool;
    getLocation () : string;
    getNotes () : string;
    getRecurenceRule () : TitaniumCalendarRecurrenceRuleStatic;
    getRecurenceRules () : any[];
    getReminders () : any[];
    getStatus () : number;
    getTitle () : string;
    getVisibility () : number;
    refresh () : bool;
    remove (span : number) : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeRecurenceRule (rule : TitaniumCalendarRecurrenceRuleStatic) : void;
    save (span : number) : bool;
    setAlerts (alerts : any[]) : void;
    setAllDay (allDay : bool) : void;
    setBegin (begin : Date) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setEnd (end : Date) : void;
    setExtendedProperty (name : string, value : string) : void;
    setLocation (location : string) : void;
    setNotes (notes : string) : void;
    setRecurenceRule (recurenceRule : TitaniumCalendarRecurrenceRuleStatic) : void;
    setRecurenceRules (recurenceRules : any[]) : void;
    setTitle (title : string) : void;
}
declare interface TitaniumCalendarRecurrenceRuleStatic {
    bubbleParent : bool;
    calendarID : string;
    daysOfTheMonth : any[];
    daysOfTheWeek : DaysOfTheWeekDictionaryStatic;
    daysOfTheYear : any[];
    end : RecurrenceEndDictionaryStatic;
    frequency : number;
    interval : number;
    monthsOfTheYear : any[];
    setPositions : any[];
    weeksOfTheYear : any[];
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getCalendarID () : string;
    getDaysOfTheMonth () : any[];
    getDaysOfTheWeek () : DaysOfTheWeekDictionaryStatic;
    getDaysOfTheYear () : any[];
    getEnd () : RecurrenceEndDictionaryStatic;
    getFrequency () : number;
    getInterval () : number;
    getMonthsOfTheYear () : any[];
    getSetPositions () : any[];
    getWeeksOfTheYear () : any[];
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCalendarReminderStatic {
    bubbleParent : bool;
    id : string;
    method : number;
    minutes : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getId () : string;
    getMethod () : number;
    getMinutes () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCalendarCalendarStatic {
    bubbleParent : bool;
    hidden : bool;
    id : string;
    name : string;
    selected : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createEvent (properties : TitaniumCalendarEventStatic) : TitaniumCalendarEventStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getEventById (id : number) : TitaniumCalendarEventStatic;
    getEventsBetweenDates (date1 : Date, date2 : Date) : any[];
    getEventsInDate (year : number, month : number, day : number) : any[];
    getEventsInMonth (year : number, month : number) : any[];
    getEventsInYear (year : number) : any[];
    getHidden () : bool;
    getId () : string;
    getName () : string;
    getSelected () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCalendarAlertStatic {
    absoluteDate : Date;
    alarmTime : Date;
    begin : Date;
    bubbleParent : bool;
    end : Date;
    eventId : number;
    id : string;
    minutes : number;
    relativeOffset : number;
    state : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAbsoluteDate () : Date;
    getAlarmTime () : Date;
    getBegin () : Date;
    getBubbleParent () : bool;
    getEnd () : Date;
    getEventId () : number;
    getId () : string;
    getMinutes () : number;
    getRelativeOffset () : number;
    getState () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAbsoluteDate (absoluteDate : Date) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setRelativeOffset (relativeOffset : number) : void;
}
declare interface TitaniumCalendarStatic {
    Event : TitaniumCalendarEventStatic;
    RecurrenceRule : TitaniumCalendarRecurrenceRuleStatic;
    Reminder : TitaniumCalendarReminderStatic;
    Calendar : TitaniumCalendarCalendarStatic;
    Alert : TitaniumCalendarAlertStatic;
    AUTHORIZATION_AUTHORIZED : number;
    AUTHORIZATION_DENIED : number;
    AUTHORIZATION_RESTRICTED : number;
    AUTHORIZATION_UNKNOWN : number;
    AVAILABILITY_BUSY : number;
    AVAILABILITY_FREE : number;
    AVAILABILITY_NOTSUPPORTED : number;
    AVAILABILITY_TENTATIVE : number;
    AVAILABILITY_UNAVAILABLE : number;
    METHOD_ALERT : number;
    METHOD_DEFAULT : number;
    METHOD_EMAIL : number;
    METHOD_SMS : number;
    RECURRENCEFREQUENCY_DAILY : number;
    RECURRENCEFREQUENCY_MONTHLY : number;
    RECURRENCEFREQUENCY_WEEKLY : number;
    RECURRENCEFREQUENCY_YEARLY : number;
    SPAN_FUTUREEVENTS : number;
    SPAN_THISEVENT : number;
    STATE_DISMISSED : number;
    STATE_FIRED : number;
    STATE_SCHEDULED : number;
    STATUS_CANCELED : number;
    STATUS_CONFIRMED : number;
    STATUS_NONE : number;
    STATUS_TENTATIVE : number;
    VISIBILITY_CONFIDENTIAL : number;
    VISIBILITY_DEFAULT : number;
    VISIBILITY_PRIVATE : number;
    VISIBILITY_PUBLIC : number;
    allAlerts : any[];
    allCalendars : any[];
    allEditableCalendars : any[];
    bubbleParent : bool;
    defaultCalendar : TitaniumCalendarCalendarStatic;
    eventsAuthorization : number;
    selectableCalendars : any[];
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAllAlerts () : any[];
    getAllCalendars () : any[];
    getAllEditableCalendars () : any[];
    getBubbleParent () : bool;
    getCalendarById (id : number) : TitaniumCalendarCalendarStatic;
    getDefaultCalendar () : TitaniumCalendarCalendarStatic;
    getEventsAuthorization () : number;
    getSelectableCalendars () : any[];
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    requestEventsAuthorization (callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCodecStatic {
    BIG_ENDIAN : number;
    CHARSET_ASCII : string;
    CHARSET_ISO_LATIN_1 : string;
    CHARSET_UTF16 : string;
    CHARSET_UTF16BE : string;
    CHARSET_UTF16LE : string;
    CHARSET_UTF8 : string;
    LITTLE_ENDIAN : number;
    TYPE_BYTE : string;
    TYPE_DOUBLE : string;
    TYPE_FLOAT : string;
    TYPE_INT : string;
    TYPE_LONG : string;
    TYPE_SHORT : string;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    decodeNumber (options : DecodeNumberDictStatic) : number;
    decodeString (options : DecodeStringDictStatic) : string;
    encodeNumber (options : EncodeNumberDictStatic) : number;
    encodeString (options : EncodeStringDictStatic) : number;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getNativeByteOrder () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumNetworkBonjourServiceStatic {
    bubbleParent : bool;
    domain : string;
    isLocal : bool;
    name : string;
    socket : any;
    type : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getDomain () : string;
    getIsLocal () : bool;
    getName () : string;
    getSocket () : any;
    getType () : string;
    publish (socket : any) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    resolve (timeout : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDomain (domain : string) : void;
    setIsLocal (isLocal : bool) : void;
    setName (name : string) : void;
    setSocket (socket : any) : void;
    setType (type : string) : void;
    stop () : void;
}
declare interface TitaniumNetworkSocketTCPStatic {
    accepted : (...args : any[]) => any;
    bubbleParent : bool;
    connected : (...args : any[]) => any;
    error : (...args : any[]) => any;
    host : string;
    listenQueueSize : number;
    port : number;
    state : number;
    timeout : number;
    accept (options : AcceptDictStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    connect () : void;
    fireEvent (name : string, event : any) : void;
    getAccepted () : (...args : any[]) => any;
    getBubbleParent () : bool;
    getConnected () : (...args : any[]) => any;
    getError () : (...args : any[]) => any;
    getHost () : string;
    getListenQueueSize () : number;
    getPort () : number;
    getState () : number;
    getTimeout () : number;
    isReadable () : bool;
    isWriteable () : bool;
    listen () : void;
    read (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAccepted (accepted : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setConnected (connected : (...args : any[]) => any) : void;
    setError (error : (...args : any[]) => any) : void;
    setHost (host : string) : void;
    setListenQueueSize (listenQueueSize : number) : void;
    setPort (port : number) : void;
    setTimeout (timeout : number) : void;
    write (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
}
declare interface TitaniumNetworkSocketStatic {
    TCP : TitaniumNetworkSocketTCPStatic;
    CLOSED : number;
    CONNECTED : number;
    ERROR : number;
    INITIALIZED : number;
    LISTENING : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createTCP (params? : TitaniumNetworkSocketTCPStatic) : TitaniumNetworkSocketTCPStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumNetworkTCPSocketStatic {
    bubbleParent : bool;
    hostName : string;
    isValid : bool;
    mode : number;
    port : number;
    stripTerminator : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    connect () : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getHostName () : string;
    getIsValid () : bool;
    getMode () : number;
    getPort () : number;
    getStripTerminator () : bool;
    listen () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setHostName (hostName : string) : void;
    setIsValid (isValid : bool) : void;
    setMode (mode : number) : void;
    setPort (port : number) : void;
    setStripTerminator (stripTerminator : bool) : void;
    write (data : any, sendTo : number) : void;
}
declare interface TitaniumNetworkBonjourBrowserStatic {
    bubbleParent : bool;
    domain : string;
    isSearching : bool;
    serviceType : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getDomain () : string;
    getIsSearching () : bool;
    getServiceType () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    search () : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDomain (domain : string) : void;
    setIsSearching (isSearching : bool) : void;
    setServiceType (serviceType : string) : void;
    stopSearch () : void;
}
declare interface TitaniumNetworkHTTPClientStatic {
    DONE : number;
    HEADERS_RECEIVED : number;
    LOADING : number;
    OPENED : number;
    UNSENT : number;
    allResponseHeaders : string;
    autoEncodeUrl : bool;
    autoRedirect : bool;
    bubbleParent : bool;
    cache : bool;
    connected : bool;
    connectionType : string;
    domain : string;
    enableKeepAlive : bool;
    file : string;
    location : string;
    ondatastream : (...args : any[]) => any;
    onerror : (...args : any[]) => any;
    onload : (...args : any[]) => any;
    onreadystatechange : (...args : any[]) => any;
    onsendstream : (...args : any[]) => any;
    password : string;
    readyState : number;
    responseData : TitaniumBlobStatic;
    responseText : string;
    responseXML : TitaniumXMLDocumentStatic;
    status : number;
    statusText : string;
    timeout : number;
    tlsVersion : number;
    username : string;
    validatesSecureCertificate : bool;
    withCredentials : bool;
    abort () : void;
    addAuthFactory (scheme : string, factory : any) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    clearCookies (host : string) : void;
    fireEvent (name : string, event : any) : void;
    getAllResponseHeaders () : string;
    getAutoEncodeUrl () : bool;
    getAutoRedirect () : bool;
    getBubbleParent () : bool;
    getCache () : bool;
    getConnected () : bool;
    getConnectionType () : string;
    getDomain () : string;
    getEnableKeepAlive () : bool;
    getFile () : string;
    getLocation () : string;
    getOndatastream () : (...args : any[]) => any;
    getOnerror () : (...args : any[]) => any;
    getOnload () : (...args : any[]) => any;
    getOnreadystatechange () : (...args : any[]) => any;
    getOnsendstream () : (...args : any[]) => any;
    getPassword () : string;
    getReadyState () : number;
    getResponseData () : TitaniumBlobStatic;
    getResponseHeader (name : string) : string;
    getResponseText () : string;
    getResponseXML () : TitaniumXMLDocumentStatic;
    getStatus () : number;
    getStatusText () : string;
    getTimeout () : number;
    getTlsVersion () : number;
    getUsername () : string;
    getValidatesSecureCertificate () : bool;
    getWithCredentials () : bool;
    open (method : string, url : string, async? : bool) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    send (data? : any) : void;
    setAutoEncodeUrl (autoEncodeUrl : bool) : void;
    setAutoRedirect (autoRedirect : bool) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCache (cache : bool) : void;
    setDomain (domain : string) : void;
    setEnableKeepAlive (enableKeepAlive : bool) : void;
    setFile (file : string) : void;
    setOndatastream (ondatastream : (...args : any[]) => any) : void;
    setOnerror (onerror : (...args : any[]) => any) : void;
    setOnload (onload : (...args : any[]) => any) : void;
    setOnreadystatechange (onreadystatechange : (...args : any[]) => any) : void;
    setOnsendstream (onsendstream : (...args : any[]) => any) : void;
    setPassword (password : string) : void;
    setRequestHeader (name : string, value : string) : void;
    setTimeout (timeout : number) : void;
    setTlsVersion (tlsVersion : number) : void;
    setUsername (username : string) : void;
    setValidatesSecureCertificate (validatesSecureCertificate : bool) : void;
    setWithCredentials (withCredentials : bool) : void;
}
declare interface TitaniumNetworkStatic {
    BonjourService : TitaniumNetworkBonjourServiceStatic;
    Socket : TitaniumNetworkSocketStatic;
    TCPSocket : TitaniumNetworkTCPSocketStatic;
    BonjourBrowser : TitaniumNetworkBonjourBrowserStatic;
    HTTPClient : TitaniumNetworkHTTPClientStatic;
    INADDR_ANY : string;
    NETWORK_LAN : number;
    NETWORK_MOBILE : number;
    NETWORK_NONE : number;
    NETWORK_UNKNOWN : number;
    NETWORK_WIFI : number;
    NOTIFICATION_TYPE_ALERT : number;
    NOTIFICATION_TYPE_BADGE : number;
    NOTIFICATION_TYPE_NEWSSTAND : number;
    NOTIFICATION_TYPE_SOUND : number;
    READ_MODE : number;
    READ_WRITE_MODE : number;
    SOCKET_CLOSED : number;
    SOCKET_CONNECTED : number;
    SOCKET_ERROR : number;
    SOCKET_INITIALIZED : number;
    SOCKET_LISTENING : number;
    TLS_VERSION_1_0 : number;
    TLS_VERSION_1_1 : number;
    TLS_VERSION_1_2 : number;
    WRITE_MODE : number;
    bubbleParent : bool;
    httpURLFormatter : (...args : any[]) => any;
    networkType : number;
    networkTypeName : string;
    online : bool;
    remoteDeviceUUID : string;
    remoteNotificationTypes : any[];
    remoteNotificationsEnabled : bool;
    addConnectivityListener (callback : (...args : any[]) => any) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createBonjourBrowser (serviceType : string, domain : string, parameters? : TitaniumNetworkBonjourBrowserStatic) : TitaniumNetworkBonjourBrowserStatic;
    createBonjourService (name : string, type : string, domain : string, parameters? : TitaniumNetworkBonjourServiceStatic) : TitaniumNetworkBonjourServiceStatic;
    createHTTPClient (parameters? : TitaniumNetworkHTTPClientStatic) : TitaniumNetworkHTTPClientStatic;
    createTCPSocket (hostName : string, port : number, mode : number, parameters : TitaniumNetworkTCPSocketStatic) : TitaniumNetworkTCPSocketStatic;
    decodeURIComponent (value : string) : string;
    encodeURIComponent (value : string) : string;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getHttpURLFormatter () : (...args : any[]) => any;
    getNetworkType () : number;
    getNetworkTypeName () : string;
    getOnline () : bool;
    getRemoteDeviceUUID () : string;
    getRemoteNotificationTypes () : any[];
    getRemoteNotificationsEnabled () : bool;
    registerForPushNotifications (config : PushNotificationConfigStatic) : void;
    removeConnectivityListener (callback : (...args : any[]) => any) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setHttpURLFormatter (httpURLFormatter : (...args : any[]) => any) : void;
    unregisterForPushNotifications () : void;
}
declare interface TitaniumContactsGroupStatic {
    bubbleParent : bool;
    name : string;
    recordId : number;
    add (person : TitaniumContactsPersonStatic) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getName () : string;
    getRecordId () : number;
    members () : any[];
    remove (person : TitaniumContactsPersonStatic) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setName (name : string) : void;
    setRecordId (recordId : number) : void;
    sortedMembers (sortBy : number) : any[];
}
declare interface TitaniumContactsTizenGroupStatic {
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    members (group : TitaniumContactsGroupStatic, successCallback : (...args : any[]) => any, errorCallback : (...args : any[]) => any) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    sortedMembers (sortBy : number, group : TitaniumContactsGroupStatic, successCallback : (...args : any[]) => any, errorCallback : (...args : any[]) => any) : void;
}
declare interface TitaniumContactsTizenStatic {
    Group : TitaniumContactsTizenGroupStatic;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAllPeople (successCallback : (...args : any[]) => any, errorCallback : (...args : any[]) => any) : void;
    getPeopleWithName (name : string, successCallback : (...args : any[]) => any, errorCallback : (...args : any[]) => any) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumContactsPersonStatic {
    address : any;
    birthday : string;
    bubbleParent : bool;
    created : string;
    date : any;
    department : string;
    email : any;
    firstName : string;
    firstPhonetic : string;
    fullName : string;
    id : number;
    image : TitaniumBlobStatic;
    instantMessage : any;
    jobTitle : string;
    kind : number;
    lastName : string;
    lastPhonetic : string;
    middleName : string;
    middlePhonetic : string;
    modified : string;
    nickname : string;
    note : string;
    organization : string;
    phone : any;
    prefix : string;
    recordId : number;
    relatedNames : any;
    suffix : string;
    url : any;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAddress () : any;
    getBirthday () : string;
    getBubbleParent () : bool;
    getCreated () : string;
    getDate () : any;
    getDepartment () : string;
    getEmail () : any;
    getFirstName () : string;
    getFirstPhonetic () : string;
    getFullName () : string;
    getId () : number;
    getImage () : TitaniumBlobStatic;
    getInstantMessage () : any;
    getJobTitle () : string;
    getKind () : number;
    getLastName () : string;
    getLastPhonetic () : string;
    getMiddleName () : string;
    getMiddlePhonetic () : string;
    getModified () : string;
    getNickname () : string;
    getNote () : string;
    getOrganization () : string;
    getPhone () : any;
    getPrefix () : string;
    getRecordId () : number;
    getRelatedNames () : any;
    getSuffix () : string;
    getUrl () : any;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAddress (address : any) : void;
    setBirthday (birthday : string) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDate (date : any) : void;
    setDepartment (department : string) : void;
    setEmail (email : any) : void;
    setFirstName (firstName : string) : void;
    setFirstPhonetic (firstPhonetic : string) : void;
    setImage (image : TitaniumBlobStatic) : void;
    setInstantMessage (instantMessage : any) : void;
    setJobTitle (jobTitle : string) : void;
    setKind (kind : number) : void;
    setLastName (lastName : string) : void;
    setLastPhonetic (lastPhonetic : string) : void;
    setMiddleName (middleName : string) : void;
    setMiddlePhonetic (middlePhonetic : string) : void;
    setNickname (nickname : string) : void;
    setNote (note : string) : void;
    setOrganization (organization : string) : void;
    setPhone (phone : any) : void;
    setRecordId (recordId : number) : void;
    setRelatedNames (relatedNames : any) : void;
    setUrl (url : any) : void;
}
declare interface TitaniumContactsStatic {
    Group : TitaniumContactsGroupStatic;
    Tizen : TitaniumContactsTizenStatic;
    Person : TitaniumContactsPersonStatic;
    AUTHORIZATION_AUTHORIZED : number;
    AUTHORIZATION_DENIED : number;
    AUTHORIZATION_RESTRICTED : number;
    AUTHORIZATION_UNKNOWN : number;
    CONTACTS_KIND_ORGANIZATION : number;
    CONTACTS_KIND_PERSON : number;
    CONTACTS_SORT_FIRST_NAME : number;
    CONTACTS_SORT_LAST_NAME : number;
    bubbleParent : bool;
    contactsAuthorization : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createGroup (parameters? : TitaniumContactsGroupStatic) : TitaniumContactsGroupStatic;
    createPerson (parameters? : TitaniumContactsPersonStatic) : TitaniumContactsPersonStatic;
    fireEvent (name : string, event : any) : void;
    getAllGroups () : any[];
    getAllPeople (limit : number) : any[];
    getBubbleParent () : bool;
    getContactsAuthorization () : number;
    getGroupByID (id : number) : TitaniumContactsGroupStatic;
    getPeopleWithName (name : string) : any[];
    getPersonByID (id : number) : TitaniumContactsPersonStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeGroup (group : TitaniumContactsGroupStatic) : void;
    removePerson (person : TitaniumContactsPersonStatic) : void;
    requestAuthorization (callback : (...args : any[]) => any) : void;
    revert () : void;
    save (contacts : any[]) : void;
    setBubbleParent (bubbleParent : bool) : void;
    showContacts (params : ShowContactsParamsStatic) : void;
}
declare interface TitaniumLocaleStatic {
    bubbleParent : bool;
    currentCountry : string;
    currentLanguage : string;
    currentLocale : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    formatTelephoneNumber (number : string) : string;
    getBubbleParent () : bool;
    getCurrencyCode (locale : string) : string;
    getCurrencySymbol (currencyCode : string) : string;
    getCurrentCountry () : string;
    getCurrentLanguage () : string;
    getCurrentLocale () : string;
    getLocaleCurrencySymbol (locale : string) : string;
    getString (key : string, hint? : string) : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumMapViewStatic {
    accessibilityHidden : bool;
    accessibilityHint : string;
    accessibilityLabel : string;
    accessibilityValue : string;
    anchorPoint : PointStatic;
    animated : bool;
    animatedCenter : PointStatic;
    annotations : any[];
    backgroundColor : string;
    backgroundDisabledColor : string;
    backgroundDisabledImage : string;
    backgroundFocusedColor : string;
    backgroundFocusedImage : string;
    backgroundGradient : GradientStatic;
    backgroundImage : string;
    backgroundLeftCap : number;
    backgroundRepeat : bool;
    backgroundSelectedColor : string;
    backgroundSelectedImage : string;
    backgroundTopCap : number;
    borderColor : string;
    borderRadius : number;
    borderWidth : number;
    bottom : number;
    bubbleParent : bool;
    center : PointStatic;
    children : any[];
    focusable : bool;
    height : number;
    hideAnnotationWhenTouchMap : bool;
    horizontalWrap : bool;
    keepScreenOn : bool;
    latitudeDelta : number;
    layout : string;
    left : number;
    longitudeDelta : number;
    mapType : number;
    opacity : number;
    rect : DimensionStatic;
    region : MapRegionTypeStatic;
    regionFit : bool;
    right : number;
    size : DimensionStatic;
    softKeyboardOnFocus : number;
    top : number;
    touchEnabled : bool;
    transform : TitaniumUI_2DMatrixStatic;
    userLocation : bool;
    visible : bool;
    width : number;
    zIndex : number;
    add (view : TitaniumUIViewStatic) : void;
    addAnnotation (annotation : TitaniumMapAnnotationStatic) : void;
    addAnnotations (annotations : any[]) : void;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    addRoute (route : MapRouteTypeStatic) : void;
    animate (animation : TitaniumUIAnimationStatic, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    convertPointToView (point : PointStatic, destinationView : TitaniumUIViewStatic) : PointStatic;
    deselectAnnotation (annotation : string) : void;
    finishLayout () : void;
    fireEvent (name : string, event : any) : void;
    getAccessibilityHidden () : bool;
    getAccessibilityHint () : string;
    getAccessibilityLabel () : string;
    getAccessibilityValue () : string;
    getAnchorPoint () : PointStatic;
    getAnimate () : bool;
    getAnimated () : bool;
    getAnimatedCenter () : PointStatic;
    getAnnotations () : any[];
    getBackgroundColor () : string;
    getBackgroundDisabledColor () : string;
    getBackgroundDisabledImage () : string;
    getBackgroundFocusedColor () : string;
    getBackgroundFocusedImage () : string;
    getBackgroundGradient () : GradientStatic;
    getBackgroundImage () : string;
    getBackgroundLeftCap () : number;
    getBackgroundRepeat () : bool;
    getBackgroundSelectedColor () : string;
    getBackgroundSelectedImage () : string;
    getBackgroundTopCap () : number;
    getBorderColor () : string;
    getBorderRadius () : number;
    getBorderWidth () : number;
    getBottom () : any;
    getBubbleParent () : bool;
    getCenter () : PointStatic;
    getChildren () : any[];
    getFocusable () : bool;
    getHeight () : any;
    getHideAnnotationWhenTouchMap () : bool;
    getHorizontalWrap () : bool;
    getKeepScreenOn () : bool;
    getLatitudeDelta () : number;
    getLayout () : string;
    getLeft () : any;
    getLongitudeDelta () : number;
    getMapType () : number;
    getOpacity () : number;
    getRect () : DimensionStatic;
    getRegion () : MapRegionTypeStatic;
    getRegionFit () : bool;
    getRight () : any;
    getSize () : DimensionStatic;
    getSoftKeyboardOnFocus () : number;
    getTop () : any;
    getTouchEnabled () : bool;
    getTransform () : any;
    getUserLocation () : bool;
    getVisible () : bool;
    getWidth () : any;
    getZIndex () : number;
    hide () : void;
    remove (view : TitaniumUIViewStatic) : void;
    removeAllAnnotations () : void;
    removeAllChildren () : void;
    removeAnnotation (annotation : string) : void;
    removeAnnotations (annotations : any[]) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    removeRoute (route : MapRouteTypeStatic) : void;
    selectAnnotation (annotation : string) : void;
    setAccessibilityHidden (accessibilityHidden : bool) : void;
    setAccessibilityHint (accessibilityHint : string) : void;
    setAccessibilityLabel (accessibilityLabel : string) : void;
    setAccessibilityValue (accessibilityValue : string) : void;
    setAnchorPoint (anchorPoint : PointStatic) : void;
    setAnimate (animate : bool) : void;
    setAnimated (animated : bool) : void;
    setAnnotations (annotations : any[]) : void;
    setBackgroundColor (backgroundColor : string) : void;
    setBackgroundDisabledColor (backgroundDisabledColor : string) : void;
    setBackgroundDisabledImage (backgroundDisabledImage : string) : void;
    setBackgroundFocusedColor (backgroundFocusedColor : string) : void;
    setBackgroundFocusedImage (backgroundFocusedImage : string) : void;
    setBackgroundGradient (backgroundGradient : GradientStatic) : void;
    setBackgroundImage (backgroundImage : string) : void;
    setBackgroundLeftCap (backgroundLeftCap : number) : void;
    setBackgroundRepeat (backgroundRepeat : bool) : void;
    setBackgroundSelectedColor (backgroundSelectedColor : string) : void;
    setBackgroundSelectedImage (backgroundSelectedImage : string) : void;
    setBackgroundTopCap (backgroundTopCap : number) : void;
    setBorderColor (borderColor : string) : void;
    setBorderRadius (borderRadius : number) : void;
    setBorderWidth (borderWidth : number) : void;
    setBottom (bottom : number) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCenter (center : PointStatic) : void;
    setFocusable (focusable : bool) : void;
    setHeight (height : number) : void;
    setHideAnnotationWhenTouchMap (hideAnnotationWhenTouchMap : bool) : void;
    setHorizontalWrap (horizontalWrap : bool) : void;
    setKeepScreenOn (keepScreenOn : bool) : void;
    setLayout (layout : string) : void;
    setLeft (left : number) : void;
    setLocation (location : MapLocationTypeStatic) : void;
    setMapType (mapType : number) : void;
    setOpacity (opacity : number) : void;
    setRegion (region : MapRegionTypeStatic) : void;
    setRegionFit (regionFit : bool) : void;
    setRight (right : number) : void;
    setSoftKeyboardOnFocus (softKeyboardOnFocus : number) : void;
    setTop (top : number) : void;
    setTouchEnabled (touchEnabled : bool) : void;
    setTransform (transform : TitaniumUI_2DMatrixStatic) : void;
    setUserLocation (userLocation : bool) : void;
    setVisible (visible : bool) : void;
    setWidth (width : number) : void;
    setZIndex (zIndex : number) : void;
    show () : void;
    startLayout () : void;
    toImage (callback? : (...args : any[]) => any, honorScaleFactor? : bool) : TitaniumBlobStatic;
    updateLayout (params : any) : void;
    zoom (level : number) : void;
}
declare interface TitaniumMapAnnotationStatic {
    animate : bool;
    bubbleParent : bool;
    customView : TitaniumUIViewStatic;
    draggable : bool;
    image : string;
    latitude : number;
    leftButton : number;
    leftView : TitaniumUIViewStatic;
    longitude : number;
    pinImage : string;
    pincolor : number;
    rightButton : number;
    rightView : TitaniumUIViewStatic;
    subtitle : string;
    subtitleid : string;
    title : string;
    titleid : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getAnimate () : bool;
    getBubbleParent () : bool;
    getCustomView () : TitaniumUIViewStatic;
    getDraggable () : bool;
    getImage () : any;
    getLatitude () : number;
    getLeftButton () : any;
    getLeftView () : TitaniumUIViewStatic;
    getLongitude () : number;
    getPinImage () : string;
    getPincolor () : number;
    getRightButton () : any;
    getRightView () : TitaniumUIViewStatic;
    getSubtitle () : string;
    getSubtitleid () : string;
    getTitle () : string;
    getTitleid () : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setAnimate (animate : bool) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setCustomView (customView : TitaniumUIViewStatic) : void;
    setDraggable (draggable : bool) : void;
    setImage (image : string) : void;
    setLatitude (latitude : number) : void;
    setLeftButton (leftButton : number) : void;
    setLeftView (leftView : TitaniumUIViewStatic) : void;
    setLongitude (longitude : number) : void;
    setPinImage (pinImage : string) : void;
    setPincolor (pincolor : number) : void;
    setRightButton (rightButton : number) : void;
    setRightView (rightView : TitaniumUIViewStatic) : void;
    setSubtitle (subtitle : string) : void;
    setSubtitleid (subtitleid : string) : void;
    setTitle (title : string) : void;
    setTitleid (titleid : string) : void;
}
declare interface TitaniumMapStatic {
    View : TitaniumMapViewStatic;
    Annotation : TitaniumMapAnnotationStatic;
    ANNOTATION_DRAG_STATE_CANCEL : number;
    ANNOTATION_DRAG_STATE_DRAG : number;
    ANNOTATION_DRAG_STATE_END : number;
    ANNOTATION_DRAG_STATE_NONE : number;
    ANNOTATION_DRAG_STATE_START : number;
    ANNOTATION_GREEN : number;
    ANNOTATION_PURPLE : number;
    ANNOTATION_RED : number;
    HYBRID_TYPE : number;
    SATELLITE_TYPE : number;
    STANDARD_TYPE : number;
    TERRAIN_TYPE : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createAnnotation (parameters? : TitaniumMapAnnotationStatic) : TitaniumMapAnnotationStatic;
    createView (parameters? : TitaniumMapViewStatic) : TitaniumMapViewStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumStreamStatic {
    MODE_APPEND : number;
    MODE_READ : number;
    MODE_WRITE : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createStream (params : CreateStreamArgsStatic) : TitaniumIOStreamStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    pump (inputStream : TitaniumIOStreamStatic, handler : (...args : any[]) => any, maxChunkSize : number, isAsync? : bool) : void;
    read (sourceStream : TitaniumIOStreamStatic, buffer : TitaniumBufferStatic, offset? : number, length? : number, resultsCallback? : (...args : any[]) => any) : void;
    readAll (sourceStream : TitaniumIOStreamStatic, buffer? : TitaniumBufferStatic, resultsCallback? : (...args : any[]) => any) : any;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    write (outputStream : TitaniumIOStreamStatic, buffer : TitaniumBufferStatic, offset? : number, length? : number, resultsCallback? : (...args : any[]) => any) : void;
    writeStream (inputStream : TitaniumIOStreamStatic, outputStream : TitaniumIOStreamStatic, maxChunkSize : number, resultsCallback? : (...args : any[]) => any) : void;
}
declare interface TitaniumAccelerometerStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumYahooStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    yql (yql : string, callback : (...args : any[]) => any) : void;
}
declare interface TitaniumIOStreamStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    isReadable () : bool;
    isWriteable () : bool;
    read (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    write (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
}
declare interface TitaniumDatabaseResultSetStatic {
    bubbleParent : bool;
    rowCount : number;
    validRow : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    field (index : number, type? : number) : any;
    fieldByName (name : string, type? : number) : any;
    fieldCount () : number;
    fieldName (index : number) : string;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getFieldCount () : number;
    getFieldName (index : number) : string;
    getRowCount () : number;
    getValidRow () : bool;
    isValidRow () : bool;
    next () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumDatabaseDBStatic {
    bubbleParent : bool;
    file : TitaniumFilesystemFileStatic;
    lastInsertRowId : number;
    name : string;
    rowsAffected : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    execute (sql : string, vararg? : any) : TitaniumDatabaseResultSetStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getFile () : TitaniumFilesystemFileStatic;
    getLastInsertRowId () : number;
    getName () : string;
    getRowsAffected () : number;
    remove () : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setLastInsertRowId (lastInsertRowId : number) : void;
    setName (name : string) : void;
    setRowsAffected (rowsAffected : number) : void;
}
declare interface TitaniumDatabaseStatic {
    ResultSet : TitaniumDatabaseResultSetStatic;
    DB : TitaniumDatabaseDBStatic;
    FIELD_TYPE_DOUBLE : number;
    FIELD_TYPE_FLOAT : number;
    FIELD_TYPE_INT : number;
    FIELD_TYPE_STRING : number;
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    install (path : string, dbName : string) : TitaniumDatabaseDBStatic;
    open (dbName : string) : TitaniumDatabaseDBStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumPlatformAndroidStatic {
    API_LEVEL : number;
    PHYSICAL_SIZE_CATEGORY_LARGE : number;
    PHYSICAL_SIZE_CATEGORY_NORMAL : number;
    PHYSICAL_SIZE_CATEGORY_SMALL : number;
    PHYSICAL_SIZE_CATEGORY_UNDEFINED : number;
    PHYSICAL_SIZE_CATEGORY_XLARGE : number;
    bubbleParent : bool;
    physicalSizeCategory : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getPhysicalSizeCategory () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumPlatformDisplayCapsStatic {
    bubbleParent : bool;
    density : string;
    dpi : number;
    logicalDensityFactor : number;
    platformHeight : number;
    platformWidth : number;
    xdpi : number;
    ydpi : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getDensity () : string;
    getDpi () : number;
    getLogicalDensityFactor () : number;
    getPlatformHeight () : number;
    getPlatformWidth () : number;
    getXdpi () : number;
    getYdpi () : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setDensity (density : string) : void;
    setDpi (dpi : number) : void;
    setLogicalDensityFactor (logicalDensityFactor : number) : void;
    setPlatformHeight (platformHeight : number) : void;
    setPlatformWidth (platformWidth : number) : void;
    setXdpi (xdpi : number) : void;
    setYdpi (ydpi : number) : void;
}
declare interface TitaniumPlatformStatic {
    Android : TitaniumPlatformAndroidStatic;
    DisplayCaps : TitaniumPlatformDisplayCapsStatic;
    BATTERY_STATE_CHARGING : number;
    BATTERY_STATE_FULL : number;
    BATTERY_STATE_UNKNOWN : number;
    BATTERY_STATE_UNPLUGGED : number;
    address : string;
    architecture : string;
    availableMemory : number;
    batteryLevel : number;
    batteryMonitoring : bool;
    batteryState : number;
    bubbleParent : bool;
    displayCaps : TitaniumPlatformDisplayCapsStatic;
    id : string;
    locale : string;
    macaddress : string;
    manufacturer : string;
    model : string;
    name : string;
    netmask : string;
    osname : string;
    ostype : string;
    processorCount : number;
    runtime : string;
    username : string;
    version : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    canOpenURL (url : string) : bool;
    createUUID () : string;
    fireEvent (name : string, event : any) : void;
    getAddress () : string;
    getArchitecture () : string;
    getAvailableMemory () : number;
    getBatteryLevel () : number;
    getBatteryMonitoring () : bool;
    getBatteryState () : number;
    getBubbleParent () : bool;
    getDisplayCaps () : TitaniumPlatformDisplayCapsStatic;
    getId () : string;
    getLocale () : string;
    getMacaddress () : string;
    getManufacturer () : string;
    getModel () : string;
    getName () : string;
    getNetmask () : string;
    getOsname () : string;
    getOstype () : string;
    getProcessorCount () : number;
    getRuntime () : string;
    getUsername () : string;
    getVersion () : string;
    is24HourTimeFormat () : bool;
    openURL (url : string) : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBatteryMonitoring (batteryMonitoring : bool) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumCloudPushStatic {
    bubbleParent : bool;
    enabled : bool;
    focusAppOnPush : bool;
    showAppOnTrayClick : bool;
    showTrayNotification : bool;
    showTrayNotificationsWhenFocused : bool;
    singleCallback : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getEnabled () : bool;
    getFocusAppOnPush () : bool;
    getShowAppOnTrayClick () : bool;
    getShowTrayNotification () : bool;
    getShowTrayNotificationsWhenFocused () : bool;
    getSingleCallback () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    retrieveDeviceToken (config : CloudPushNotificationConfigStatic) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setEnabled (enabled : bool) : void;
    setFocusAppOnPush (focusAppOnPush : bool) : void;
    setShowAppOnTrayClick (showAppOnTrayClick : bool) : void;
    setShowTrayNotification (showTrayNotification : bool) : void;
    setShowTrayNotificationsWhenFocused (showTrayNotificationsWhenFocused : bool) : void;
    setSingleCallback (singleCallback : bool) : void;
}
declare interface TitaniumFilesystemFileStatic {
    bubbleParent : bool;
    executable : bool;
    hidden : bool;
    name : string;
    nativePath : string;
    parent : TitaniumFilesystemFileStatic;
    readonly : bool;
    remoteBackup : bool;
    size : number;
    symbolicLink : bool;
    writable : bool;
    writeable : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    append (data : string) : bool;
    applyProperties (props : any) : void;
    copy (destinationPath : string) : bool;
    createDirectory () : bool;
    createFile () : bool;
    createTimestamp () : number;
    deleteDirectory (recursive? : bool) : bool;
    deleteFile () : bool;
    exists () : bool;
    extension () : string;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getDirectoryListing () : any[];
    getExecutable () : bool;
    getHidden () : bool;
    getName () : string;
    getNativePath () : string;
    getParent () : any;
    getReadonly () : bool;
    getRemoteBackup () : bool;
    getSize () : number;
    getSymbolicLink () : bool;
    getWritable () : bool;
    getWriteable () : bool;
    isDirectory () : bool;
    isFile () : bool;
    modificationTimestamp () : number;
    move (newpath : string) : bool;
    open (mode : number) : TitaniumFilesystemFileStreamStatic;
    read () : TitaniumBlobStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    rename (newname : string) : bool;
    resolve () : string;
    setBubbleParent (bubbleParent : bool) : void;
    setHidden (hidden : bool) : void;
    setRemoteBackup (remoteBackup : bool) : void;
    spaceAvailable () : number;
    write (data : string, append? : bool) : bool;
}
declare interface TitaniumFilesystemFileStreamStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    isReadable () : bool;
    isWriteable () : bool;
    read (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    write (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
}
declare interface TitaniumFilesystemStatic {
    File : TitaniumFilesystemFileStatic;
    FileStream : TitaniumFilesystemFileStreamStatic;
    MODE_APPEND : number;
    MODE_READ : number;
    MODE_WRITE : number;
    applicationCacheDirectory : string;
    applicationDataDirectory : string;
    applicationDirectory : string;
    applicationSupportDirectory : string;
    bubbleParent : bool;
    externalStorageDirectory : string;
    lineEnding : string;
    resRawDirectory : string;
    resourcesDirectory : string;
    separator : string;
    tempDirectory : string;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createTempDirectory () : TitaniumFilesystemFileStatic;
    createTempFile () : TitaniumFilesystemFileStatic;
    fireEvent (name : string, event : any) : void;
    getApplicationCacheDirectory () : string;
    getApplicationDataDirectory () : string;
    getApplicationDirectory () : string;
    getApplicationSupportDirectory () : string;
    getBubbleParent () : bool;
    getExternalStorageDirectory () : string;
    getFile (path : string) : TitaniumFilesystemFileStatic;
    getLineEnding () : string;
    getResRawDirectory () : string;
    getResourcesDirectory () : string;
    getSeparator () : string;
    getTempDirectory () : string;
    isExternalStoragePresent () : bool;
    openStream (mode : number, path : string) : TitaniumFilesystemFileStreamStatic;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumUtilsStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    base64decode (obj : string) : TitaniumBlobStatic;
    base64encode (obj : string) : TitaniumBlobStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    md5HexDigest (obj : string) : string;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    sha1 (obj : string) : string;
    sha256 (obj : string) : string;
}
declare interface TitaniumGestureStatic {
    bubbleParent : bool;
    landscape : bool;
    orientation : number;
    portrait : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getLandscape () : bool;
    getOrientation () : number;
    getPortrait () : bool;
    isLandscape () : bool;
    isPortrait () : bool;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
}
declare interface TitaniumBufferStreamStatic {
    bubbleParent : bool;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    close () : void;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    isReadable () : bool;
    isWriteable () : bool;
    read (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    write (buffer : TitaniumBufferStatic, offset? : number, length? : number) : number;
}
declare interface TitaniumStatic {
    XML : TitaniumXMLStatic;
    Android : TitaniumAndroidStatic;
    Facebook : TitaniumFacebookStatic;
    BlobStream : TitaniumBlobStreamStatic;
    UI : TitaniumUIStatic;
    Cloud : TitaniumCloudStatic;
    Media : TitaniumMediaStatic;
    Analytics : TitaniumAnalyticsStatic;
    API : TitaniumAPIStatic;
    Geolocation : TitaniumGeolocationStatic;
    App : TitaniumAppStatic;
    Buffer : TitaniumBufferStatic;
    Blob : TitaniumBlobStatic;
    Calendar : TitaniumCalendarStatic;
    Codec : TitaniumCodecStatic;
    Network : TitaniumNetworkStatic;
    Contacts : TitaniumContactsStatic;
    Locale : TitaniumLocaleStatic;
    Map : TitaniumMapStatic;
    Stream : TitaniumStreamStatic;
    Accelerometer : TitaniumAccelerometerStatic;
    Yahoo : TitaniumYahooStatic;
    IOStream : TitaniumIOStreamStatic;
    Database : TitaniumDatabaseStatic;
    Platform : TitaniumPlatformStatic;
    CloudPush : TitaniumCloudPushStatic;
    Filesystem : TitaniumFilesystemStatic;
    Utils : TitaniumUtilsStatic;
    Gesture : TitaniumGestureStatic;
    BufferStream : TitaniumBufferStreamStatic;
    bubbleParent : bool;
    buildDate : string;
    buildHash : string;
    userAgent : string;
    version : number;
    addEventListener (name : string, callback : (...args : any[]) => any) : void;
    applyProperties (props : any) : void;
    createBuffer (params : CreateBufferArgsStatic) : TitaniumBufferStatic;
    fireEvent (name : string, event : any) : void;
    getBubbleParent () : bool;
    getBuildDate () : string;
    getBuildHash () : string;
    getUserAgent () : string;
    getVersion () : number;
    include (name : string) : void;
    removeEventListener (name : string, callback : (...args : any[]) => any) : void;
    setBubbleParent (bubbleParent : bool) : void;
    setUserAgent (userAgent : string) : void;
}
declare interface CloudPostsResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    posts : any[];
    success : bool;
}
declare interface CloudSocialIntegrationsResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
    users : any[];
}
declare interface SuccessResponseStatic {
    code : number;
    error : string;
    success : bool;
}
declare interface CloudChatsResponseStatic {
    chats : any[];
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface CloudEventsResponseStatic {
    code : number;
    error : bool;
    events : any[];
    message : string;
    meta : any;
    success : bool;
}
declare interface BarItemTypeStatic {
    accessibilityLabel : string;
    enabled : bool;
    image : string;
    title : string;
    width : number;
}
declare interface ContactsAuthorizationResponseStatic {
    code : number;
    error : string;
    success : bool;
}
declare interface HideStatusBarParamsStatic {
    animated : bool;
    animationStyle : number;
}
declare interface CloudACLsResponseStatic {
    acls : any[];
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface TableViewIndexEntryStatic {
    index : number;
    title : string;
}
declare interface FacebookRESTResponsev1Static {
    error : string;
    method : string;
    result : string;
    success : bool;
}
declare interface MapLocationTypeStatic {
    animate : bool;
    latitude : number;
    latitudeDelta : number;
    longitude : number;
    longitudeDelta : number;
    regionFit : bool;
}
declare interface ListDataItemStatic {
    properties : TitaniumUIListItemStatic;
    template : string;
}
declare interface WriteCallbackArgsStatic {
    bytesProcessed : number;
    code : number;
    error : string;
    errorDescription : string;
    errorState : number;
    source : TitaniumIOStreamStatic;
    success : bool;
}
declare interface PushNotificationErrorArgStatic {
    code : number;
    error : string;
    success : bool;
    type : string;
}
declare interface WriteStreamCallbackArgsStatic {
    bytesProcessed : number;
    code : number;
    error : string;
    errorDescription : string;
    errorState : number;
    fromStream : TitaniumIOStreamStatic;
    success : bool;
    toStream : TitaniumIOStreamStatic;
}
declare interface MapRegionTypeStatic {
    latitude : number;
    latitudeDelta : number;
    longitude : number;
    longitudeDelta : number;
}
declare interface CameraMediaItemTypeStatic {
    code : number;
    cropRect : CropRectTypeStatic;
    error : string;
    media : TitaniumBlobStatic;
    mediaType : string;
    success : bool;
}
declare interface CropRectTypeStatic {
    height : number;
    width : number;
    x : number;
    y : number;
}
declare interface LocationResultsStatic {
    code : number;
    coords : LocationCoordinatesStatic;
    error : string;
    provider : LocationProviderDictStatic;
    success : bool;
}
declare interface HeadingResponseStatic {
    code : number;
    error : string;
    heading : HeadingDataStatic;
    success : bool;
}
declare interface CloudStreamProgressStatic {
    progress : number;
    url : string;
}
declare interface CloudPushNotificationsResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface EncodeNumberDictStatic {
    byteOrder : number;
    dest : TitaniumBufferStatic;
    position : number;
    source : number;
    type : string;
}
declare interface MusicLibraryResponseTypeStatic {
    items : any[];
    representative : TitaniumMediaItemStatic;
    types : number;
}
declare interface CloudEmailsResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface RecurrenceEndDictionaryStatic {
    endDate : Date;
    occurrenceCount : number;
}
declare interface GradientColorRefStatic {
    color : string;
    offset : number;
}
declare interface FontStatic {
    fontFamily : string;
    fontSize : number;
    fontStyle : string;
    fontWeight : string;
}
declare interface CloudPhotoCollectionsPhotosResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    photos : any[];
    success : bool;
}
declare interface CloudEventOccurrencesResponseStatic {
    code : number;
    error : bool;
    event_occurrences : any[];
    message : string;
    meta : any;
    success : bool;
}
declare interface CloudPlacesResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    places : any[];
    success : bool;
}
declare interface DecodeStringDictStatic {
    charset : string;
    length : number;
    position : number;
    source : TitaniumBufferStatic;
}
declare interface CloudUsersResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
    users : any[];
}
declare interface TextAreaSelectedParamsStatic {
    length : number;
    location : number;
}
declare interface TableViewContentInsetOptionStatic {
    animated : bool;
    duration : number;
}
declare interface CloudCheckinsResponseStatic {
    checkins : any[];
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface ShowContactsParamsStatic {
    animated : bool;
    cancel : (...args : any[]) => any;
    fields : any[];
    selectedPerson : (...args : any[]) => any;
    selectedProperty : (...args : any[]) => any;
}
declare interface CloudFriendRequestsResponseStatic {
    code : number;
    error : bool;
    friend_requests : any[];
    message : string;
    meta : any;
    success : bool;
}
declare interface JSONStatic {
    parse (text : string, reviver : (...args : any[]) => any) : any;
    stringify (value : any, replacer? : (...args : any[]) => any, space? : number) : string;
}
declare interface CreateBufferArgsStatic {
    byteOrder : number;
    length : number;
    type : string;
    value : string;
}
declare interface CameraOptionsTypeStatic {
    allowEditing : bool;
    animated : bool;
    arrowDirection : number;
    autohide : bool;
    cancel : (...args : any[]) => any;
    error : (...args : any[]) => any;
    inPopOver : bool;
    mediaTypes : any[];
    overlay : TitaniumUIViewStatic;
    popoverView : TitaniumUIViewStatic;
    saveToPhotoGallery : bool;
    showControls : bool;
    success : (...args : any[]) => any;
    transform : TitaniumUI_2DMatrixStatic;
    videoMaximumDuration : number;
    videoQuality : number;
}
declare interface HeadingDataStatic {
    accuracy : number;
    magneticHeading : number;
    timestamp : number;
    trueHeading : number;
    x : number;
    y : number;
    z : number;
}
declare interface CloudChatGroupsResponseStatic {
    chat_groups : any[];
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface FacebookDialogResponsev1Static {
    cancelled : bool;
    error : string;
    result : string;
    success : bool;
}
declare interface CloudPushNotificationConfigStatic {
    error : (...args : any[]) => any;
    success : (...args : any[]) => any;
}
declare interface FacebookGraphResponsev1Static {
    error : string;
    path : string;
    result : string;
    success : bool;
}
declare interface CloudFilesResponseStatic {
    code : number;
    error : bool;
    files : any[];
    message : string;
    meta : any;
    success : bool;
}
declare interface CloudReviewsResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    reviews : any[];
    success : bool;
}
declare interface ItemTemplateStatic {
    childTemplates : any[];
    events : any;
    properties : TitaniumUIListItemStatic;
}
declare interface NotificationParamsStatic {
    alertAction : string;
    alertBody : string;
    alertLaunchImage : string;
    badge : number;
    date : Date;
    repeat : string;
    sound : string;
    timezone : string;
    userInfo : any;
}
declare interface EventsAuthorizationResponseStatic {
    code : number;
    error : string;
    success : bool;
}
declare interface PlayerQueueStatic {
    items : any[];
}
declare interface OpenWindowParamsStatic {
    activityEnterAnimation : number;
    activityExitAnimation : number;
    animated : bool;
    bottom : number;
    fullscreen : bool;
    height : number;
    left : number;
    modal : bool;
    modalStyle : number;
    modalTransitionStyle : number;
    navBarHidden : bool;
    right : number;
    top : number;
    transition : number;
    width : number;
}
declare interface StringStatic {
    format (formatString : string, ...value : string[]) : string;
    formatCurrency (value : number) : string;
    formatDate (date : Date, format? : string) : string;
    formatDecimal (value : number, locale? : string, pattern? : string) : string;
    formatTime (date : Date, format? : string) : string;
}
declare interface CoverFlowImageTypeStatic {
    height : number;
    image : string;
    width : number;
}
declare interface CloudPhotosResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    photos : any[];
    success : bool;
}
declare interface PushNotificationConfigStatic {
    callback : (...args : any[]) => any;
    error : (...args : any[]) => any;
    success : (...args : any[]) => any;
    types : any[];
}
declare interface MatrixCreationDictStatic {
    anchorPoint : any;
    rotate : number;
    scale : number;
}
declare interface ReadCallbackArgsStatic {
    bytesProcessed : number;
    code : number;
    error : string;
    errorDescription : string;
    errorState : number;
    source : TitaniumIOStreamStatic;
    success : bool;
}
declare interface CloudACLsCheckResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    permission : any;
    success : bool;
}
declare interface ViewTemplateStatic {
    bindId : string;
    childTemplates : any[];
    events : any;
    properties : any;
    type : string;
}
declare interface MediaQueryTypeStatic {
    albumArtist : MediaQueryInfoTypeStatic;
    albumTitle : MediaQueryInfoTypeStatic;
    artist : MediaQueryInfoTypeStatic;
    composer : MediaQueryInfoTypeStatic;
    genre : MediaQueryInfoTypeStatic;
    grouping : number;
    isCompilation : MediaQueryInfoTypeStatic;
    mediaType : MediaQueryInfoTypeStatic;
    title : MediaQueryInfoTypeStatic;
}
declare interface WebAPIErrorStatic {
    code : number;
    message : string;
    name : string;
}
declare interface GradientStatic {
    backfillEnd : bool;
    backfillStart : bool;
    colors : any[];
    endPoint : PointStatic;
    endRadius : number;
    startPoint : PointStatic;
    startRadius : number;
    type : string;
}
declare interface HideParamsStatic {
    animated : bool;
}
declare interface CloudObjectsResponseStatic {
    classname : any[];
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface CloudPhotoCollectionsResponseStatic {
    code : number;
    collections : any[];
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface CloudUsersSecureResponseStatic {
    accessToken : string;
    code : number;
    error : bool;
    expiresIn : number;
    message : string;
    meta : any;
    success : bool;
}
declare interface ShowStatusBarParamsStatic {
    animated : bool;
    animationStyle : number;
}
declare interface CloudClientsResponseStatic {
    code : number;
    error : bool;
    ip_address : string;
    location : any;
    message : string;
    meta : any;
    success : bool;
}
declare interface AcceptDictStatic {
    error : (...args : any[]) => any;
    timeout : number;
}
declare interface CloudStatusesResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    statuses : any[];
    success : bool;
}
declare interface DictionaryStatic {
}
declare interface MapPointTypeStatic {
    latitude : number;
    longitude : number;
}
declare interface CloudKeyValuesResponseStatic {
    code : number;
    error : bool;
    keyvalues : any[];
    message : string;
    meta : any;
    success : bool;
}
declare interface MediaQueryInfoTypeStatic {
    exact : bool;
    value : number;
}
declare interface DimensionStatic {
    height : number;
    width : number;
    x : number;
    y : number;
}
declare interface CloudResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
}
declare interface GeocodedAddressStatic {
    address : string;
    city : string;
    country : string;
    countryCode : string;
    country_code : string;
    displayAddress : string;
    latitude : string;
    longitude : string;
    postalCode : string;
    region1 : string;
    region2 : string;
    street : string;
    street1 : string;
    zipcode : string;
}
declare interface PumpCallbackArgsStatic {
    buffer : TitaniumBufferStatic;
    bytesProcessed : number;
    code : number;
    error : string;
    errorDescription : string;
    errorState : number;
    source : TitaniumIOStreamStatic;
    success : bool;
    totalBytesProcessed : number;
}
declare interface ReverseGeocodeResponseStatic {
    code : number;
    error : string;
    places : any[];
    success : bool;
}
declare interface MusicLibraryOptionsTypeStatic {
    allowMultipleSelections : bool;
    animated : bool;
    autohide : bool;
    cancel : (...args : any[]) => any;
    error : (...args : any[]) => any;
    mediaTypes : number;
    success : (...args : any[]) => any;
}
declare interface LaunchOptionsStatic {
    launchOptionsLocationKey : bool;
    source : string;
    url : string;
}
declare interface CloudPushNotificationErrorArgStatic {
    error : string;
}
declare interface ZoomScaleOptionStatic {
    animated : bool;
}
declare interface LocationCoordinatesStatic {
    accuracy : number;
    altitude : number;
    altitudeAccuracy : number;
    heading : number;
    latitude : number;
    longitude : number;
    speed : number;
    timestamp : number;
}
declare interface ActivityResultStatic {
    intent : TitaniumAndroidIntentStatic;
    requestCode : number;
    resultCode : number;
}
declare interface PointStatic {
    x : number;
    y : number;
}
declare interface CloudUsersSecureDialogStatic {
    title : string;
}
declare interface PhotoGalleryOptionsTypeStatic {
    allowEditing : bool;
    animated : bool;
    arrowDirection : number;
    autohide : bool;
    cancel : (...args : any[]) => any;
    error : (...args : any[]) => any;
    mediaTypes : any[];
    popoverView : TitaniumUIViewStatic;
    success : (...args : any[]) => any;
}
declare interface ThumbnailResponseStatic {
    code : number;
    error : string;
    image : TitaniumBlobStatic;
    success : bool;
    time : number;
}
declare interface CloudPushNotificationSuccessArgStatic {
    deviceToken : string;
}
declare interface YQLResponseStatic {
    code : number;
    data : any;
    error : string;
    message : string;
    success : bool;
}
declare interface ListViewAnimationPropertiesStatic {
    animated : bool;
    animationStyle : number;
    position : number;
}
declare interface PreviewImageErrorStatic {
    code : number;
    error : string;
    message : string;
    success : bool;
}
declare interface ErrorResponseStatic {
    code : number;
    error : string;
    success : bool;
}
declare interface ShowParamsStatic {
    animated : bool;
    rect : any;
    view : TitaniumUIViewStatic;
}
declare interface AcceptedCallbackArgsStatic {
    inbound : TitaniumNetworkSocketTCPStatic;
    socket : TitaniumNetworkSocketTCPStatic;
}
declare interface CreateStreamArgsStatic {
    mode : number;
    source : TitaniumBlobStatic;
}
declare interface FailureResponseStatic {
    code : number;
    error : string;
    success : bool;
}
declare interface ForwardGeocodeResponseStatic {
    accuracy : number;
    address : string;
    city : string;
    code : number;
    country : string;
    countryCode : string;
    country_code : string;
    displayAddress : string;
    error : string;
    latitude : string;
    longitude : string;
    postalCode : string;
    region1 : string;
    region2 : string;
    street : string;
    street1 : string;
    success : bool;
}
declare interface TableViewEdgeInsetsStatic {
    bottom : number;
    left : number;
    right : number;
    top : number;
}
declare interface PushNotificationDataStatic {
    data : any;
    inBackground : bool;
}
declare interface MovieSizeStatic {
    height : number;
    width : number;
}
declare interface ConnectedCallbackArgsStatic {
    socket : TitaniumNetworkSocketTCPStatic;
}
declare interface CloudMessagesResponseStatic {
    code : number;
    error : bool;
    message : string;
    messages : any[];
    meta : any;
    success : bool;
}
declare interface MapRouteTypeStatic {
    color : string;
    name : string;
    points : any[];
    width : number;
}
declare interface ImageAsCroppedDictStatic {
    height : number;
    width : number;
    x : number;
    y : number;
}
declare interface DaysOfTheWeekDictionaryStatic {
    daysOfWeek : number;
    week : number;
}
declare interface ModulesStatic {
}
declare interface PreviewImageOptionsStatic {
    error : (...args : any[]) => any;
    image : TitaniumBlobStatic;
    success : (...args : any[]) => any;
}
declare interface PushNotificationSuccessArgStatic {
    code : number;
    deviceToken : string;
    error : string;
    success : bool;
    type : string;
}
declare interface ScreenshotResultStatic {
    media : TitaniumBlobStatic;
}
declare interface ConsoleStatic {
    debug (message : any) : void;
    error (message : any) : void;
    info (message : any) : void;
    log (message : any) : void;
    warn (message : any) : void;
}
declare interface ErrorCallbackArgsStatic {
    code : number;
    error : string;
    errorCode : number;
    socket : TitaniumNetworkSocketTCPStatic;
    success : bool;
}
declare interface DecodeNumberDictStatic {
    byteOrder : number;
    position : number;
    source : TitaniumBufferStatic;
    type : string;
}
declare interface ContentOffsetOptionStatic {
    animated : bool;
}
declare interface TableViewAnimationPropertiesStatic {
    animated : bool;
    animationStyle : number;
    position : number;
}
declare interface ServiceIntentOptionsStatic {
    startMode : number;
    url : string;
}
declare interface EncodeStringDictStatic {
    charset : string;
    dest : TitaniumBufferStatic;
    destPosition : number;
    source : string;
    sourceLength : number;
    sourcePosition : number;
}
declare interface CloudFriendsResponseStatic {
    code : number;
    error : bool;
    message : string;
    meta : any;
    success : bool;
    users : any[];
}
declare interface MediaScannerResponseStatic {
    path : string;
    uri : string;
}
declare interface LocationProviderDictStatic {
    accuracy : number;
    name : string;
    power : number;
}
declare var Titanium : TitaniumStatic;
declare var CloudPostsResponse : CloudPostsResponseStatic;
declare var CloudSocialIntegrationsResponse : CloudSocialIntegrationsResponseStatic;
declare var SuccessResponse : SuccessResponseStatic;
declare var CloudChatsResponse : CloudChatsResponseStatic;
declare var CloudEventsResponse : CloudEventsResponseStatic;
declare var BarItemType : BarItemTypeStatic;
declare var ContactsAuthorizationResponse : ContactsAuthorizationResponseStatic;
declare var hideStatusBarParams : HideStatusBarParamsStatic;
declare var CloudACLsResponse : CloudACLsResponseStatic;
declare var TableViewIndexEntry : TableViewIndexEntryStatic;
declare var FacebookRESTResponsev1 : FacebookRESTResponsev1Static;
declare var MapLocationType : MapLocationTypeStatic;
declare var ListDataItem : ListDataItemStatic;
declare var WriteCallbackArgs : WriteCallbackArgsStatic;
declare var PushNotificationErrorArg : PushNotificationErrorArgStatic;
declare var WriteStreamCallbackArgs : WriteStreamCallbackArgsStatic;
declare var MapRegionType : MapRegionTypeStatic;
declare var CameraMediaItemType : CameraMediaItemTypeStatic;
declare var CropRectType : CropRectTypeStatic;
declare var LocationResults : LocationResultsStatic;
declare var HeadingResponse : HeadingResponseStatic;
declare var CloudStreamProgress : CloudStreamProgressStatic;
declare var CloudPushNotificationsResponse : CloudPushNotificationsResponseStatic;
declare var EncodeNumberDict : EncodeNumberDictStatic;
declare var MusicLibraryResponseType : MusicLibraryResponseTypeStatic;
declare var CloudEmailsResponse : CloudEmailsResponseStatic;
declare var recurrenceEndDictionary : RecurrenceEndDictionaryStatic;
declare var GradientColorRef : GradientColorRefStatic;
declare var Font : FontStatic;
declare var CloudPhotoCollectionsPhotosResponse : CloudPhotoCollectionsPhotosResponseStatic;
declare var CloudEventOccurrencesResponse : CloudEventOccurrencesResponseStatic;
declare var CloudPlacesResponse : CloudPlacesResponseStatic;
declare var DecodeStringDict : DecodeStringDictStatic;
declare var CloudUsersResponse : CloudUsersResponseStatic;
declare var textAreaSelectedParams : TextAreaSelectedParamsStatic;
declare var TableViewContentInsetOption : TableViewContentInsetOptionStatic;
declare var CloudCheckinsResponse : CloudCheckinsResponseStatic;
declare var showContactsParams : ShowContactsParamsStatic;
declare var CloudFriendRequestsResponse : CloudFriendRequestsResponseStatic;
declare var JSON : JSONStatic;
declare var CreateBufferArgs : CreateBufferArgsStatic;
declare var CameraOptionsType : CameraOptionsTypeStatic;
declare var HeadingData : HeadingDataStatic;
declare var CloudChatGroupsResponse : CloudChatGroupsResponseStatic;
declare var FacebookDialogResponsev1 : FacebookDialogResponsev1Static;
declare var CloudPushNotificationConfig : CloudPushNotificationConfigStatic;
declare var FacebookGraphResponsev1 : FacebookGraphResponsev1Static;
declare var CloudFilesResponse : CloudFilesResponseStatic;
declare var CloudReviewsResponse : CloudReviewsResponseStatic;
declare var ItemTemplate : ItemTemplateStatic;
declare var NotificationParams : NotificationParamsStatic;
declare var EventsAuthorizationResponse : EventsAuthorizationResponseStatic;
declare var PlayerQueue : PlayerQueueStatic;
declare var openWindowParams : OpenWindowParamsStatic;
declare var String : StringStatic;
declare var CoverFlowImageType : CoverFlowImageTypeStatic;
declare var CloudPhotosResponse : CloudPhotosResponseStatic;
declare var PushNotificationConfig : PushNotificationConfigStatic;
declare var MatrixCreationDict : MatrixCreationDictStatic;
declare var ReadCallbackArgs : ReadCallbackArgsStatic;
declare var CloudACLsCheckResponse : CloudACLsCheckResponseStatic;
declare var ViewTemplate : ViewTemplateStatic;
declare var MediaQueryType : MediaQueryTypeStatic;
declare var WebAPIError : WebAPIErrorStatic;
declare var Gradient : GradientStatic;
declare var hideParams : HideParamsStatic;
declare var CloudObjectsResponse : CloudObjectsResponseStatic;
declare var CloudPhotoCollectionsResponse : CloudPhotoCollectionsResponseStatic;
declare var CloudUsersSecureResponse : CloudUsersSecureResponseStatic;
declare var showStatusBarParams : ShowStatusBarParamsStatic;
declare var CloudClientsResponse : CloudClientsResponseStatic;
declare var AcceptDict : AcceptDictStatic;
declare var CloudStatusesResponse : CloudStatusesResponseStatic;
declare var Dictionary : DictionaryStatic;
declare var MapPointType : MapPointTypeStatic;
declare var CloudKeyValuesResponse : CloudKeyValuesResponseStatic;
declare var MediaQueryInfoType : MediaQueryInfoTypeStatic;
declare var Dimension : DimensionStatic;
declare var CloudResponse : CloudResponseStatic;
declare var GeocodedAddress : GeocodedAddressStatic;
declare var PumpCallbackArgs : PumpCallbackArgsStatic;
declare var ReverseGeocodeResponse : ReverseGeocodeResponseStatic;
declare var MusicLibraryOptionsType : MusicLibraryOptionsTypeStatic;
declare var launchOptions : LaunchOptionsStatic;
declare var CloudPushNotificationErrorArg : CloudPushNotificationErrorArgStatic;
declare var zoomScaleOption : ZoomScaleOptionStatic;
declare var LocationCoordinates : LocationCoordinatesStatic;
declare var ActivityResult : ActivityResultStatic;
declare var Point : PointStatic;
declare var CloudUsersSecureDialog : CloudUsersSecureDialogStatic;
declare var PhotoGalleryOptionsType : PhotoGalleryOptionsTypeStatic;
declare var ThumbnailResponse : ThumbnailResponseStatic;
declare var CloudPushNotificationSuccessArg : CloudPushNotificationSuccessArgStatic;
declare var YQLResponse : YQLResponseStatic;
declare var ListViewAnimationProperties : ListViewAnimationPropertiesStatic;
declare var PreviewImageError : PreviewImageErrorStatic;
declare var ErrorResponse : ErrorResponseStatic;
declare var showParams : ShowParamsStatic;
declare var AcceptedCallbackArgs : AcceptedCallbackArgsStatic;
declare var CreateStreamArgs : CreateStreamArgsStatic;
declare var FailureResponse : FailureResponseStatic;
declare var ForwardGeocodeResponse : ForwardGeocodeResponseStatic;
declare var TableViewEdgeInsets : TableViewEdgeInsetsStatic;
declare var PushNotificationData : PushNotificationDataStatic;
declare var MovieSize : MovieSizeStatic;
declare var ConnectedCallbackArgs : ConnectedCallbackArgsStatic;
declare var CloudMessagesResponse : CloudMessagesResponseStatic;
declare var MapRouteType : MapRouteTypeStatic;
declare var ImageAsCroppedDict : ImageAsCroppedDictStatic;
declare var daysOfTheWeekDictionary : DaysOfTheWeekDictionaryStatic;
declare var Modules : ModulesStatic;
declare var PreviewImageOptions : PreviewImageOptionsStatic;
declare var PushNotificationSuccessArg : PushNotificationSuccessArgStatic;
declare var ScreenshotResult : ScreenshotResultStatic;
declare var console : ConsoleStatic;
declare var ErrorCallbackArgs : ErrorCallbackArgsStatic;
declare var DecodeNumberDict : DecodeNumberDictStatic;
declare var contentOffsetOption : ContentOffsetOptionStatic;
declare var TableViewAnimationProperties : TableViewAnimationPropertiesStatic;
declare var ServiceIntentOptions : ServiceIntentOptionsStatic;
declare var EncodeStringDict : EncodeStringDictStatic;
declare var CloudFriendsResponse : CloudFriendsResponseStatic;
declare var MediaScannerResponse : MediaScannerResponseStatic;
declare var LocationProviderDict : LocationProviderDictStatic;
declare function L (key : string, hint? : string) : string;
declare function alert (message : string) : void;
declare var Ti : TitaniumStatic;

